{"docstore/metadata": {"ab8ed873-adea-41a3-8ec8-d02c36eee2e7": {"doc_hash": "555c48314d5c2fe982a5828b2372acdbf4608b3858428694944615c5a52dc6c6"}, "408a03cf-42d0-42fd-8042-864805fa05d0": {"doc_hash": "4ce53119a13b4cb3915f29f1204542f20f74556387fc5d6b387fc95324b05d6d"}, "99fe5578-4e9c-46d4-b8aa-6fb261c2ef82": {"doc_hash": "a34c763f1ad9013af0ee93bd82f5ecbc810906f6ca0bf040904e01479ea69093"}, "0c4fe3d0-2f55-47a2-babb-a36574d3b16b": {"doc_hash": "3d726b2055a0bf0dd8188302a12de808525a577c3ec682a320de12fd77671ba1"}, "09eb1de5-f834-41c0-8c98-5f5223fe898d": {"doc_hash": "426fee84b4d11d99db629ada8a5bb9d60db46923c50dcf19d397c0462c439ec8"}, "634c2183-6e04-4993-8f17-b001eb34ce52": {"doc_hash": "bc1b5064422e61004c5ed5579d4f9545107a7f76d824090805034a143c30b161"}, "e0580435-5991-4673-8bdf-4d2eba245324": {"doc_hash": "562807840a79f79f5b09afc7640b23ea2b1a66020b7bc64b847dc4654fc3c218"}, "46a4d588-8d50-4327-ae04-3d6956ccde1c": {"doc_hash": "31da1ee7701f2e076bd3c38ed08208f8940beabf78238a91ca0335b52ac499bb"}, "87c28f1f-616e-4153-800a-f0fc434c258f": {"doc_hash": "7efae506c6e424a11b4194b8e6fd79c23832675b3fd03452219ef49df4623cad"}, "0ed883a8-a9ea-4fa3-b68e-0059b75f28da": {"doc_hash": "0ed92b47c28ac9af18139818ea378bd9e40ca3a266db7f038166807d14541dd6"}, "0a64fe94-e2c4-4a2f-a988-533b99728d70": {"doc_hash": "5163134e3db551bb6608514252dfe5e9012edc1ed5d4b7012de3e3b56b0b772c"}, "62ba12ab-4226-44e4-943f-3ef6ff5875c4": {"doc_hash": "9dee2cd2a1683eedbc5f326e4c7281fc6108c6dbf5dc2e3dd1a2909dd925fc51"}, "0211fe7f-cede-4642-a818-26a0487747c9": {"doc_hash": "3737a35b144faa7646a2dfda9913bb25043166254effe7cb7fc0b69dd4f5efda"}, "f01c9740-3279-4e2c-9c0c-5b0253123641": {"doc_hash": "6f9a322b7a3ebf37bebc032ee3251a3978f91c1d23f421fe321cecd7b074e6bd"}, "78c74be0-8a8d-423e-8a3a-f48ffe55ea6c": {"doc_hash": "dc623a111d0afaaf1046207b4649e64b9f79271228b0f6b235160f16588bd80d"}, "24963666-f4f5-4927-9648-3928e2ab9344": {"doc_hash": "c2fb620b22a04ae8b08a6e038a8d823cf1c58aeb52e1e9daa73e12511aace51e"}, "cdabb918-fc54-479b-aaca-2616123db8b4": {"doc_hash": "769f9782820cb12796505ff195253773a16ef6f69e607a3d84382b4f2896f4ef"}, "799b815b-3656-41d0-b00d-af28d12ac079": {"doc_hash": "945d7a55381558feece6b564e9dcd951747dcaf885ab879e817dccfbe4552b7a"}, "6bdbd12d-f197-483b-a521-6d427d4bf052": {"doc_hash": "eb0437e17f555e3912baf4b634d5708533e5f75ffb96562ef60046e8774db830"}, "bcbe422a-d602-4979-bd3e-6c4543782b7d": {"doc_hash": "074b13c5604d632384ae9abb16acac5504e00f522902f37c126b039e70f21ae2"}, "61f5b9af-3b07-40a7-a6eb-40e5966bcedd": {"doc_hash": "06572f8f721ece69e75571069a30d26a7ca707487b70c7aa9386185cff851e90"}, "bba6b4c4-03af-4769-96e6-6ed7e6dd0485": {"doc_hash": "8aa2aa43dd18a95c62374c026e97ccc3dd244d1114ac2e415d959dbd702319cc"}, "2dd2a0c1-e166-4c6d-87f7-0966b2c4b959": {"doc_hash": "36e5e6a8215a71f36259ef2ad90f1de6d3f900ebd15c69b1377844fdfaac04f0"}, "440814f2-187a-4dca-ad87-ffb3c0f77bbf": {"doc_hash": "5bdb4557b2512e188a9e478422fbc69d390976c72375c00b84ddd92be3a91804"}, "b1c6269c-97db-449d-b299-1e72edb83239": {"doc_hash": "8080d0bd2b7bed83e03f457f1c18f7262a22ba2dd7ded0da53139664384a8808"}, "95062667-6bc9-44a7-bd6b-506e4d0f07dd": {"doc_hash": "70cc362508cae19bc5fb108429b23f6e65c80d9df7a5cfc87aa2381ad3067b63"}, "112d9d33-aab9-4557-9695-98aa1cdc3f77": {"doc_hash": "3e3e0e630ddc83e6e3cf6ccf5010fb5c7adb4da9a9f3205530d1312e613fedbf"}, "9dfeb9aa-f1d8-44ba-ac40-22c25185e8ca": {"doc_hash": "962617954b7a8b20555d322cbb7f5f25f8c0a28003cf04adae80896e38fa39c2"}, "4c932706-3b61-4058-812d-a5a211d045e6": {"doc_hash": "1ff4322d58ad0222ba561ff53dfa1fa0f1f4deb3c3fec187f9dc152f646cbab9"}, "8b9e5d7e-72c8-4c76-8be3-651361362351": {"doc_hash": "6148c94226ceefdbb1ce73af24c94404c6b34750f596a69d268ef67112b401f0"}, "48471b64-bfa4-4ad9-a3f7-6b01e0b0ef3c": {"doc_hash": "356868ec7b6b155491c9cc934e371091c1ea82f78a2fab54418426d13828b727"}, "d7067e68-1a37-4ccf-9874-93ab9bba84fa": {"doc_hash": "c9e0994d58b808d5e872ee24aea694502a9a81fe5bfb46a9edcccf28283d5bf5"}, "9aec2e82-1e7d-417c-bc8e-76da10055d04": {"doc_hash": "bc6b0b6cbd3fac15e9905e59fe0953483bb1f8b6b3f62123f77e4edd0879de33"}, "b986dc2a-50f9-48a7-b357-a3176c3e8411": {"doc_hash": "2a918c5f1ef16a7c3000a1d412c417a4acd5067d879cf244b24024e4c6ca6d8c"}, "f1186b8d-993d-4545-8516-06de9596ec52": {"doc_hash": "74c52af46e7d1d11369ee280414f1b2f98fab5c2093cdc6f03524d8f9f5b2903"}, "b1588156-7774-45bf-b9ca-8f1048d44312": {"doc_hash": "96d37145697b9778fccfec46a588343131d3db3cdf8aec043e7573e0b28564aa"}, "f5ad317b-bc3f-47f3-8936-c213e2872a9b": {"doc_hash": "bf9ba3c5182b9a4a335bd40e03999159b3b44176cc6804b403a1b2e29e6c7e38"}, "fc4fb852-f131-4a48-b4bd-46d3b6c6583c": {"doc_hash": "07d1512220489d6654535f3ef927e485627dcd21d122a4c68c806ca896980b0a"}, "c5467f3a-a485-4c90-b9dd-fdadc07b9a01": {"doc_hash": "af26c7fa8849545b5a6ae80f827ac33616db0721e66805afe0e971c2ed2b8bae"}, "9f4c5eb1-0297-4808-9bac-b7f81e50638f": {"doc_hash": "a6c299283bdf36fea6235e37ce954700df9eb6b5b8501be60119c0f7f6d3b75d"}, "4210146d-9cbe-42cf-93d0-12eba63acab5": {"doc_hash": "8b67a900b3f707beaf80dd9afa226e8c967f520274594a3ac0c51b34ac9cbdd2"}, "7f3241a1-910b-44d6-8dfe-c1d3e6a19639": {"doc_hash": "e8944d36c36cfbe8df9849f799a8520f67fdfbd0c6663d142c8443cba498624e"}, "56d3bb6f-1558-4c15-a582-5c244046cc8f": {"doc_hash": "46b58016ab9e04f861e224f6a77bbef143d0d38a225368e34216ab498c198f94"}, "f102f05b-5a20-449b-8f90-0b14894aef47": {"doc_hash": "ec733c6dd4b127f2c549dcf2ec56319eb7a415e80ff3cd051e168317ada97006"}, "aa03bec3-b246-416d-8186-1b220a9c117b": {"doc_hash": "21ecd52129111d988fea4897aa78b37f3a8f4193295b2748623d6ba3fe736075"}, "c679ba10-a80c-4e11-b898-83c56e7496be": {"doc_hash": "0fde2727e2c39f435cb485894cac64f87399ffbdf7c92b18324e7dbc538f798e"}, "d58834da-21eb-4aae-8957-faa9017de181": {"doc_hash": "0641ea353311d054c779790e6b9b50846ee2b394aae8eb3e2dfb2afd6e89bafc"}, "662cb779-47c8-4938-99ed-399605f099a6": {"doc_hash": "3a105353a88df5703530198c30e1095f415e6853f5e980dfb43d6fcb0ef0035c"}, "5e74ae15-f586-40b6-81e6-a3e5b23d0ef1": {"doc_hash": "b1f0627c21257712cdb79d5d370f6d023255e6b4b79c89cfcf003c71cb69020b"}, "55243d0f-b4da-46f9-a52d-f10344826f73": {"doc_hash": "9e28df13e872f87f34ba4d2c2b0977981033aa1af91caabc60e826056c6dd92a"}, "da9f41af-8f83-4aba-bd8a-5a2374b0155f": {"doc_hash": "4203971eae081d2439511d6219560a2ee7eee58bb2d597b222f0a310fc618147"}, "6e823a71-ac99-4804-a7e7-898bcdb561fa": {"doc_hash": "c67312bf190395f2cd3efa630fb4ad3001c2bc5c41d96190262eb5a3efe9c903"}, "bc67d9ae-d08f-43bd-bb0f-6af9b8266375": {"doc_hash": "73929f9aa3c2ae64c2d5abff08046fc53c872068147d6124661402b8596bfdd5"}, "ae700bcc-f157-401b-a3df-25ae4f9b2bc5": {"doc_hash": "06c7410feb2c21ee63f12f6eb41e1fbaf8c334ff261d56ed6984ab9659d1a418"}, "3f5fbd7b-6020-4eaa-b05d-9d9bedb4373a": {"doc_hash": "a4c4dc4c777f3df78e355d4b433a521788ccae684d04f2679a5e288ed046371d"}, "7ecca624-7287-46f1-88a3-9e332bf7dc5d": {"doc_hash": "0e0d0b6a1c784f0d35ee154d60bdb3a459463bace12e79ccbbcee7d49277fd30"}, "b51db9bd-2847-47e5-b277-7341bd57d4f3": {"doc_hash": "82d4b1695c3d9a149cba8043e9e9d5a4ee492f4155e93937d48311b052afb269"}, "63f20766-d72d-4e19-83c2-406df7cae3c9": {"doc_hash": "57542f053fb310111364d0bd308f91c715f664605eb981cacfdf8a00b989429b"}, "fdaaeb81-9630-4234-b036-adcd8bb52d18": {"doc_hash": "cd3ca11469e3a4bfba5b5f4947fcd496992b6801c3b5bae6025bbe2041dd30e8"}, "b6ad252e-ca03-4486-aee3-332d1da28f4d": {"doc_hash": "4ffd8734b4f113c22068fec47edb86aa37e76629002c0747dcdc13cadefcc459"}, "0ee938f7-618a-4001-b141-6f83386c0d74": {"doc_hash": "d50974dab5645ad703433c695c2c1c9141aa614f75230c62b64677ab5ce70cda"}, "4cd8e044-84e7-4012-b957-d4a3c5cc0dfe": {"doc_hash": "ab5666e519ea729dbfd94d8888ce9bb72c9d8ef794713e00ae1bc8dbf500d6c2"}, "747fc7cd-8030-4720-aeae-1226b5880e17": {"doc_hash": "70788aef98ec023869c36077cbf5263a7d22d425fa516826220cef892b82563a"}, "b48ccaa1-0eb8-4d59-9f2a-b6e8a536da7a": {"doc_hash": "318221b47ad2908198d1539161a92da6f0611a9a191afe6de5f2c1049a771baf"}, "e3012b5d-a520-4565-a8b8-31470fd28f59": {"doc_hash": "1d301319b4b709c60d79fafb7f27e4f11054b62da466f94ee4ca0f29a17740d6"}, "0037f04c-a0df-42fb-b031-a7b36a28b94f": {"doc_hash": "c7900823225082fc62a75efde217ec5e1e5cb967a4be007c8e718b995c1c87ba"}, "da1ecc2a-ae04-4a30-9167-230a8f7a195d": {"doc_hash": "c987c73da1c17440b2e331af86b5a77c0b91551a044b42542b2b559419b0d888"}, "a73c1223-af4f-4c1b-ac3b-6558af29fc16": {"doc_hash": "3ad26038e29635291d84c4e5ab2d4affde2e555982770fb583c4788dc6c644ec"}, "5fd79086-51c1-4e0c-922c-7aa211df2921": {"doc_hash": "f00ee281a39642a2d314ceb5671b220cefd13b45f5aa87ea645d9d149460be3e"}, "c1060dbb-fdbb-4002-a322-a57c0b243b80": {"doc_hash": "29fbe562c1bd7f1196dda35b0716c94a7069a8016fa7254219bccebcfe5dbde3"}, "16a3f718-c4d3-4ca5-96d1-e965c570c1cf": {"doc_hash": "084b22dfa321dd4da1fc1aed8c43d7a071f873278966fa4a1f8b8f1a351ccd46"}, "5128ba0d-38e6-4fb9-8431-a503bf4756e4": {"doc_hash": "fc33515627892845acb3dde20e492da0558ff00bde88a3d7890cb33193bc8164"}, "51b3b5a6-097a-4a3d-9d0c-a1a341687262": {"doc_hash": "f743ccf8a8d0e7d7607897cc066eff1bc5a3347c86f0d9a4ee7770f1ea02a8b1"}, "b5fd610b-166f-4060-a46a-5bdef8ad3f23": {"doc_hash": "1e3fe65e0537f25fe1f522777b856b2c8be7682df4549bf456b839307561a371"}, "0d913735-aa3c-4e3f-b582-2079983b8b0b": {"doc_hash": "3ec84604f92a070f5504ea8ac9cc1ca446cf8ecd540738c12c7d5c493a62441f"}, "04ce40ca-3e7a-4710-84de-2790c83ea2e7": {"doc_hash": "2c7aadbc2b4f4939d45740b030a8ac32d8959c7640f07a37a923a248f9099c36"}, "2ca9f612-44d7-400f-8325-e86ed06cb0bc": {"doc_hash": "c3b035b7491c8f17a19701b37045e5002c04074e058443a3907b7831a5096cf6"}, "ec8c5c8a-988a-4e2a-a6fc-1a12139d0d0c": {"doc_hash": "69227056edb5552cb3f3a31cf7ac4816918e27befb62326e69c51e78c807eaa5"}, "6e258a43-c2d9-431f-a47e-df7178939cf1": {"doc_hash": "13e5a70e4b09de4b79b0f64b70abb38dc9a7a7817a68df9f90df93ad3874b85e"}, "8f289d1e-a12f-43f2-a9c0-54bfd9e6819c": {"doc_hash": "0f779f65d89b5a503094bf0425cc2e11fab521fe2aadb66a21ae98a33feb6145"}, "ce71802c-e56c-4338-be36-b0b4b27dc077": {"doc_hash": "750262ec4a9b144a755e7660c8b59cd27d572310bf1aa5a4e25cff1d48a4e565"}, "419bf342-7b1a-484c-957f-061d1a926caf": {"doc_hash": "aa901b9a704fa0845c8a834d57566093ca797b973ac97f6d15e292c844ff6970", "ref_doc_id": "ab8ed873-adea-41a3-8ec8-d02c36eee2e7"}, "292a917f-d0f4-4265-ac3b-aacc0308fa3e": {"doc_hash": "c108b1c23c0975b5f32119741a9c17f1e8ab442c25289b501bd1a15d53a757c0", "ref_doc_id": "408a03cf-42d0-42fd-8042-864805fa05d0"}, "b1c2ccec-eb5c-43e8-9c25-f916fe097e30": {"doc_hash": "ced41813c70060654188f0388da06d9137ccfc6e47e9dd9c8e33949bde458ff7", "ref_doc_id": "408a03cf-42d0-42fd-8042-864805fa05d0"}, "555f7bd3-d8cc-4e23-ba8d-b3deea8133f1": {"doc_hash": "7a24b2858c44a528f9536660bae771bea2b96388cb66cdb632955350dd0f9c14", "ref_doc_id": "99fe5578-4e9c-46d4-b8aa-6fb261c2ef82"}, "f3cfc936-38bd-4b95-aab6-5f2c8f1ae82b": {"doc_hash": "4c1633bb299233987cb113ce4a6694ae6dba82ceca0cdca0437d903b5aa594ac", "ref_doc_id": "0c4fe3d0-2f55-47a2-babb-a36574d3b16b"}, "24ae0011-fa92-4365-b720-99fe09b3b548": {"doc_hash": "76f02dc217d78c520012ba995838ec92e9da1b0bac4f7b905de1ccf0a08843e8", "ref_doc_id": "09eb1de5-f834-41c0-8c98-5f5223fe898d"}, "983151e4-142e-4af9-9410-70f44c7b18ca": {"doc_hash": "37452782c35e020a012d9a50fb91128b6f1c862fb5ffdb733d4c8599902f4976", "ref_doc_id": "634c2183-6e04-4993-8f17-b001eb34ce52"}, "f2208d73-129e-4002-b430-404c0c595c5b": {"doc_hash": "c93ff591277ed21722ee72a31dd06cbf13e25a112840b206317ac57f447392f6", "ref_doc_id": "e0580435-5991-4673-8bdf-4d2eba245324"}, "6c7d3b03-4cad-4941-b941-ec1fd7ba0f3b": {"doc_hash": "6b272d9c9644b1bb5d19d1b16b26aa38991dd34724d5a3672d87c875c2686efe", "ref_doc_id": "46a4d588-8d50-4327-ae04-3d6956ccde1c"}, "47aa861e-ed5e-43a2-be22-aad3a410bf73": {"doc_hash": "b3e09dac65ba3468ceb3a59f5d5645fcacf581f98b269e9c0fecbb2f517fc097", "ref_doc_id": "87c28f1f-616e-4153-800a-f0fc434c258f"}, "fcbde855-97bc-4adb-859a-4d3be99938a8": {"doc_hash": "aeec889e2e5e8334b78c7bc01776033f28f878863c2cc275b64c73ace2df1e5a", "ref_doc_id": "0ed883a8-a9ea-4fa3-b68e-0059b75f28da"}, "ddb0872f-9170-4de9-9807-e1188986af79": {"doc_hash": "dc28d0ec1531393feb5e996c95ba763b1ca9fd3f7142bde07dcd9df46107367d", "ref_doc_id": "0a64fe94-e2c4-4a2f-a988-533b99728d70"}, "637d1d66-52b9-4c48-aed3-aa5730212886": {"doc_hash": "5e8f87a504db26dabca746d12e1ba986edce10094d708ceb0edeca59624c6e59", "ref_doc_id": "62ba12ab-4226-44e4-943f-3ef6ff5875c4"}, "611d1745-d4ea-4cfa-81a0-90f1b64cf1e7": {"doc_hash": "a51678422ff6a72a9a04d5dbe905b09b8efdaed744b56d47b31da52a559b1d8b", "ref_doc_id": "0211fe7f-cede-4642-a818-26a0487747c9"}, "5dd65121-4b7b-4d3a-9693-3d3fd0008248": {"doc_hash": "1d7c8aaab9f1c53a1ad730576a5dbc0f5a7c3e61b306494e9093d5e57e704c04", "ref_doc_id": "f01c9740-3279-4e2c-9c0c-5b0253123641"}, "d734e832-b9da-4e8f-8448-e1adf22945b5": {"doc_hash": "d80dac3e9985f1d6bdc2ebb06b782501ef46375cd2cfd06d8e1a5422e9f45afa", "ref_doc_id": "78c74be0-8a8d-423e-8a3a-f48ffe55ea6c"}, "7844480e-ae59-4260-8624-bcf7b8145dcd": {"doc_hash": "7a3add55adcb5e2c44bd5ce67acf798aa3e0edb9eba219df633e22fed1a08d20", "ref_doc_id": "24963666-f4f5-4927-9648-3928e2ab9344"}, "43fcb93e-42f6-4803-9bbd-2c169f9cefbd": {"doc_hash": "715e5d4cca9ee6f268bb9210309b615d78aca4dc196f987a99aaa5c7ad94b918", "ref_doc_id": "cdabb918-fc54-479b-aaca-2616123db8b4"}, "72ca7ddb-e75f-439d-918a-447ceeed4f9b": {"doc_hash": "40ed29bf2b16e9bed1704df7c789300efe955a8a08e2102f9e3bf89228ef03e5", "ref_doc_id": "799b815b-3656-41d0-b00d-af28d12ac079"}, "81a5b702-8121-4854-aefd-9def6d9f1b31": {"doc_hash": "41f845e5d9b69b26a30df9c6ca6c6e8cb77530811127a66834229e9035acb4be", "ref_doc_id": "6bdbd12d-f197-483b-a521-6d427d4bf052"}, "766bf5d6-a4b5-44cc-a847-adb9349ca362": {"doc_hash": "2493f7b9421aae1e7c831a713c8e9f89e06dd069bb37652f430c4f7682bbca06", "ref_doc_id": "bcbe422a-d602-4979-bd3e-6c4543782b7d"}, "80c4e768-6217-4c46-af96-7ca1fe2922fd": {"doc_hash": "f6c4a4f41e12531f5eed5f0f751afcda8b1f52ccc485f1bcb5b7b7491994aeca", "ref_doc_id": "61f5b9af-3b07-40a7-a6eb-40e5966bcedd"}, "361c70c9-3ded-46eb-83d9-fd6880bbe72c": {"doc_hash": "62adc1da6c00876c58288867857019358afe7c20d7f1b54876fd22271547a2aa", "ref_doc_id": "bba6b4c4-03af-4769-96e6-6ed7e6dd0485"}, "4d9b5fb7-960e-470f-9363-f511dc254cab": {"doc_hash": "3c2323afb2d72df70e4b082a6e53f0a9f415f8659a669e928d7127245ecc1545", "ref_doc_id": "2dd2a0c1-e166-4c6d-87f7-0966b2c4b959"}, "e9514f4f-8bf1-4519-bbad-9b294b0ef386": {"doc_hash": "a3c49d20500339ee72a66e891d4c02b4e40ebc17cc4004245cd3d45b7638e945", "ref_doc_id": "440814f2-187a-4dca-ad87-ffb3c0f77bbf"}, "7fdf8e34-60d8-43da-8930-16b90fe57592": {"doc_hash": "67d6a78586b7f64e420317ccac0d570fbedb2f67288dfad536fc5d235ec0efc5", "ref_doc_id": "b1c6269c-97db-449d-b299-1e72edb83239"}, "82829234-b295-4eec-8a00-0dc7746622a5": {"doc_hash": "ef9f38c4ba6ad260462cfb58acb12220cea6ac7a7f3cf273d7282af54442c2b3", "ref_doc_id": "95062667-6bc9-44a7-bd6b-506e4d0f07dd"}, "d4af325b-4436-4a80-b963-2f09693b5608": {"doc_hash": "cb730030035e768b14013f4c7f5e26e9e960999db34935a6fdee74645f240161", "ref_doc_id": "112d9d33-aab9-4557-9695-98aa1cdc3f77"}, "08403595-928e-4afd-91d5-57c355e28cd6": {"doc_hash": "8e58cfb18cab14f5db21c0e52a55b336cbf0829c02a252fcc39e43b0d96a45ad", "ref_doc_id": "9dfeb9aa-f1d8-44ba-ac40-22c25185e8ca"}, "a1295758-3432-419d-9bf3-f9852b3d8633": {"doc_hash": "bdbebd37eb8e8ad9d15f328e22479fb89b828eb3417f39890f59e38da41bb780", "ref_doc_id": "4c932706-3b61-4058-812d-a5a211d045e6"}, "d2f1c961-6f9d-4d26-8995-a6a7902b1db6": {"doc_hash": "06adf7cef0eaf0591c110664a651c53b3b8aa4312a4ec0c1b10fd3bb856e8f14", "ref_doc_id": "8b9e5d7e-72c8-4c76-8be3-651361362351"}, "10c76921-9b71-49c8-a8f0-b5e6ab4f4a0b": {"doc_hash": "3fd7459855d841080147478c107f98bb0faebb592631d45370e1a5e68ad3833c", "ref_doc_id": "48471b64-bfa4-4ad9-a3f7-6b01e0b0ef3c"}, "0ed0e892-f3ef-4ff2-b537-cab439eea8bd": {"doc_hash": "6699032093e580f316a55d0747253852566be9571a99648304d83b37c1220d9f", "ref_doc_id": "d7067e68-1a37-4ccf-9874-93ab9bba84fa"}, "da15237b-5031-499e-bc55-6dbace671cab": {"doc_hash": "07b7eb2530334b68f2b69b1863a9055c1aec641014bb0875583b643e6fcf2e1c", "ref_doc_id": "9aec2e82-1e7d-417c-bc8e-76da10055d04"}, "295441d5-0a19-406f-8c26-34aab600154d": {"doc_hash": "671d68efb8e2aff56e458217a07b262185a0ced883b2e4d54f6136f0a3d6173d", "ref_doc_id": "b986dc2a-50f9-48a7-b357-a3176c3e8411"}, "96c8644f-0595-4f52-8581-bf69d228b780": {"doc_hash": "a1ff2b1ce70fae7fc91d9ccde614c7dc25c571fb946dd974610d97da654e61c8", "ref_doc_id": "f1186b8d-993d-4545-8516-06de9596ec52"}, "df990b47-47b7-498b-9b9a-8275d7f3c81f": {"doc_hash": "d77846d15626e0a5d0ad0477dd3b41d6d134bdd77ed60768f066b5b845fa56e8", "ref_doc_id": "f1186b8d-993d-4545-8516-06de9596ec52"}, "0818e267-99a1-4c06-956f-9dc7253ee84d": {"doc_hash": "ebb5ba8a1b2955f853b53ae357f6fb461cb425e09e3a83d3c7946b33eca6637f", "ref_doc_id": "b1588156-7774-45bf-b9ca-8f1048d44312"}, "454b85b6-100a-4c93-8c00-cbf9178b5ec1": {"doc_hash": "6471ddd0f234a9a5b567c2fff0a7adb7247530e9e8da717b95603cb8466398d6", "ref_doc_id": "f5ad317b-bc3f-47f3-8936-c213e2872a9b"}, "b3402e6d-8883-46e1-9fda-f82ba12c8c88": {"doc_hash": "90375ffdea17cb87b3ad9abeaea9f712fa11158a8ed024f6e5a6257359429a31", "ref_doc_id": "fc4fb852-f131-4a48-b4bd-46d3b6c6583c"}, "ed8f7884-a49b-460c-aa67-751db413eb81": {"doc_hash": "4c5c8ce68541249742a56ef99221c4cbabfacbd5575f83c39ce987a539ff615f", "ref_doc_id": "c5467f3a-a485-4c90-b9dd-fdadc07b9a01"}, "5a97c0bc-ac10-4d24-aef1-a8384cd2b3a7": {"doc_hash": "f4d324f1e034dbb9add6c1f0a60ac3a334f61b07a228f6d464f76ced32512308", "ref_doc_id": "c5467f3a-a485-4c90-b9dd-fdadc07b9a01"}, "1efc08dd-d105-4a27-9ac5-b09dac159859": {"doc_hash": "56b14085195593c48f3ed980c426805c451e223a30b96987836bc270d210b209", "ref_doc_id": "9f4c5eb1-0297-4808-9bac-b7f81e50638f"}, "4f1b8d40-4d55-41a5-be6c-eb29a9bd7e49": {"doc_hash": "083d23fafe33ab072af29c6f3dbf5ed26e2483501a0f30de907a2c1828a36ace", "ref_doc_id": "9f4c5eb1-0297-4808-9bac-b7f81e50638f"}, "0664e40a-45e6-457d-839b-40526bfc2c19": {"doc_hash": "3d5f8fb07f87aa3b27a764243118cde8b37bda038fe29403838c84614aeaa918", "ref_doc_id": "9f4c5eb1-0297-4808-9bac-b7f81e50638f"}, "309d2c0e-57df-4085-b09f-ac6a2a6521b5": {"doc_hash": "533a30c566dcd06df7526608f3ead8829736e21e2f3fafd86378115e80502dd5", "ref_doc_id": "9f4c5eb1-0297-4808-9bac-b7f81e50638f"}, "66847969-6324-4907-bab5-6330602dbd94": {"doc_hash": "c51c3a7867782c791b4aad14dcb6f80625f3be98202ef331aa2f58339b8d9453", "ref_doc_id": "9f4c5eb1-0297-4808-9bac-b7f81e50638f"}, "0f3ebd93-a2cb-41a0-9c0f-4966b6c5785c": {"doc_hash": "6fabe3c8f4016de73bb6c9979e1cf5c560c7b7dc38f7420add40b362a9576161", "ref_doc_id": "4210146d-9cbe-42cf-93d0-12eba63acab5"}, "4182b845-c6bb-4259-ad11-2b17cb790e5d": {"doc_hash": "573f7af27f122c4626dd1b2ab3c353894cb9e45550ee0faae419bab45251b897", "ref_doc_id": "4210146d-9cbe-42cf-93d0-12eba63acab5"}, "bdba0ac0-8d0b-46a4-8d31-18a876c71c23": {"doc_hash": "919e6b800ab4a5d44ae153944a349e279da89bb9c447a263ff1adfc29200c70e", "ref_doc_id": "4210146d-9cbe-42cf-93d0-12eba63acab5"}, "53776889-6664-4cb2-ad6a-37a98943a76f": {"doc_hash": "533a30c566dcd06df7526608f3ead8829736e21e2f3fafd86378115e80502dd5", "ref_doc_id": "4210146d-9cbe-42cf-93d0-12eba63acab5"}, "9e8b4af3-674d-4d2b-b6db-8df95f50a4a9": {"doc_hash": "7c705f660723d061a98660d4571c3dbb9e0b2af36effd96c43c95161feddc6d5", "ref_doc_id": "4210146d-9cbe-42cf-93d0-12eba63acab5"}, "f4d76b91-9476-4224-bde9-4df1aaf217db": {"doc_hash": "6f95142e47991e6657e602e9e4c8dcdbe3dd27912a677604ee82469e12386056", "ref_doc_id": "7f3241a1-910b-44d6-8dfe-c1d3e6a19639"}, "f7342c69-858b-42eb-893b-30ddf57d37a3": {"doc_hash": "2cdfb766e871f8d8c51bd849d583c81facaa83f4fbc43c674cbe1a3c18f4b9a7", "ref_doc_id": "56d3bb6f-1558-4c15-a582-5c244046cc8f"}, "8a874b45-0317-4384-9793-e328a0436a58": {"doc_hash": "6692e74d312e98daf891d8e495eba88f2a9b2e0c9d1f198d26009517cfd30d57", "ref_doc_id": "f102f05b-5a20-449b-8f90-0b14894aef47"}, "52bf7ada-c8b9-4726-991e-a153dffa8054": {"doc_hash": "58ac9339b88ca40384d48ffa9ba0fe8be1f9fc96fd198de68edf52a0d7483d25", "ref_doc_id": "aa03bec3-b246-416d-8186-1b220a9c117b"}, "8516fe14-0eee-4dec-9f88-04214869c04f": {"doc_hash": "8a671c859c1e876a999cae3e3bd8f9bc95af81ffd25f722a1f2588dad60d61d1", "ref_doc_id": "c679ba10-a80c-4e11-b898-83c56e7496be"}, "07482b45-d893-4b07-a532-6d1ddaa5daff": {"doc_hash": "e34ef5654ad07155079a60b46b9ae07483612040147738f2bb46b1fbd33b6b4d", "ref_doc_id": "d58834da-21eb-4aae-8957-faa9017de181"}, "7fce27a5-38e4-4e0b-b4ac-33f9219f1848": {"doc_hash": "6d22c303e9461a38ae9868470b4bbdf80d93ec76cbc59f638879f04d4350625e", "ref_doc_id": "662cb779-47c8-4938-99ed-399605f099a6"}, "d13eb581-58d9-41f8-b36d-a45f8890c5a9": {"doc_hash": "ea9ea5633609085ffdb9b12d254b349ca812683e3b643be065d4cffbbe42f60c", "ref_doc_id": "5e74ae15-f586-40b6-81e6-a3e5b23d0ef1"}, "15cbba0f-56c0-4786-8227-a258ed30ce7f": {"doc_hash": "f4105a1588f3ea53b0807666e4e7e8a550ca8e4579a6cdfd6f6baf2486dbce84", "ref_doc_id": "55243d0f-b4da-46f9-a52d-f10344826f73"}, "56953eef-3c3e-44dd-b202-ff0cff7b2d84": {"doc_hash": "e788b90cfd10a2c07776965da665f1ba3dfa690c45420393cb738ce5595ca09c", "ref_doc_id": "da9f41af-8f83-4aba-bd8a-5a2374b0155f"}, "b150dfb4-d4bb-4968-b2f4-09b7a02443d1": {"doc_hash": "a3a6642a4663a165c8b434ba9cfbb3f88dc569c9d5d2b039808d886a57f657bf", "ref_doc_id": "6e823a71-ac99-4804-a7e7-898bcdb561fa"}, "166d6555-65c6-4ee0-bd9a-0e016f3ae1dc": {"doc_hash": "58d4d13d55de437e7d6e919760405bc53d9a1d8aaaabbeabf0d3ffa4cd92f86d", "ref_doc_id": "6e823a71-ac99-4804-a7e7-898bcdb561fa"}, "74648a0e-ccd7-4ae2-b83e-0d88500dc494": {"doc_hash": "7dac69d1f81589485d616997d538d57555c99cbee5be8ef8142b412ca1e4494c", "ref_doc_id": "bc67d9ae-d08f-43bd-bb0f-6af9b8266375"}, "c35e7566-7e86-4c2c-91a7-297b6949cd0f": {"doc_hash": "9aae03fdad4813e4e2ba35df8d46bcc322218db0e02365ebb280de0887f2e129", "ref_doc_id": "bc67d9ae-d08f-43bd-bb0f-6af9b8266375"}, "d3aa3d7c-847e-4c8a-bd24-bf80a75b0044": {"doc_hash": "ea912b9e77056db9d37894f40cec52a821ab3979c729145980106f0550ec715b", "ref_doc_id": "ae700bcc-f157-401b-a3df-25ae4f9b2bc5"}, "068ecc10-f6ad-4ac6-839e-7da258ed4fda": {"doc_hash": "a90d1fd8e3f79e7590e6dbf3b52a8c6934837aec64ae636de9f4c9e9b7b91e91", "ref_doc_id": "ae700bcc-f157-401b-a3df-25ae4f9b2bc5"}, "bc73fbfb-37ae-45e6-83bd-30ea0a646376": {"doc_hash": "8e8e29a04dbaf00fc5d625877d55db90ec22c4e27612751ffaba55ed77614d14", "ref_doc_id": "3f5fbd7b-6020-4eaa-b05d-9d9bedb4373a"}, "7d4f7dd2-8534-40c6-8964-53320aa3f580": {"doc_hash": "4afa3e2e7bd55654e55a66a3e18d3b7de5395576554fe744570796448cd1958a", "ref_doc_id": "7ecca624-7287-46f1-88a3-9e332bf7dc5d"}, "a433e0cf-3fa6-427f-9b10-03218e07b7db": {"doc_hash": "98110b252c6f884a8c95f65413e272608883d10b5411135c2c45e9898f1f07eb", "ref_doc_id": "b51db9bd-2847-47e5-b277-7341bd57d4f3"}, "5705a87e-5592-4e6b-8afa-40aeadd2eb49": {"doc_hash": "8b38961cd58b80cf600cefb3a4a1c1fd1eb8f774cc717f6a0414b695fc9d3d84", "ref_doc_id": "63f20766-d72d-4e19-83c2-406df7cae3c9"}, "34a34adb-cabc-425c-b50c-f934f3689aa0": {"doc_hash": "b7d99fdc919d479b2fbc7fb50cb0111ce3ce27168c364efc104d0810b29384cb", "ref_doc_id": "fdaaeb81-9630-4234-b036-adcd8bb52d18"}, "03769b82-b866-44e7-8e63-a42f4d4ecfbd": {"doc_hash": "afceedbee94171a1822dcbf679e9698245282664c66a7a36ccd21ecaf2552c4f", "ref_doc_id": "b6ad252e-ca03-4486-aee3-332d1da28f4d"}, "01ceb261-5490-41cb-935f-c4210bd07654": {"doc_hash": "de68ad412e5be9f51959811c55374ae324e86b9aa75079d111c22b4748b25cdb", "ref_doc_id": "b6ad252e-ca03-4486-aee3-332d1da28f4d"}, "7e5cde8f-8e23-4602-bf45-98609fabae77": {"doc_hash": "632a67e093843a5cb5ce09897ca8f2572927471bfdeeab566ea22af7cca2c4d3", "ref_doc_id": "0ee938f7-618a-4001-b141-6f83386c0d74"}, "d31e9ae5-2dce-4610-b45a-eea16bc4c5a4": {"doc_hash": "82c504a32717d91989786e718849896d98ef7b12d402a026d9a9d9d270c20c3a", "ref_doc_id": "0ee938f7-618a-4001-b141-6f83386c0d74"}, "88621d3e-4d9e-49d4-8640-f7804f117c68": {"doc_hash": "c6091056ac95d7ea5f60e8ea1666a73c476bf39a8ee502f83cbeef1cdd872e15", "ref_doc_id": "0ee938f7-618a-4001-b141-6f83386c0d74"}, "a33d36b4-beaf-4652-b41c-aaeff3b076f4": {"doc_hash": "ead46fac44d096ae816d5b77d25a66cd13ce5a6103ed0a609816e07171825385", "ref_doc_id": "0ee938f7-618a-4001-b141-6f83386c0d74"}, "f6c022c7-b5ba-4083-b62e-97b2b90205f6": {"doc_hash": "a401c35ed618cd93cbe2f3e97402c856b512b32d2c843696ece04421c78d9f61", "ref_doc_id": "4cd8e044-84e7-4012-b957-d4a3c5cc0dfe"}, "96bb16b6-5f97-41a7-bd27-4862ccc48ced": {"doc_hash": "a7c9db6265bb154c2069ee8408a1fc55f8fd0e0902e8873f84464aa25c74862d", "ref_doc_id": "747fc7cd-8030-4720-aeae-1226b5880e17"}, "8e8ceb3a-f6c7-4435-845d-5dea1d3c0261": {"doc_hash": "5688e0974d7f9157449e2025bf26986299c8651aeb16af8877a668df4e47f206", "ref_doc_id": "b48ccaa1-0eb8-4d59-9f2a-b6e8a536da7a"}, "b6ca97bb-ac99-448f-a4d8-a5b00151a00d": {"doc_hash": "d9881c16b7fdcc67ceda67a26c828221885ed935e6deead5f5982904f9e39614", "ref_doc_id": "e3012b5d-a520-4565-a8b8-31470fd28f59"}, "dda25ea0-8ce4-4480-b53b-8944e924b0e1": {"doc_hash": "a720f9ed4c289727364df290d6810a2b75830c6fc5436ec5fe92aa85ea0a6117", "ref_doc_id": "0037f04c-a0df-42fb-b031-a7b36a28b94f"}, "d81c2d31-20d0-4939-91d8-0be8a82d19f0": {"doc_hash": "5cd3edebb2a4b36f0397328cb1a7510ae2259d2c0cd69bef0eee5bd435169c21", "ref_doc_id": "da1ecc2a-ae04-4a30-9167-230a8f7a195d"}, "d2dfb00b-8546-4f83-b3e7-07d704e73f66": {"doc_hash": "134fde93d4624f275fdc1e5f274a0d83e1d9b5b93f12818c161909168a757f28", "ref_doc_id": "a73c1223-af4f-4c1b-ac3b-6558af29fc16"}, "153f31d8-22d8-408c-ae2b-b69095c9d484": {"doc_hash": "a3269816ef7c5d2f5df0963d5c9733ce0b86890ff5234df3368200c02d2679d8", "ref_doc_id": "5fd79086-51c1-4e0c-922c-7aa211df2921"}, "299cd36b-2881-45a2-9e04-cff299c5d3a0": {"doc_hash": "435db051f2fc7c4a2c89766a01038d51dbd31691cb40be21e83010e4305dd32e", "ref_doc_id": "c1060dbb-fdbb-4002-a322-a57c0b243b80"}, "de04b363-f732-4039-bc0c-076cb84ca320": {"doc_hash": "3fe5ce85b4898a3d2770b10b508098daea9d51c5c805203a64cbdf965ccc1905", "ref_doc_id": "16a3f718-c4d3-4ca5-96d1-e965c570c1cf"}, "b3abf0af-23a9-45d0-b7c9-09e422807354": {"doc_hash": "7920b69d19e69d003c20378d8b529654f90238c809cf68494d300e6e01dc39ec", "ref_doc_id": "5128ba0d-38e6-4fb9-8431-a503bf4756e4"}, "35ef1728-bea1-4766-bdf4-6d80b02f910f": {"doc_hash": "696578d078ec4ab57abf341ad7b0d4d7aea226260d5d7a75993593079ff6f954", "ref_doc_id": "51b3b5a6-097a-4a3d-9d0c-a1a341687262"}, "4c752698-f8cd-41da-91dc-2ef3053bacb8": {"doc_hash": "8ccc4ff780dbf50be1a67d9f7e8e6d0fe76f083aa18613046ad0fec9ac7e3fa6", "ref_doc_id": "b5fd610b-166f-4060-a46a-5bdef8ad3f23"}, "8aff6c63-f7ce-4e54-8f62-c9581b4c888a": {"doc_hash": "7733965588fd988c02d3d2de323d28eb8c91274fb8b2da166562728807025b85", "ref_doc_id": "0d913735-aa3c-4e3f-b582-2079983b8b0b"}, "af18fa39-0959-4757-90e9-c87480c351bd": {"doc_hash": "8abb842c158460f0680478187ea0ca429295747044a8b6d7bf6f29b1941b26b9", "ref_doc_id": "04ce40ca-3e7a-4710-84de-2790c83ea2e7"}, "f5539b95-a240-41b8-8bf2-cfd9ab6f93bf": {"doc_hash": "62bc0488f1275595914f4d29529a64f0b4603d70903672d471f65344b9d6cac5", "ref_doc_id": "2ca9f612-44d7-400f-8325-e86ed06cb0bc"}, "70413ea6-cc42-4168-841c-2adb7189dcf8": {"doc_hash": "7ea8a8de5a1c729259e7757aa9fe7703311b91194bae21f7822db924372f501c", "ref_doc_id": "ec8c5c8a-988a-4e2a-a6fc-1a12139d0d0c"}, "2cb61df4-eadd-4579-973c-e54c8ea98b6d": {"doc_hash": "6d0b2d2978b84d8e59603c4d8cc96a93a92eb50264da31e18e431d0fab13acdb", "ref_doc_id": "6e258a43-c2d9-431f-a47e-df7178939cf1"}, "1aaf3759-be87-471c-a65d-42c885371509": {"doc_hash": "f48c8435455d9cfb016cf47498aac44c401328afb38ae48f85b092cd9e2eb137", "ref_doc_id": "8f289d1e-a12f-43f2-a9c0-54bfd9e6819c"}, "ac436e34-708f-4150-a4d0-299e37130479": {"doc_hash": "cffa1be26bb995ad2c9e760b2d1b9a8edca9e003a654cd1c780fab3513ab52f1", "ref_doc_id": "ce71802c-e56c-4338-be36-b0b4b27dc077"}}, "docstore/data": {"419bf342-7b1a-484c-957f-061d1a926caf": {"__data__": {"id_": "419bf342-7b1a-484c-957f-061d1a926caf", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ab8ed873-adea-41a3-8ec8-d02c36eee2e7", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "555c48314d5c2fe982a5828b2372acdbf4608b3858428694944615c5a52dc6c6", "class_name": "RelatedNodeInfo"}}, "text": "---\npuppeteer:\n  displayHeaderFooter: true\n  headerTemplate: \"  \"\n  footerTemplate: \"  Copyright 2024 Fujitsu Limited\"\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 122, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "292a917f-d0f4-4265-ac3b-aacc0308fa3e": {"__data__": {"id_": "292a917f-d0f4-4265-ac3b-aacc0308fa3e", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "408a03cf-42d0-42fd-8042-864805fa05d0", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "4ce53119a13b4cb3915f29f1204542f20f74556387fc5d6b387fc95324b05d6d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1c2ccec-eb5c-43e8-9c25-f916fe097e30", "node_type": "1", "metadata": {}, "hash": "b33638bf31ec3b9f02dfcd01d5050ab2401d20ec4dd2f903a855a6f15aa1aacf", "class_name": "RelatedNodeInfo"}}, "text": "Table of contents\n \n\n\n\n\n\n- Table of contents\n- AI Computing Broker(ACB)\u306e\u6982\u8981\n  - ACB\u306e\u7279\u5fb4\n    - ACB\u306e\u4fa1\u5024\n    - \u6280\u8853\u306e\u7279\u5fb4\n  - \u5168\u4f53\u69cb\u6210\u30fb\u69cb\u6210\u8981\u7d20\u306e\u8aac\u660e\n  - \u7559\u610f\u4e8b\u9805\u30fb\u5236\u9650\u4e8b\u9805\n- \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3001\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\n  - \u5bfe\u5fdc\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\n    - \u63a8\u5968\u74b0\u5883\n    - \u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883\n  - \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\n  - \u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\n  - (\u4efb\u610f) Docker\u3092\u7528\u3044\u305f\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\n- \u4f7f\u7528\u65b9\u6cd5\n  - GPU Assigner\u306e\u8d77\u52d5\n    - GPU Assigner\u306e\u8d77\u52d5\u65b9\u6cd5\n      - \u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u74b0\u5883\u3067\u306eGPU Assigner\u8d77\u52d5\u65b9\u6cd5\n      - \u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u74b0\u5883\u3067\u306eGPU Assigner\u8d77\u52d5\u65b9\u6cd5\n        - \u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u7528\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb(`multinode.toml`)\n    - GPU Assigner\u306e\u6a5f\u80fd\n      - GPU\u30c7\u30d0\u30a4\u30b9\u9078\u629e\u6a5f\u80fd\n      - \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\n        - simple (1\u30b8\u30e7\u30d61GPU\u5360\u6709)\n        - gpu-sharing (\u8907\u6570\u30b8\u30e7\u30d6\u304c1GPU\u3092\u5171\u6709)\n        - gpu-affinity (\u30de\u30eb\u30c1GPU\u30b8\u30e7\u30d6\u306b\u5bfe\u5fdc\u3057\u305fGPU\u306e\u5171\u6709)\n      - \u6700\u5927\u6d88\u8cbb\u30e1\u30e2\u30ea\u91cf\u4e88\u6e2c\u6a5f\u80fd\n      - \u8907\u6570GPU\u30d7\u30ed\u30bb\u30b9\u5bfe\u5fdc\n      - Backfill\u6a5f\u80fd\n        - \u5b9f\u884c\u6642\u9593\u4e88\u6e2c\u6a5f\u80fd\n      - GPU Affinity\u6a5f\u80fd\n        - \u5b9f\u884c\u6642\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30e2\u30ea\u7ba1\u7406\u6a5f\u80fd\n    - `gpu_assigner`\u306e\u5f15\u6570\n    - `gpu_assigner start`\u306e\u5f15\u6570\n  - \u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5909\u66f4\n    - a. \u518d\u8d77\u52d5\u306a\u3057\u7248\n      - PyTorch (a. \u518d\u8d77\u52d5\u306a\u3057\u7248)\n        - PyTorch\u306e\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048(\u30b7\u30f3\u30b0\u30ebGPU\u30d7\u30ed\u30b0\u30e9\u30e0\u7248)\n        - PyTorch\u306e\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048(\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u306e\u30de\u30eb\u30c1GPU\u30d7\u30ed\u30b0\u30e9\u30e0\u7248)\n        - PyTorch\u306e\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048(\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u7248)\n        - PyTorch \u5411\u3051 API(\u30b7\u30f3\u30b0\u30ebGPU\u30d7\u30ed\u30b0\u30e9\u30e0\u7248)\n        - PyTorch \u5411\u3051 API(\u30de\u30eb\u30c1GPU\u30d7\u30ed\u30b0\u30e9\u30e0\u7248)\n      - \u524d\u51e6\u7406\u3001\u63a8\u8ad6\u3001\u5f8c\u51e6\u7406 (a. \u518d\u8d77\u52d5\u306a\u3057\u7248)\n      - MNIST\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0 (a. \u518d\u8d77\u52d5\u306a\u3057\u7248)\n    - b. \u518d\u8d77\u52d5\u3042\u308a\u7248\n      - PyTorch Lightning (b. \u518d\u8d77\u52d5\u3042\u308a\u7248)\n        - PyTorch Lightning\u306e\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048\n        - PyTorch Lightning \u5411\u3051 API\n      - TensorFlow (b. \u518d\u8d77\u52d5\u3042\u308a\u7248)\n        - Keras\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5229\u7528\u3057\u305f\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048\n        - \u4f4e\u30ec\u30d9\u30eb\u306eAPI\u3092\u5229\u7528\u3057\u305f\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048\n        - TensorFlow \u5411\u3051 API\n      - \u524d\u51e6\u7406\u3001\u63a8\u8ad6\u3001\u5f8c\u51e6\u7406 (b. \u518d\u8d77\u52d5\u3042\u308a\u7248)\n      - MNIST\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0 (b.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1445, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b1c2ccec-eb5c-43e8-9c25-f916fe097e30": {"__data__": {"id_": "b1c2ccec-eb5c-43e8-9c25-f916fe097e30", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "408a03cf-42d0-42fd-8042-864805fa05d0", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "4ce53119a13b4cb3915f29f1204542f20f74556387fc5d6b387fc95324b05d6d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "292a917f-d0f4-4265-ac3b-aacc0308fa3e", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "c108b1c23c0975b5f32119741a9c17f1e8ab442c25289b501bd1a15d53a757c0", "class_name": "RelatedNodeInfo"}}, "text": "\u518d\u8d77\u52d5\u306a\u3057\u7248)\n    - b. \u518d\u8d77\u52d5\u3042\u308a\u7248\n      - PyTorch Lightning (b. \u518d\u8d77\u52d5\u3042\u308a\u7248)\n        - PyTorch Lightning\u306e\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048\n        - PyTorch Lightning \u5411\u3051 API\n      - TensorFlow (b. \u518d\u8d77\u52d5\u3042\u308a\u7248)\n        - Keras\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5229\u7528\u3057\u305f\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048\n        - \u4f4e\u30ec\u30d9\u30eb\u306eAPI\u3092\u5229\u7528\u3057\u305f\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048\n        - TensorFlow \u5411\u3051 API\n      - \u524d\u51e6\u7406\u3001\u63a8\u8ad6\u3001\u5f8c\u51e6\u7406 (b. \u518d\u8d77\u52d5\u3042\u308a\u7248)\n      - MNIST\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0 (b. \u518d\u8d77\u52d5\u3042\u308a\u7248)\n  - ACB\u3092\u7528\u3044\u305f\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n    - agarun\u306e\u5f15\u6570\n    - \u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u30b8\u30e7\u30d6\u306e\u5b9f\u884c\u4f8b\n      - \u30b7\u30f3\u30b0\u30ebGPU\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u65b9\u6cd5\n        - \u5358\u72ec\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n        - \u8907\u6570\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n      - \u30de\u30eb\u30c1GPU\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u65b9\u6cd5\n    - \u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u30b8\u30e7\u30d6\u306e\u5b9f\u884c\u4f8b\n      - \u5b9f\u884c\u624b\u9806\n      - \u5b9f\u884c\u7d50\u679c\n  - GPU Assigner\u306e\u505c\u6b62\n    - \u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u74b0\u5883\u3067GPU Assigner\u3092\u505c\u6b62\u3059\u308b\u5834\u5408\n    - \u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u74b0\u5883\u3067GPU Assigner\u3092\u505c\u6b62\u3059\u308b\u5834\u5408\n- \u7d42\u4e86\u30b3\u30fc\u30c9\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u4e00\u89a7\n- (\u88dc\u8db3) Docker\u3092\u7528\u3044\u305f\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\n  - \u6982\u8981\n  - \u52d5\u4f5c\u8981\u4ef6\n  - \u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883\n  - NVIDIA Container Toolkit\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u52d5\u4f5c\u78ba\u8a8d\n  - \u30b3\u30f3\u30c6\u30ca\u9593\u901a\u4fe1\u306e\u52d5\u4f5c\u78ba\u8a8d\n  - docker compose\u3092\u7528\u3044\u305f\u3001\u5404\u7a2e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e00\u62ec\u52d5\u4f5c\u78ba\u8a8d\n  - \u30b3\u30f3\u30c6\u30ca\u306e\u69cb\u7bc9\u3068\u5b9f\u884c\n    - \u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\n    - GPU Assigner\u53ca\u3073\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u8d77\u52d5\u624b\u9806\n  - \u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n  - \u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u65b9\u6cd5", "mimetype": "text/plain", "start_char_idx": 1113, "end_char_idx": 2003, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "555f7bd3-d8cc-4e23-ba8d-b3deea8133f1": {"__data__": {"id_": "555f7bd3-d8cc-4e23-ba8d-b3deea8133f1", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "99fe5578-4e9c-46d4-b8aa-6fb261c2ef82", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "a34c763f1ad9013af0ee93bd82f5ecbc810906f6ca0bf040904e01479ea69093", "class_name": "RelatedNodeInfo"}}, "text": "AI Computing Broker(ACB)\u306e\u6982\u8981", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 29, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f3cfc936-38bd-4b95-aab6-5f2c8f1ae82b": {"__data__": {"id_": "f3cfc936-38bd-4b95-aab6-5f2c8f1ae82b", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c4fe3d0-2f55-47a2-babb-a36574d3b16b", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "3d726b2055a0bf0dd8188302a12de808525a577c3ec682a320de12fd77671ba1", "class_name": "RelatedNodeInfo"}}, "text": "ACB\u306e\u7279\u5fb4\nAI\u5b66\u7fd2\u30fb\u63a8\u8ad6\u51e6\u7406\u306b\u304a\u3044\u3066\u3001GPU\u3068CPU\u306e\u8a08\u7b97\u51e6\u7406\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5207\u308a\u66ff\u3048\u308b\u6280\u8853", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 50, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24ae0011-fa92-4365-b720-99fe09b3b548": {"__data__": {"id_": "24ae0011-fa92-4365-b720-99fe09b3b548", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "09eb1de5-f834-41c0-8c98-5f5223fe898d", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "426fee84b4d11d99db629ada8a5bb9d60db46923c50dcf19d397c0462c439ec8", "class_name": "RelatedNodeInfo"}}, "text": "ACB\u306e\u4fa1\u5024\n\n- GPU\u7a3c\u50cd\u7387\u306e\u5411\u4e0a  \n  - GPU\u306e\u30a2\u30a4\u30c9\u30eb\u72b6\u614b\u3092\u6975\u529b\u5c11\u306a\u304f\u3059\u308b\u3088\u3046\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u4e2d\u306e GPU \u306e\u5229\u7528\u72b6\u6cc1\u306b\u5408\u308f\u305b\u3066 GPU \u306e\u5272\u5f53\u3066\u3092\u52d5\u7684\u306b\u5236\u5fa1  \n  - \u540c\u3058GPU\u8cc7\u6e90\u3067\u3001\u3088\u308a\u591a\u304f\u306e\u51e6\u7406\u304c\u5b9f\u884c\u53ef\u80fd\u3068\u306a\u308a\u3001\u5168\u4f53\u306e\u51e6\u7406\u6642\u9593\u3092\u77ed\u7e2e  \n- GPU\u30e1\u30e2\u30ea\u3092\u8981\u3059\u308bAI\u51e6\u7406\u3092\u6700\u5927\u9650\u540c\u6642\u5b9f\u884c  \n  - \u30e1\u30e2\u30ea\u3092\u6700\u5927\u9650\u751f\u304b\u3057\u306a\u304c\u3089\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u9593\u3067GPU\u5171\u6709\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u751f\u6210AI\u3084LLM\u958b\u767a\u306a\u3069\u3067\u4f7f\u3046\u5927\u304d\u306a\u30e2\u30c7\u30eb\u51e6\u7406\u306b\u3082\u5bfe\u5fdc  \n- \u8efd\u5fae\u306a\u5909\u66f4  \n  - \u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5909\u66f4\u306f\u6570\u884c\u3067\u3088\u304f\u5909\u66f4\u4f5c\u696d\u306f\u8efd\u5fae  \n\n!abst", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 275, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "983151e4-142e-4af9-9410-70f44c7b18ca": {"__data__": {"id_": "983151e4-142e-4af9-9410-70f44c7b18ca", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "634c2183-6e04-4993-8f17-b001eb34ce52", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "bc1b5064422e61004c5ed5579d4f9545107a7f76d824090805034a143c30b161", "class_name": "RelatedNodeInfo"}}, "text": "\u6280\u8853\u306e\u7279\u5fb4\n\n- GPU\u3092\u5229\u7528\u3059\u308b\u8a08\u7b97\u306e\u4e2d\u8eab\u3092\u5206\u6790\u3057\u3001GPU\u3092\u5fc5\u8981\u3068\u3059\u308b\u51e6\u7406\u306e\u307f\u306b\u30ea\u30bd\u30fc\u30b9\u3092\u81ea\u52d5\u5272\u5f53\u3066  \n- \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u4eee\u60f3\u5316\u6280\u8853\u306e\u4ed5\u7d44\u307f\u3068\u7570\u306a\u308a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306fGPU\u6700\u5927\u30e1\u30e2\u30ea\u5bb9\u91cf\u3092\u5229\u7528\u53ef\u80fd", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 99, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f2208d73-129e-4002-b430-404c0c595c5b": {"__data__": {"id_": "f2208d73-129e-4002-b430-404c0c595c5b", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e0580435-5991-4673-8bdf-4d2eba245324", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "562807840a79f79f5b09afc7640b23ea2b1a66020b7bc64b847dc4654fc3c218", "class_name": "RelatedNodeInfo"}}, "text": "\u5168\u4f53\u69cb\u6210\u30fb\u69cb\u6210\u8981\u7d20\u306e\u8aac\u660e\n\n- \u5168\u4f53\u69cb\u6210  \n  - \u30c9\u30e9\u30a4\u30d0\u30b3\u30de\u30f3\u30c9\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3001GPU\u5272\u5f53\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u69cb\u6210  \n  - \u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306bACB\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u63d0\u4f9b\u3059\u308bAPI\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u3067ACB\u306b\u3088\u308a\u52d5\u7684\u306bGPU\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308b  \n    - \u30c9\u30e9\u30a4\u30d0\u30b3\u30de\u30f3\u30c9\u3092\u901a\u3058\u3066\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c  \n\n  !overall_configuration\n\n- \u69cb\u6210\u8981\u7d20  \n  - \u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0  \n    - \u6df1\u5c64\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af(PyTorch, PyTorch Lightning or TensorFlow)\u3092\u5229\u7528\u3057\u305fAI\u30a2\u30d7\u30ea  \n    - \u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u306bACB\u304c\u63d0\u4f9b\u3059\u308bAPI\u3092\u7528\u3044\u308b\u5fc5\u8981\u3042\u308a  \n  - \u30c9\u30e9\u30a4\u30d0\u30b3\u30de\u30f3\u30c9(agarun)  \n    - ACB\u3092\u5229\u7528\u3057\u3066\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9  \n  - \u30e9\u30a4\u30d6\u30e9\u30ea(Adaptive GPU Allocator)  \n    - \u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u306e GPU \u30c7\u30d0\u30a4\u30b9\u4f7f\u7528\u533a\u9593\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u5229\u7528\u53ef\u80fd\u306a\u30c7\u30d0\u30a4\u30b9\u306e\u554f\u3044\u5408\u308f\u305b\u3084\u30c7\u30d0\u30a4\u30b9\u8a2d\u5b9a\u3092\u81ea\u52d5\u7684\u306b\u884c\u3046\u30e9\u30a4\u30d6\u30e9\u30ea  \n  - GPU\u5272\u5f53\u30b5\u30fc\u30d0\u30fc(GPU Assigner)  \n    - ACB\u7ba1\u7406\u306e\u30d7\u30ed\u30bb\u30b9\u3068\u305d\u308c\u3089\u30d7\u30ed\u30bb\u30b9\u306eGPU\u5229\u7528\u72b6\u6cc1\u3092\u7ba1\u7406\u3057\u3001\u30d7\u30ed\u30bb\u30b9\u306b\u5272\u308a\u4ed8\u3051\u308bGPU\u3092\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3059\u308b\u30b5\u30fc\u30d0\u30fc", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 576, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c7d3b03-4cad-4941-b941-ec1fd7ba0f3b": {"__data__": {"id_": "6c7d3b03-4cad-4941-b941-ec1fd7ba0f3b", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "46a4d588-8d50-4327-ae04-3d6956ccde1c", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "31da1ee7701f2e076bd3c38ed08208f8940beabf78238a91ca0335b52ac499bb", "class_name": "RelatedNodeInfo"}}, "text": "\u7559\u610f\u4e8b\u9805\u30fb\u5236\u9650\u4e8b\u9805\n- \u8907\u6570\u306eGPU\u307e\u305f\u306f\u8907\u6570\u306e\u30ce\u30fc\u30c9\u3092\u4f7f\u3046\u30b8\u30e7\u30d6\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u5236\u9650\u304c\u3042\u308b\u3002\n  - PyTorch\u306eDistributed Data Parallel(DDP)\u306b\u5bfe\u5fdc\u3002\n  - \u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u306b\u5bfe\u5fdc\u3002\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u306f\u975e\u5bfe\u5fdc\u3002\n  - torchrun\u306b\u3088\u308b\u8d77\u52d5\u306e\u307f\u5bfe\u5fdc\u3002\n  - \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306fgpu-affinity\u306e\u307f\u5bfe\u5fdc\u3002\n\n- NVIDIA\u88fdGPU\u4ee5\u5916\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\n- Keras 3\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3002\u305d\u306e\u305f\u3081\u3001Keras 3\u3092\u63a1\u7528\u3057\u305fTensorFlow 2.16\u4ee5\u964d\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\n- ACB\u306f\u5b66\u7fd2\u3084\u63a8\u8ad6\u51e6\u7406\u3092GPU\u306b\u632f\u308a\u5206\u3051\u3001GPU\u3092\u4f7f\u308f\u306a\u3044\u524d\u51e6\u7406\u3001\u5f8c\u51e6\u7406\u3092CPU\u306b\u632f\u308a\u5206\u3051\u308b\u3053\u3068\u3067GPU\u306e\u5229\u7528\u52b9\u7387\u3092\u4e0a\u3052\u308b\u305f\u3081\u3001GPU\u3092\u4f7f\u308f\u305a\u306b\u8a08\u7b97\u3067\u304d\u308b\u524d\u51e6\u7406\u3001\u5f8c\u51e6\u7406\u304c\u5165\u3063\u3066\u3044\u306a\u3044\u3082\u306e\u306fACB\u306e\u52b9\u679c\u304c\u306a\u3044", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 371, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "47aa861e-ed5e-43a2-be22-aad3a410bf73": {"__data__": {"id_": "47aa861e-ed5e-43a2-be22-aad3a410bf73", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87c28f1f-616e-4153-800a-f0fc434c258f", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "7efae506c6e424a11b4194b8e6fd79c23832675b3fd03452219ef49df4623cad", "class_name": "RelatedNodeInfo"}}, "text": "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3001\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 19, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fcbde855-97bc-4adb-859a-4d3be99938a8": {"__data__": {"id_": "fcbde855-97bc-4adb-859a-4d3be99938a8", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ed883a8-a9ea-4fa3-b68e-0059b75f28da", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "0ed92b47c28ac9af18139818ea378bd9e40ca3a266db7f038166807d14541dd6", "class_name": "RelatedNodeInfo"}}, "text": "\u5bfe\u5fdc\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 11, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ddb0872f-9170-4de9-9807-e1188986af79": {"__data__": {"id_": "ddb0872f-9170-4de9-9807-e1188986af79", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a64fe94-e2c4-4a2f-a988-533b99728d70", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "5163134e3db551bb6608514252dfe5e9012edc1ed5d4b7012de3e3b56b0b772c", "class_name": "RelatedNodeInfo"}}, "text": "\u63a8\u5968\u74b0\u5883\n\n\u63a8\u5968\u3059\u308b\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\n\n* OS\n  - Ubuntu 22.04.04 LTS, Kernel : 6.5.0-26-generic\n* GPU Driver\n  - Driver Version : 535.171.04, CUDA Version : 12.2\n* Python\n  - Python Version : 3.10\n  - Python Library\n    - lightning : 2.2.1\n    - torch : 2.2.1\n    - tensorflow : 2.15.0.post1\n    - keras : 2.15.0", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 296, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "637d1d66-52b9-4c48-aed3-aa5730212886": {"__data__": {"id_": "637d1d66-52b9-4c48-aed3-aa5730212886", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "62ba12ab-4226-44e4-943f-3ef6ff5875c4", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "9dee2cd2a1683eedbc5f326e4c7281fc6108c6dbf5dc2e3dd1a2909dd925fc51", "class_name": "RelatedNodeInfo"}}, "text": "\u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883\n\n\u52d5\u4f5c\u78ba\u8a8d\u304c\u3067\u304d\u3066\u3044\u308b\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\n\n* OS\n  - Ubuntu 22.04.03 LTS, Kernel : 6.2.0-39-generic\n  - Ubuntu 22.04.04 LTS, Kernel : 6.5.0-26-generic\n  - CentOS Linux 7.9.2009, Kernel : 3.10.0-957\n* GPU Driver\n  - Driver Version : 535.161.07,535.171.04, CUDA Version : 12.2\n  - Driver Version : 550.54.14, CUDA Version : 12.4\n  - Driver Version : 470.57.02, CUDA Version : 11.4\n* Python\n  - Python Version : 3.10.2, 3.10.9, 3.10.12, 3.11.9, 3.12.2\n  - Python Library\n    - lightning : 2.2.0, 2.2.0.post0, 2.2.1, 2.2.2\n    - torch : 2.1.2, 2.2.1, 2.2.2+cu118\n    - tensorflow : 2.15.0.post1\n    - keras : 2.15.0", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 599, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "611d1745-d4ea-4cfa-81a0-90f1b64cf1e7": {"__data__": {"id_": "611d1745-d4ea-4cfa-81a0-90f1b64cf1e7", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0211fe7f-cede-4642-a818-26a0487747c9", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "3737a35b144faa7646a2dfda9913bb25043166254effe7cb7fc0b69dd4f5efda", "class_name": "RelatedNodeInfo"}}, "text": "\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\n\u4ee5\u4e0b\u3067\u306f `$WORKDIR` \u3092ACB\u69cb\u6210\u8981\u7d20\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3059\u308b\u3002\n\n1. Python\u306e\u4eee\u60f3\u74b0\u5883\u3092\u6e96\u5099\u3057\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30c8\u3059\u308b  \n2. adaptive-gpu-allocator.zip\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5c55\u958b\u3059\u308b  \n   ```sh\n   cd $WORKDIR\n   unzip adaptive-gpu-allocator.zip\n   ```\n3. \u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092`adaptive-gpu-allocator`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5909\u66f4\u3059\u308b\n   ```sh\n   cd adaptive-gpu-allocator\n   ```\n4. ACB\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n   ```sh\n   pip install -e . \n   ```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 354, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5dd65121-4b7b-4d3a-9693-3d3fd0008248": {"__data__": {"id_": "5dd65121-4b7b-4d3a-9693-3d3fd0008248", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f01c9740-3279-4e2c-9c0c-5b0253123641", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "6f9a322b7a3ebf37bebc032ee3251a3978f91c1d23f421fe321cecd7b074e6bd", "class_name": "RelatedNodeInfo"}}, "text": "\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\n\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n1. ACB\u3092\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n   ```sh\n   pip uninstall adaptive_gpu_allocator\n   ```\n2. ACB\u95a2\u9023\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\n   ```sh\n   rm -rf $HOME/.acb\n   sudo rm -rf /tmp/aga-*\n   sudo rm -rf /var/log/acb\n   rm -rf $WORKDIR\n   ```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 229, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d734e832-b9da-4e8f-8448-e1adf22945b5": {"__data__": {"id_": "d734e832-b9da-4e8f-8448-e1adf22945b5", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "78c74be0-8a8d-423e-8a3a-f48ffe55ea6c", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "dc623a111d0afaaf1046207b4649e64b9f79271228b0f6b235160f16588bd80d", "class_name": "RelatedNodeInfo"}}, "text": "(\u4efb\u610f) Docker\u3092\u7528\u3044\u305f\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\n(\u88dc\u8db3) Docker\u3092\u7528\u3044\u305f\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u3092\u53c2\u7167", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 52, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7844480e-ae59-4260-8624-bcf7b8145dcd": {"__data__": {"id_": "7844480e-ae59-4260-8624-bcf7b8145dcd", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24963666-f4f5-4927-9648-3928e2ab9344", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "c2fb620b22a04ae8b08a6e038a8d823cf1c58aeb52e1e9daa73e12511aace51e", "class_name": "RelatedNodeInfo"}}, "text": "\u4f7f\u7528\u65b9\u6cd5", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 6, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "43fcb93e-42f6-4803-9bbd-2c169f9cefbd": {"__data__": {"id_": "43fcb93e-42f6-4803-9bbd-2c169f9cefbd", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cdabb918-fc54-479b-aaca-2616123db8b4", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "769f9782820cb12796505ff195253773a16ef6f69e607a3d84382b4f2896f4ef", "class_name": "RelatedNodeInfo"}}, "text": "GPU Assigner\u306e\u8d77\u52d5\nGPU Assigner\u306f`adaptive_gpu_allocator`\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3068\u3082\u306b\u81ea\u52d5\u7684\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u308b\u3002\nACB\u306b\u5bfe\u5fdc\u3057\u305f\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u524d\u306b`gpu_assigner`\u3092\u8d77\u52d5\u3059\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 122, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "72ca7ddb-e75f-439d-918a-447ceeed4f9b": {"__data__": {"id_": "72ca7ddb-e75f-439d-918a-447ceeed4f9b", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "799b815b-3656-41d0-b00d-af28d12ac079", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "945d7a55381558feece6b564e9dcd951747dcaf885ab879e817dccfbe4552b7a", "class_name": "RelatedNodeInfo"}}, "text": "GPU Assigner\u306e\u8d77\u52d5\u65b9\u6cd5", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 19, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "81a5b702-8121-4854-aefd-9def6d9f1b31": {"__data__": {"id_": "81a5b702-8121-4854-aefd-9def6d9f1b31", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bdbd12d-f197-483b-a521-6d427d4bf052", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "eb0437e17f555e3912baf4b634d5708533e5f75ffb96562ef60046e8774db830", "class_name": "RelatedNodeInfo"}}, "text": "\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u74b0\u5883\u3067\u306eGPU Assigner\u8d77\u52d5\u65b9\u6cd5\nCLI\u306b\u3066`gpu_assigner start`\u3067\u8d77\u52d5\u3059\u308b\u3002\n```sh\n$ gpu_assigner start               # Start GPU assigner\n\n> INFO: Successfully started GPU Assigner on 127.0.0.1:11234\n```\n\n`gpu_assigner status`\u3067\u8d77\u52d5\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002\n```sh\n$ gpu_assigner status              # Show current GPU assigner status\n\n> INFO: GPU assigner is running on 127.0.0.1:11234 (pid=13412)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 370, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "766bf5d6-a4b5-44cc-a847-adb9349ca362": {"__data__": {"id_": "766bf5d6-a4b5-44cc-a847-adb9349ca362", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bcbe422a-d602-4979-bd3e-6c4543782b7d", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "074b13c5604d632384ae9abb16acac5504e00f522902f37c126b039e70f21ae2", "class_name": "RelatedNodeInfo"}}, "text": "\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u74b0\u5883\u3067\u306eGPU Assigner\u8d77\u52d5\u65b9\u6cd5\n\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u74b0\u5883\u3067\u306f\u30011\u53f0\u306e\u30ce\u30fc\u30c9\u3092`controller`\u3001\u305d\u306e\u4ed6\u306e\u30ce\u30fc\u30c9\u3092`executor`\u306b\u5206\u3051\u3001\u305d\u308c\u305e\u308c\u306e\u30ce\u30fc\u30c9\u3067`gpu_assigner`\u3092\u8d77\u52d5\u3059\u308b\u3002\n\n1. \u30de\u30eb\u30c1\u30ce\u30fc\u30c9ACB\u74b0\u5883\u7528\u30d5\u30a1\u30a4\u30eb`multinode.toml`\u3092\u4f5c\u6210\u3059\u308b\u3002\n   - `$HOME/.acb/multinode.toml`\u3092\u5168\u30ce\u30fc\u30c9\u306b\u4f5c\u6210\u3059\u308b\u3002\n   - \u5185\u5bb9\u306f\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u7528\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3002\n\n2. `executor`\u30ce\u30fc\u30c9\u3067`gpu_assigner`\u3092\u8d77\u52d5\u3002\n    `executor`\u30ce\u30fc\u30c9\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\u3059\u308b\u3002\n    ```sh\n    $ gpu_assigner --multinode start --scheduler gpu-affinity\n    ```  \n3. `controller`\u30ce\u30fc\u30c9\u3067`gpu_assigner`\u3092\u8d77\u52d5\u3002\n   `controller`\u30ce\u30fc\u30c9\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\u3059\u308b\u3002\n   \u5168`executor`\u304c\u8d77\u52d5\u3057\u305f\u5f8c\u306b`controller`\u3092\u8d77\u52d5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n    ```\n    $ gpu_assigner --multinode start --scheduler gpu-affinity\n    ```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 559, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80c4e768-6217-4c46-af96-7ca1fe2922fd": {"__data__": {"id_": "80c4e768-6217-4c46-af96-7ca1fe2922fd", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "61f5b9af-3b07-40a7-a6eb-40e5966bcedd", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "06572f8f721ece69e75571069a30d26a7ca707487b70c7aa9386185cff851e90", "class_name": "RelatedNodeInfo"}}, "text": "\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u7528\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb(`multinode.toml`)\n\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u30b8\u30e7\u30d6\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u3001\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u7528\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb(`multinode.toml`)\u3092\u5404\u30ce\u30fc\u30c9\u306b\u914d\u7f6e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n- \u914d\u7f6e\u5834\u6240\n  \u5404\u30ce\u30fc\u30c9\u306e`$HOME/.acb/`\n\n- \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u65b9\n  ```\n  [controller0]\n  type = \"controller\"\n  ipaddr = \"\"\n  logfile = \"/.acb/gpu-assigner.controller0.log\"\n  pidfile = \"/.acb/gpu-assigner.controller0.pid\"\n  port = 11234\n  \n  [executor0]\n  type = \"executor\"\n  ipaddr = \"\"\n  logfile = \"/.acb/gpu-assigner.executor0.log\"\n  pidfile = \"/.acb/gpu-assigner.executor0.pid\"\n  port = 11234\n  ```\n  - `[controller0], [executor0]` : \u30ce\u30fc\u30c9\u306e\u540d\u79f0(`hostname`)\n  - `type` : \u30ce\u30fc\u30c9\u306e\u7a2e\u985e(`controller`, `executor`)\n    - `controller` : \u5404`executer`\u304b\u3089\u6765\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u307e\u3068\u3081\u3066\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u5b9f\u65bd\u3002\u4e00\u3064\u306e\u307f\u8a2d\u5b9a\u53ef\u80fd\u3002\n    - `executor` : `controller`\u304b\u3089\u6765\u305fGPU\u60c5\u5831\u7b49\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3057\u81ea\u8eab\u306eGPU\u60c5\u5831\u3092\u9001\u4fe1\u3057\u3001`controller`\u304b\u3089\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30b8\u30e7\u30d6\u3092\u5b9f\u884c\u3059\u308b\u30ce\u30fc\u30c9\u3002\n  - `ipaddr` : IP\u30a2\u30c9\u30ec\u30b9\n  - `logfile` : GPU Assigner\u306e\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u540d\u3002\u30c7\u30d5\u30a9\u30eb\u30c8: `$HOME/.acb/gpu-assigner.{my_hostname}.log`\n  - `pidfile` : GPU Assigner\u306epid\u30d5\u30a1\u30a4\u30eb\u540d\u3002\u30c7\u30d5\u30a9\u30eb\u30c8: `$HOME/.acb/gpu-assigner.{my_hostname}.pid`\n  - `port` : \u30dd\u30fc\u30c8\u756a\u53f7\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8: `11234`", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 978, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "361c70c9-3ded-46eb-83d9-fd6880bbe72c": {"__data__": {"id_": "361c70c9-3ded-46eb-83d9-fd6880bbe72c", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bba6b4c4-03af-4769-96e6-6ed7e6dd0485", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "8aa2aa43dd18a95c62374c026e97ccc3dd244d1114ac2e415d959dbd702319cc", "class_name": "RelatedNodeInfo"}}, "text": "GPU Assigner\u306e\u6a5f\u80fd", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 17, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d9b5fb7-960e-470f-9363-f511dc254cab": {"__data__": {"id_": "4d9b5fb7-960e-470f-9363-f511dc254cab", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2dd2a0c1-e166-4c6d-87f7-0966b2c4b959", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "36e5e6a8215a71f36259ef2ad90f1de6d3f900ebd15c69b1377844fdfaac04f0", "class_name": "RelatedNodeInfo"}}, "text": "GPU\u30c7\u30d0\u30a4\u30b9\u9078\u629e\u6a5f\u80fd\n\nGPU\u3092\u8907\u6570\u642d\u8f09\u3057\u3066\u3044\u308b\u5834\u5408\u3001ACB\u304c\u5229\u7528\u3059\u308bGPU\u30c7\u30d0\u30a4\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nGPU Assigner\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\u5168GPU\u30c7\u30d0\u30a4\u30b9\u3092\u5bfe\u8c61\u3068\u3057\u3066\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u3078\u306e\u5272\u308a\u5f53\u3066\u3092\u884c\u3046\u3002\nGPU Assigner\u304c\u5bfe\u8c61\u3068\u3059\u308bGPU\u30c7\u30d0\u30a4\u30b9\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f`gpu_assigner start`\u306e\u5f15\u6570\u306b`--gpu-list GPU\u30c7\u30d0\u30a4\u30b9\u756a\u53f7\u30ea\u30b9\u30c8`\u3067\u5229\u7528\u3059\u308bGPU\u30c7\u30d0\u30a4\u30b9\u756a\u53f7\u3092\u6307\u5b9a\u3059\u308b\u3002\nGPU\u30c7\u30d0\u30a4\u30b9\u756a\u53f7\u306f`nvidia-smi`\u30b3\u30de\u30f3\u30c9\u3067\u8868\u793a\u3055\u308c\u308bGPU\u30c7\u30d0\u30a4\u30b9\u756a\u53f7\u3067\u3042\u308b\u3002\n\u8907\u6570\u306eGPU\u30c7\u30d0\u30a4\u30b9\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u3001GPU\u30c7\u30d0\u30a4\u30b9\u306e\u756a\u53f7\u3092\u30b3\u30f3\u30de\u533a\u5207\u308a\u3067\u300c0,1,2,...\u300d\u306e\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3002\n\u4f8b\uff09GPU\u30c7\u30d0\u30a4\u30b90,1,2\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n```sh\n$ gpu_assigner start --gpu-list 0,1,2\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 394, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e9514f4f-8bf1-4519-bbad-9b294b0ef386": {"__data__": {"id_": "e9514f4f-8bf1-4519-bbad-9b294b0ef386", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "440814f2-187a-4dca-ad87-ffb3c0f77bbf", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "5bdb4557b2512e188a9e478422fbc69d390976c72375c00b84ddd92be3a91804", "class_name": "RelatedNodeInfo"}}, "text": "\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 8, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7fdf8e34-60d8-43da-8930-16b90fe57592": {"__data__": {"id_": "7fdf8e34-60d8-43da-8930-16b90fe57592", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b1c6269c-97db-449d-b299-1e72edb83239", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "8080d0bd2b7bed83e03f457f1c18f7262a22ba2dd7ded0da53139664384a8808", "class_name": "RelatedNodeInfo"}}, "text": "simple (1\u30b8\u30e7\u30d61GPU\u5360\u6709)\nGPU Assigner\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fsimple\u3068\u547c\u3070\u308c\u308b\u8907\u6570\u30b8\u30e7\u30d6\u9593\u3067GPU\u5171\u6709\u3092\u884c\u308f\u306a\u3044\u5358\u7d14\u306aFirst-In First-Out(FIFO)\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066GPU\u5272\u308a\u5f53\u3066\u3092\u884c\u3046\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 120, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82829234-b295-4eec-8a00-0dc7746622a5": {"__data__": {"id_": "82829234-b295-4eec-8a00-0dc7746622a5", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "95062667-6bc9-44a7-bd6b-506e4d0f07dd", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "70cc362508cae19bc5fb108429b23f6e65c80d9df7a5cfc87aa2381ad3067b63", "class_name": "RelatedNodeInfo"}}, "text": "gpu-sharing (\u8907\u6570\u30b8\u30e7\u30d6\u304c1GPU\u3092\u5171\u6709)\nGPU Assigner\u306fgpu-sharing\u3068\u547c\u3070\u308c\u308b\u30e1\u30e2\u30ea\u5bb9\u91cf\u304c\u8a31\u5bb9\u3059\u308b\u7bc4\u56f2\u5185\u30671\u3064\u306eGPU\u306b\u8907\u6570\u306e\u30b8\u30e7\u30d6\u3092\u5272\u308a\u5f53\u3066\u308b\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3082\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3002\ngpu-sharing\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f`gpu_assigner start`\u306e\u5f15\u6570\u306b`--scheduler gpu-sharing`\u3092\u6307\u5b9a\u3057\u3066GPU Assigner\u3092\u8d77\u52d5\u3059\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 214, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d4af325b-4436-4a80-b963-2f09693b5608": {"__data__": {"id_": "d4af325b-4436-4a80-b963-2f09693b5608", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "112d9d33-aab9-4557-9695-98aa1cdc3f77", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "3e3e0e630ddc83e6e3cf6ccf5010fb5c7adb4da9a9f3205530d1312e613fedbf", "class_name": "RelatedNodeInfo"}}, "text": "gpu-affinity (\u30de\u30eb\u30c1GPU\u30b8\u30e7\u30d6\u306b\u5bfe\u5fdc\u3057\u305fGPU\u306e\u5171\u6709)\ngpu-affinity\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306f\u30de\u30eb\u30c1GPU\u30b8\u30e7\u30d6\u306e\u305f\u3081\u306b\u7528\u610f\u3055\u308c\u305f\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3067\u3042\u308b\u3002FIFO\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3092\u57fa\u672c\u3068\u3057\u3066GPU\u3092\u5272\u308a\u5f53\u3066\u308b\u304c\u3001\u305d\u308c\u3067\u3082GPU\u306b\u7a7a\u304d\u304c\u3042\u308b\u5834\u5408\u306b\u306fFIFO\u306e\u30dd\u30ea\u30b7\u30fc\u306b\u3068\u3089\u308f\u308c\u305aGPU\u306e\u4f7f\u7528\u7387\u304c\u6700\u5927\u3068\u306a\u308b\u3088\u3046\u306b\u30b8\u30e7\u30d6\u3092\u5b9f\u884c\u3059\u308bBackfill\u6a5f\u80fd\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3002\n\u307e\u305f\u3001gpu-affinity\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306f\u30e1\u30e2\u30ea\u6d88\u8cbb\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u5897\u3048\u308b\u30b8\u30e7\u30d6\u5b9f\u884c\u6642\u306eGPU\u79fb\u52d5\u3092\u9632\u3050\u305f\u3081GPU Affinity\u3068\u547c\u3070\u308c\u308b\u30b8\u30e7\u30d6\u304c\u4f7f\u3046\u3079\u304dGPU\u4e00\u89a7\u3092\u8a2d\u5b9a\u3057\u3001\u3053\u306eGPU Affinity\u3092\u3082\u3068\u306b\u30b8\u30e7\u30d6\u3078\u306eGPU\u5272\u308a\u5f53\u3066\u3092\u884c\u3046\u3053\u3068\u3067\u3001\u9ad8\u3044GPU\u5229\u7528\u52b9\u7387\u3068\u52b9\u7387\u7684\u306a\u30e1\u30e2\u30ea\u7ba1\u7406\u3092\u5b9f\u73fe\u3059\u308bGPU Affinity\u6a5f\u80fd\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3002\ngpu-affinity\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f`gpu_assigner start`\u306e\u5f15\u6570\u306b`--scheduler gpu-affinity`\u3092\u6307\u5b9a\u3057\u3066GPU Assigner\u3092\u8d77\u52d5\u3059\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 467, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "08403595-928e-4afd-91d5-57c355e28cd6": {"__data__": {"id_": "08403595-928e-4afd-91d5-57c355e28cd6", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9dfeb9aa-f1d8-44ba-ac40-22c25185e8ca", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "962617954b7a8b20555d322cbb7f5f25f8c0a28003cf04adae80896e38fa39c2", "class_name": "RelatedNodeInfo"}}, "text": "\u6700\u5927\u6d88\u8cbb\u30e1\u30e2\u30ea\u91cf\u4e88\u6e2c\u6a5f\u80fd\ngpu-sharing\u306e\u3088\u3046\u306b\u8907\u6570\u306e\u30b8\u30e7\u30d6\u3092\u4e00\u3064\u306eGPU\u306b\u8a70\u3081\u8fbc\u3080\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3067\u306f\u3001\u30b8\u30e7\u30d6\u306e\u6d88\u8cbb\u30e1\u30e2\u30ea\u91cf\u304cGPU\u306e\u642d\u8f09\u30e1\u30e2\u30ea\u91cf\u3092\u8d85\u3048\u306a\u3044\u3088\u3046\u306b\u8abf\u6574\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u305d\u3053\u3067\u3001ACB\u3067\u306f\u30b8\u30e7\u30d6\u306e\u6d88\u8cbb\u30e1\u30e2\u30ea\u91cf\u3092\u30b8\u30e7\u30d6\u306e\u5b9f\u884c\u72b6\u614b\u304b\u3089\u4e88\u6e2c\u3059\u308b\u6a5f\u80fd\u3092\u6301\u3064\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 137, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a1295758-3432-419d-9bf3-f9852b3d8633": {"__data__": {"id_": "a1295758-3432-419d-9bf3-f9852b3d8633", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c932706-3b61-4058-812d-a5a211d045e6", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "1ff4322d58ad0222ba561ff53dfa1fa0f1f4deb3c3fec187f9dc152f646cbab9", "class_name": "RelatedNodeInfo"}}, "text": "\u8907\u6570GPU\u30d7\u30ed\u30bb\u30b9\u5bfe\u5fdc\nGPU Assigner\u306f\u8907\u6570GPU\u3092\u5229\u7528\u3059\u308b\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u306e\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5bfe\u5fdc\u3059\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 59, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2f1c961-6f9d-4d26-8995-a6a7902b1db6": {"__data__": {"id_": "d2f1c961-6f9d-4d26-8995-a6a7902b1db6", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8b9e5d7e-72c8-4c76-8be3-651361362351", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "6148c94226ceefdbb1ce73af24c94404c6b34750f596a69d268ef67112b401f0", "class_name": "RelatedNodeInfo"}}, "text": "Backfill\u6a5f\u80fd\nBackfill\u6a5f\u80fd\u306fFIFO\u306e\u516c\u5e73\u6027\u3092\u306a\u308b\u3079\u304f\u7dad\u6301\u3057\u3064\u3064GPU\u306e\u5229\u7528\u52b9\u7387\u3092\u9ad8\u3081\u308b\u6a5f\u80fd\u3067\u3042\u308b\u3002\nBackfill\u6a5f\u80fd\u3092\u6709\u52b9\u306b\u3059\u308b\u3068\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306f\u57fa\u672c\u7684\u306bFIFO\u30dd\u30ea\u30b7\u30fc\u3092\u7528\u3044\u3066\u30b8\u30e7\u30d6\u306bGPU\u3092\u5272\u308a\u5f53\u3066\u308b\u3002\u3057\u304b\u3057\u305d\u308c\u3067\u3082GPU\u306b\u7a7a\u304d\u304c\u3042\u308b\u5834\u5408\u306b\u306f\u3001\u5b9f\u884c\u6642\u9593\u4e88\u6e2c\u6a5f\u80fd\u3092\u7528\u3044\u3066FIFO\u30dd\u30ea\u30b7\u30fc\u306b\u3088\u308b\u6b21\u306eGPU\u5272\u308a\u5f53\u3066\u6642\u523b\u3092\u4e88\u6e2c\u3057\u3001\u305d\u306e\u6642\u523b\u307e\u3067\u306fGPU\u304c\u7a7a\u3044\u3066\u3044\u308b\u3068\u60f3\u5b9a\u3057\u3066\u305d\u306e\u6642\u9593\u5185\u3067\u5b9f\u884c\u3067\u304d\u308b\u30b8\u30e7\u30d6\u306bGPU\u3092\u5272\u308a\u5f53\u3066\u308b\u3002\u305d\u3046\u3059\u308b\u3053\u3068\u3067\u3001FIFO\u30dd\u30ea\u30b7\u30fc\u306b\u3088\u308bGPU\u5272\u308a\u5f53\u3066\u306e\u516c\u5e73\u6027\u3092\u7dad\u6301\u3057\u305f\u307e\u307eGPU\u5229\u7528\u52b9\u7387\u3092\u9ad8\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "10c76921-9b71-49c8-a8f0-b5e6ab4f4a0b": {"__data__": {"id_": "10c76921-9b71-49c8-a8f0-b5e6ab4f4a0b", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "48471b64-bfa4-4ad9-a3f7-6b01e0b0ef3c", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "356868ec7b6b155491c9cc934e371091c1ea82f78a2fab54418426d13828b727", "class_name": "RelatedNodeInfo"}}, "text": "\u5b9f\u884c\u6642\u9593\u4e88\u6e2c\u6a5f\u80fd\n\u5b9f\u884c\u6642\u9593\u306e\u5c65\u6b74\u304b\u3089\u5404\u30b8\u30e7\u30d6\u306e\u6700\u5927\u5b9f\u884c\u6642\u9593\u3092\u63a8\u5b9a\u3059\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 37, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0ed0e892-f3ef-4ff2-b537-cab439eea8bd": {"__data__": {"id_": "0ed0e892-f3ef-4ff2-b537-cab439eea8bd", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d7067e68-1a37-4ccf-9874-93ab9bba84fa", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "c9e0994d58b808d5e872ee24aea694502a9a81fe5bfb46a9edcccf28283d5bf5", "class_name": "RelatedNodeInfo"}}, "text": "GPU Affinity\u6a5f\u80fd\nGPU Affinity\u6a5f\u80fd\u306f\u3001\u9ad8\u3044GPU\u5229\u7528\u52b9\u7387\u3068\u52b9\u7387\u7684\u306a\u30e1\u30e2\u30ea\u7ba1\u7406\u3092\u5b9f\u73fe\u3059\u308b\u6a5f\u80fd\u3067\u3042\u308b\u3002\nGPU Affinity\u6a5f\u80fd\u3092\u6709\u52b9\u306b\u3059\u308b\u3068\u3001\u30de\u30eb\u30c1GPU\u30b8\u30e7\u30d6\u306b\u3064\u3044\u3066\u306f\uff11\u56de\u76ee\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u4ee5\u964d\u5e38\u306bGPU Affinity\u304c\u8a2d\u5b9a\u3055\u308c\u3001GPU Affinity\u3067\u6307\u5b9a\u3055\u308c\u305fGPU\u3092\u4f7f\u3046\u3088\u3046\u306b\u30b8\u30e7\u30d6\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u3002\u3053\u308c\u306b\u3088\u308a\u3001GPU Affinity\u3067\u6307\u5b9a\u3055\u308c\u305fGPU\u306e\u307f\u304c\u5b9f\u884c\u6642\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u30e1\u30e2\u30ea\u30fc\u4e0a\u306b\u6301\u3061\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306b\u3088\u308b\u30b8\u30e7\u30d6\u306e\u5207\u308a\u66ff\u3048\u3092\u306f\u3055\u3093\u3067\u3082\u5e38\u306b\u540c\u3058\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u4f7f\u3046\u305f\u3081\u3001\u30e1\u30e2\u30ea\u6d88\u8cbb\u91cf\u3092\u7bc0\u7d04\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u306a\u304a\u3001\u30b7\u30f3\u30b0\u30ebGPU\u30b8\u30e7\u30d6\u306b\u3064\u3044\u3066\u306f\u3001\u30de\u30eb\u30c1GPU\u3068\u540c\u69d8\u306bGPU Affinity\u3092\u8003\u616e\u3059\u308b\u304c\u3001\u5b9f\u884c\u6642\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30e2\u30ea\u7ba1\u7406\u6a5f\u80fd\u3092\u7528\u3044\u3066GPU\u306e\u7a7a\u304d\u30e1\u30e2\u30ea\u91cf\u3092\u76e3\u8996\u3057\u3001\u7a7a\u304d\u30e1\u30e2\u30ea\u91cf\u304c\u5341\u5206\u5927\u304d\u3044\u3068\u5224\u65ad\u3057\u305f\u5834\u5408\u306fGPU Affinity\u306b\u95a2\u4fc2\u306a\u304fGPU\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 415, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da15237b-5031-499e-bc55-6dbace671cab": {"__data__": {"id_": "da15237b-5031-499e-bc55-6dbace671cab", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9aec2e82-1e7d-417c-bc8e-76da10055d04", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "bc6b0b6cbd3fac15e9905e59fe0953483bb1f8b6b3f62123f77e4edd0879de33", "class_name": "RelatedNodeInfo"}}, "text": "\u5b9f\u884c\u6642\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30e2\u30ea\u7ba1\u7406\u6a5f\u80fd\nGPU\u30e1\u30e2\u30ea\u5185\u306e\u5b9f\u884c\u6642\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30e2\u30ea\u91cf\u3092\u76e3\u8996\u3057\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30e2\u30ea\u91cf\u304c\u3057\u304d\u3044\u5024\u672a\u6e80\u306e\u5834\u5408\u306f\u7a7a\u304d\u30e1\u30e2\u30ea\u91cf\u304c\u5927\u304d\u3044\u3068\u5224\u65ad\u3059\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 82, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "295441d5-0a19-406f-8c26-34aab600154d": {"__data__": {"id_": "295441d5-0a19-406f-8c26-34aab600154d", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b986dc2a-50f9-48a7-b357-a3176c3e8411", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "2a918c5f1ef16a7c3000a1d412c417a4acd5067d879cf244b24024e4c6ca6d8c", "class_name": "RelatedNodeInfo"}}, "text": "`gpu_assigner`\u306e\u5f15\u6570\n- GPU Assigner\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30d8\u30eb\u30d7 : `gpu_assigner -h`\n  GPU Assigner\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4e00\u89a7\u304c\u8868\u793a\u3055\u308c\u308b\n  ```\n  $ gpu_assigner -h\n  usage: gpu_assigner [-h] \n                      [--address ADDRESS] \n                      [--port PORT] \n                      [--pid-file-path PID_FILE_PATH]\n                      {start,status,stop} ...\n\n  positional arguments:\n    {start,status,stop}   GPU Assigner commands\n      start               start GPU Assigner\n      status              show the status of GPU Assigner\n      stop                stop GPU Assigner\n\n  options:\n    -h, --help            show this help message and exit\n\n  GPU Assigner options:\n    --address ADDRESS     GPU Assigner address (default: 127.0.0.1)\n    --port PORT           GPU Assigner port (default: 11234)\n\n  Pid File options:\n    --pid-file-path PID_FILE_PATH\n                          pid file path (default: $HOME/.acb/gpu-assigner.pid)\n  ```\n - GPU Assigner\u304c\u4f7f\u7528\u3059\u308b\u30a2\u30c9\u30ec\u30b9\u306e\u5909\u66f4(`--address`)  \n  GPU Assigner\u304c\u4f7f\u7528\u3059\u308b\u30a2\u30c9\u30ec\u30b9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f`127.0.0.1`\u3067\u3042\u308b\u3002\n  \u4ed6\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u5b9f\u884c\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3`--address`\u3067\u8a2d\u5b9a\u3059\u308b\u3002\n  \u8a2d\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001`start`/`status`/`stop`\u30b3\u30de\u30f3\u30c9\u306e\u524d\u3067\u6307\u5b9a\u3059\u308b\u3002\n\n    ```sh\n    $ gpu_assigner --address \u30a2\u30c9\u30ec\u30b9 [start|status|stop]\n    ```\n\n - GPU Assigner\u304c\u4f7f\u7528\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u306e\u5909\u66f4(`--port`)  \n  GPU Assigner\u304c\u4f7f\u7528\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f`11234`\u3067\u3042\u308b\u3002\n  \u4ed6\u306e\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u5b9f\u884c\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3`--port`\u3067\u8a2d\u5b9a\u3059\u308b\u3002\n  \u8a2d\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001`start`/`status`/`stop`\u30b3\u30de\u30f3\u30c9\u306e\u524d\u3067\u6307\u5b9a\u3059\u308b\u3002\n\n    ```sh\n    $ gpu_assigner --port \u30dd\u30fc\u30c8\u756a\u53f7 [start|status|stop]\n    ```\n    \u3055\u3089\u306b\u3001ACB\u3092\u7528\u3044\u305f\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u6642\u306b\u305d\u306e\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u74b0\u5883\u5909\u6570`AGA_GPU_ALLOC_SERVER_PORT`\u306b\u8a2d\u5b9a\u3057\u3066`agarun`\u3092\u5b9f\u884c\u3059\u308b\u3002\u8a73\u7d30\u306f\u5f8c\u8ff0\u306eACB\u3092\u7528\u3044\u305f\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u3092\u53c2\u7167\u3002\n\n- PID\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a(`--pid-file-path`)\n  GPU Assigner\u306e\u30d7\u30ed\u30bb\u30b9ID\u3068\u30d7\u30ed\u30bb\u30b9\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081PID\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f`$HOME/.acb/gpu-assigner.pid`\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n  PID\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306f\u5b9f\u884c\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3`--pid-file-path`\u3067\u6307\u5b9a\u3059\u308b\u3002\n  \u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001`start`/`status`/`stop`\u30b3\u30de\u30f3\u30c9\u306e\u524d\u3067\u6307\u5b9a\u3059\u308b\u3002\n\n  ```sh\n  $ gpu_assigner --pid-file-path PID\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9 [start|status|stop]\n  ```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1826, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96c8644f-0595-4f52-8581-bf69d228b780": {"__data__": {"id_": "96c8644f-0595-4f52-8581-bf69d228b780", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f1186b8d-993d-4545-8516-06de9596ec52", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "74c52af46e7d1d11369ee280414f1b2f98fab5c2093cdc6f03524d8f9f5b2903", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "df990b47-47b7-498b-9b9a-8275d7f3c81f", "node_type": "1", "metadata": {}, "hash": "60b7240bf18907d9b72d36dbb616395423e7cfa194c7a52a7d3f75fe21221663", "class_name": "RelatedNodeInfo"}}, "text": "`gpu_assigner start`\u306e\u5f15\u6570\n\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001`start`\u30b3\u30de\u30f3\u30c9\u306e\u5f8c\u3067\u6307\u5b9a\u3059\u308b\u3002\n\n- `gpu_assigner start`\u30b3\u30de\u30f3\u30c9\u306e\u5f15\u6570\u306b\u3064\u3044\u3066\u306e\u30d8\u30eb\u30d7 : `gpu_assigner start -h`\n  `gpu_assigner start`\u306e\u5f15\u6570\u306e\u4e00\u89a7\u304c\u8868\u793a\u3055\u308c\u308b\n  ```\n  $ gpu_assigner start -h\n    usage: gpu_assigner start [-h] [--exe-est-start-count EXE_EST_START_COUNT]\n                              [--exe-est-latest-count EXE_EST_LATEST_COUNT] [--exe-est-interval EXE_EST_INTERVAL]\n                              [--exe-est-percentile EXE_EST_PERCENTILE]\n                              [--exe-est-default-execution-time EXE_EST_DEFAULT_EXECUTION_TIME]\n                              [--gpu-assigner-working-directory GPU_ASSIGNER_WORKING_DIRECTORY]\n                              [--gpu-assigner-max-workers GPU_ASSIGNER_MAX_WORKERS]\n                              [--gpu-assigner-execution-time GPU_ASSIGNER_EXECUTION_TIME] [--log-path LOG_PATH] [-v]\n                              [--scheduler SCHEDULER] [--gpu-list GPU_LIST]\n                              [--mem-est-start-count MEM_EST_START_COUNT] [--mem-est-interval MEM_EST_INTERVAL]\n                              [--mem-est-data-max-len MEM_EST_DATA_MAX_LEN]\n                              [--mem-est-percentile MEM_EST_PERCENTILE] [--mem-est-fixed-ratio MEM_EST_FIXED_RATIO]\n                              [--mem-est-select-strategy MEM_EST_SELECT_STRATEGY]\n                              [--res-mem-manager-resident-memory-threshold RES_MEM_MANAGER_RESIDENT_MEMORY_THRESHOLD]\n\n    options:\n      -h, --help            show this help message and exit\n\n    Execution Time Estimator (exe-est) options:\n      --exe-est-start-count EXE_EST_START_COUNT\n                            the count at which the estimator starts (default: 10)\n      --exe-est-latest-count EXE_EST_LATEST_COUNT\n                            the latest count of execution time which the estimator uses. (default: 100)\n      --exe-est-interval EXE_EST_INTERVAL\n                            the interval at which the estimator updates (default: 10)\n      --exe-est-percentile EXE_EST_PERCENTILE\n                            the percentile used by the estimator. (default: 0.9)\n      --exe-est-default-execution-time EXE_EST_DEFAULT_EXECUTION_TIME\n                            set the default execution time of a job with unknown execution time (msec). (default: 0)\n\n    GPU Assigner options:\n      --gpu-assigner-working-directory GPU_ASSIGNER_WORKING_DIRECTORY\n                            working directory of GPU Assigner (default: None)\n      --gpu-assigner-max-workers GPU_ASSIGNER_MAX_WORKERS\n                            max workers of GPU Assigner (default: 128)\n      --gpu-assigner-execution-time GPU_ASSIGNER_EXECUTION_TIME\n                            Execution time of GPU Assigner (default: None)\n\n    Log options:\n      --log-path LOG_PATH   log path (default: $HOME/.acb/gpu-assigner.log)\n      -v, --verbose         verbose logging (default: False)\n\n    Scheduler options:\n      --scheduler SCHEDULER\n                            scheduler type (default: simple)\n      --gpu-list GPU_LIST   allowed GPU device indices (default: None)\n\n    Peak Memory Estimator (mem-est) options:\n      --mem-est-start-count MEM_EST_START_COUNT\n                            the count at which the estimator starts (default: 10)\n      --mem-est-interval MEM_EST_INTERVAL\n                            the interval at which the estimator updates (default: 10)\n      --mem-est-data-max-len MEM_EST_DATA_MAX_LEN\n                            the latest count of peak memory usage which the estimator uses. (default: 100)\n      --mem-est-percentile MEM_EST_PERCENTILE\n                            the percentile used by the estimator. (default: 0.99)\n      --mem-est-fixed-ratio MEM_EST_FIXED_RATIO\n                            the ratio by which the estimator multiply the max peak memory usage.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 3788, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "df990b47-47b7-498b-9b9a-8275d7f3c81f": {"__data__": {"id_": "df990b47-47b7-498b-9b9a-8275d7f3c81f", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f1186b8d-993d-4545-8516-06de9596ec52", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "74c52af46e7d1d11369ee280414f1b2f98fab5c2093cdc6f03524d8f9f5b2903", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96c8644f-0595-4f52-8581-bf69d228b780", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "a1ff2b1ce70fae7fc91d9ccde614c7dc25c571fb946dd974610d97da654e61c8", "class_name": "RelatedNodeInfo"}}, "text": "(default: 100)\n      --mem-est-percentile MEM_EST_PERCENTILE\n                            the percentile used by the estimator. (default: 0.99)\n      --mem-est-fixed-ratio MEM_EST_FIXED_RATIO\n                            the ratio by which the estimator multiply the max peak memory usage. (default: 1.1)\n      --mem-est-select-strategy MEM_EST_SELECT_STRATEGY\n                            whether to use max or min for calculating the allocation memory from user-given and\n                            system-detected memories (default: min)\n\n    Resident memory manager options:\n      --res-mem-manager-resident-memory-threshold RES_MEM_MANAGER_RESIDENT_MEMORY_THRESHOLD\n                            set the resident memory threshold of GPU memory (default: 0.25)\n  ```\n\n- \u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a(`--log-path`)\n\n  GPU Assigner\u304c\u4f5c\u6210\u3059\u308b\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f`$HOME/.acb/gpu-assigner.log`\u3067\u3042\u308b\u3002\n  \u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306f\u5b9f\u884c\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3`--log-path`\u3067\u6307\u5b9a\u3059\u308b\u3002\n  ```sh\n  $ gpu_assigner start --log-path \u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\n  ```\n\n- \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e\u6307\u5b9a(`--scheduler`)\n  \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e\u7a2e\u985e\u3092\u6307\u5b9a\u3059\u308b\u5f15\u6570\u3002\n  - `simple` : \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3002\u5168\u30b8\u30e7\u30d6\u304c\u30b7\u30f3\u30b0\u30ebGPU\u30b8\u30e7\u30d6\u306e\u5834\u5408\u306b\u6307\u5b9a\u3002\n  - `gpu-sharing` : \u5168\u30b8\u30e7\u30d6\u304c\u30b7\u30f3\u30b0\u30ebGPU\u30b8\u30e7\u30d6\u3001\u304b\u3064\u3001\u30b8\u30e7\u30d6\u306e\u6d88\u8cbb\u30e1\u30e2\u30ea\u91cf\u304c1GPU\u306e\u30e1\u30e2\u30ea\u30b5\u30a4\u30ba\u3088\u308a\u3082\u5c0f\u3055\u3044\u5834\u5408\u306bgpu-sharing\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3092\u6307\u5b9a\u3059\u308b\u3002\n  \n  ```sh\n  $ gpu_assigner start --scheduler gpu-sharing\n  ```\n  - `gpu-affinity` : \u30de\u30eb\u30c1GPU\u30b8\u30e7\u30d6\u3082\u5b9f\u884c\u3059\u308b\u5834\u5408\u306fgpu-affinity\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3092\u6307\u5b9a\u3059\u308b\u3002\n  \n  ```sh\n  $ gpu_assigner start --scheduler gpu-affinity\n  ```\n\n\n- GPU\u30c7\u30d0\u30a4\u30b9\u306e\u6307\u5b9a(`--gpu-list`)\n  \u4f7f\u7528\u3059\u308bGPU\u3092\u6307\u5b9a\u3059\u308b\u5f15\u6570\u3002GPU\u756a\u53f7\u3092\u30ab\u30f3\u30de\u533a\u5207\u308a\u306e\u30ea\u30b9\u30c8\u3067\u6e21\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u5168GPU\u306eGPU\u756a\u53f7\u3002\n  ```sh\n  $ gpu_assigner start --gpu-list 0,1,2\n  ```\n\n- \u5b9f\u884c\u6642\u9593\u4e88\u6e2c\u6a5f\u80fd\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\n  - `--exe-est-default-execution-time ` : \u30b8\u30e7\u30d6\u306e\u5b9f\u884c\u6642\u9593\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306b\u4f7f\u7528\u3055\u308c\u308b\u6700\u5927\u5b9f\u884c\u6642\u9593 (msec) (\u30c7\u30d5\u30a9\u30eb\u30c80)\n    - FIFO\u30ad\u30e5\u30fc\u304b\u3089\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u305f\u30b8\u30e7\u30d6\u306e\u5b9f\u884c\u6642\u9593\u304c\u672a\u77e5\u306e\u5834\u5408\u306bBackfill\u53ef\u80fd\u306a\u30b8\u30e7\u30d6\u3092\u63a2\u3059\u305f\u3081\u306b\u4f7f\u7528\n  - `--exe-est-start-count ` : \u6700\u5927\u5b9f\u884c\u6642\u9593\u306e\u63a8\u5b9a\u3092\u59cb\u3081\u308b\u30c7\u30fc\u30bf\u6570(\u30c7\u30d5\u30a9\u30eb\u30c810)\n  - `--exe-est-latest-count ` : \u6700\u5927\u5b9f\u884c\u6642\u9593\u63a8\u5b9a\u306b\u4f7f\u7528\u3059\u308b\u76f4\u8fd1\u306e\u30c7\u30fc\u30bf\u6570(\u30c7\u30d5\u30a9\u30eb\u30c8100)\n  - `--exe-est-interval ` : \u6700\u5927\u5b9f\u884c\u6642\u9593\u306e\u63a8\u5b9a\u5024\u3092\u66f4\u65b0\u3059\u308b\u30c7\u30fc\u30bf\u6570(\u30c7\u30d5\u30a9\u30eb\u30c810)\n  - `--exe-est-percentile `  : \u6700\u5927\u5b9f\u884c\u6642\u9593\u63a8\u5b9a\u306e\u30d1\u30fc\u30bb\u30f3\u30bf\u30a4\u30eb\u5024(\u30c7\u30d5\u30a9\u30eb\u30c80.9)\n\n- \u5b9f\u884c\u6642\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30e2\u30ea\u7ba1\u7406\u6a5f\u80fd\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\n  - `--res-mem-manager-resident-memory-threshold `: \u30b7\u30f3\u30b0\u30ebGPU\u30b8\u30e7\u30d6\u306eGPU\u306e\u79fb\u52d5\u5236\u9650\u3092\u884c\u3046\u3057\u304d\u3044\u5024\u3002GPU\u30e1\u30e2\u30ea\u5185\u306e\u5b9f\u884c\u6642\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30e2\u30ea\u91cf\u306e\u5272\u5408(\u30c7\u30d5\u30a9\u30eb\u30c80.25)\n    - GPU\u30e1\u30e2\u30ea\u5185\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30e2\u30ea\u91cf\u304c\u3057\u304d\u3044\u5024\u672a\u6e80\u306e\u5834\u5408\u306fGPU Affinity\u3092\u7121\u8996\u3057\u305f\u5272\u308a\u5f53\u3066\u304c\u53ef\u80fd\u3002", "mimetype": "text/plain", "start_char_idx": 3501, "end_char_idx": 5599, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0818e267-99a1-4c06-956f-9dc7253ee84d": {"__data__": {"id_": "0818e267-99a1-4c06-956f-9dc7253ee84d", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b1588156-7774-45bf-b9ca-8f1048d44312", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "96d37145697b9778fccfec46a588343131d3db3cdf8aec043e7573e0b28564aa", "class_name": "RelatedNodeInfo"}}, "text": "\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5909\u66f4\n\nACB\u3067\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5909\u66f4\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002\n\nACB\u306f\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5404\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u30c7\u30d0\u30a4\u30b9(CPU or GPU)\u3092\u52d5\u7684\u306b\u5272\u308a\u5f53\u3066\u308b\u304c\u3001\u30c7\u30d0\u30a4\u30b9\u3092\u5207\u308a\u66ff\u3048\u308b\u65b9\u6cd5\u306b\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306ea.\u518d\u8d77\u52d5\u3092\u884c\u308f\u306a\u3044\u7248(a.\u518d\u8d77\u52d5\u306a\u3057\u7248)\u3068\u518d\u8d77\u52d5\u304c\u5fc5\u8981\u306a\u7248(b.\u518d\u8d77\u52d5\u3042\u308a\u7248)\u306e2\u7a2e\u985e\u304c\u3042\u308b\u3002\nb.\u518d\u8d77\u52d5\u3042\u308a\u7248\u3067\u306f\u30e1\u30e2\u30ea\u4e0a\u306e\u30c7\u30fc\u30bf\u306e\u9000\u907f\u3084\u5fa9\u5143\u306a\u3069\u306e\u51e6\u7406\u304c\u5fc5\u8981\u3068\u306a\u308b\u305f\u3081a.\u518d\u8d77\u52d5\u306a\u3057\u7248\u306b\u6bd4\u3079\u51e6\u7406\u901f\u5ea6\u304c\u4e0b\u304c\u308b\u304c\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u4ed5\u69d8\u4e0aa.\u518d\u8d77\u52d5\u306a\u3057\u7248\u3092\u4f7f\u3048\u306a\u3044\u3082\u306e\u304c\u3042\u308b\u3002\n\n\u73fe\u5728\u3001a.\u518d\u8d77\u52d5\u306a\u3057\u7248\u306b\u306fPyTorch\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u307f\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001PyTorch Lightning\u3084TensorFlow\u306fb.\u518d\u8d77\u52d5\u3042\u308a\u7248\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3002\n\na.\u518d\u8d77\u52d5\u306a\u3057\u7248\u3068b.\u518d\u8d77\u52d5\u3042\u308a\u7248\u306b\u3064\u3044\u3066\u305d\u308c\u305e\u308c\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4fee\u6b63\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 385, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "454b85b6-100a-4c93-8c00-cbf9178b5ec1": {"__data__": {"id_": "454b85b6-100a-4c93-8c00-cbf9178b5ec1", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f5ad317b-bc3f-47f3-8936-c213e2872a9b", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "bf9ba3c5182b9a4a335bd40e03999159b3b44176cc6804b403a1b2e29e6c7e38", "class_name": "RelatedNodeInfo"}}, "text": "a. \u518d\u8d77\u52d5\u306a\u3057\u7248\n\nACB\u306ea.\u518d\u8d77\u52d5\u306a\u3057\u7248\u3067\u306f\u3001\u5404\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u30c7\u30d0\u30a4\u30b9(CPU or GPU)\u3092\u5207\u308a\u66ff\u3048\u308b\u969b\u306b\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u518d\u8d77\u52d5\u3092\u884c\u308f\u306a\u3044\u305f\u3081\u3001b.\u518d\u8d77\u52d5\u3042\u308a\u7248\u3067\u306f\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u306e\u9000\u907f\u30fb\u5fa9\u5143\u3084\u521d\u671f\u51e6\u7406\u306e\u30b9\u30ad\u30c3\u30d7\u306a\u3069\u3092\u610f\u8b58\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002\n\n\u5177\u4f53\u7684\u306a\u4fee\u6b63\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3001\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f8b\u306b\u8aac\u660e\u3059\u308b\u3002\n\u8a13\u7df4(Training)\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3064\u3044\u3066\u306f PyTorch \u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u3064\u3044\u3066\u8aac\u660e\u3059\u308b\u3002\n\u524d\u51e6\u7406\u3001\u63a8\u8ad6\u3001\u5f8c\u51e6\u7406\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u7591\u4f3c\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f8b\u306b\u8aac\u660e\u3059\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 243, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3402e6d-8883-46e1-9fda-f82ba12c8c88": {"__data__": {"id_": "b3402e6d-8883-46e1-9fda-f82ba12c8c88", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fc4fb852-f131-4a48-b4bd-46d3b6c6583c", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "07d1512220489d6654535f3ef927e485627dcd21d122a4c68c806ca896980b0a", "class_name": "RelatedNodeInfo"}}, "text": "PyTorch (a. \u518d\u8d77\u52d5\u306a\u3057\u7248)\n\nPyTorch\u3092\u4f7f\u3063\u3066\u66f8\u304b\u308c\u305f\u8a13\u7df4(Training)\u30d7\u30ed\u30b0\u30e9\u30e0\u3092ACB\u306ea.\u518d\u8d77\u52d5\u306a\u3057\u7248\u3067\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u66f8\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3092\uff12\u7a2e\u985e(\u30b7\u30f3\u30b0\u30ebGPU\u30d7\u30ed\u30b0\u30e9\u30e0\u7248\u3001\u30de\u30eb\u30c1GPU\u30d7\u30ed\u30b0\u30e9\u30e0\u7248)\u8aac\u660e\u3059\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 120, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed8f7884-a49b-460c-aa67-751db413eb81": {"__data__": {"id_": "ed8f7884-a49b-460c-aa67-751db413eb81", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c5467f3a-a485-4c90-b9dd-fdadc07b9a01", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "af26c7fa8849545b5a6ae80f827ac33616db0721e66805afe0e971c2ed2b8bae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a97c0bc-ac10-4d24-aef1-a8384cd2b3a7", "node_type": "1", "metadata": {}, "hash": "59502e363a95a4d5e052c6cc8c917a5aa0ee6cfef43555b08a6a0be7cc39dd79", "class_name": "RelatedNodeInfo"}}, "text": "PyTorch\u306e\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048(\u30b7\u30f3\u30b0\u30ebGPU\u30d7\u30ed\u30b0\u30e9\u30e0\u7248)\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`samples/no_restart/sample_pytorch.py`)\u3092\u4f8b\u306b\u3001PyTorch\u3092\u4f7f\u3063\u305f\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002  \n\u306a\u304a\u3001PyTorch\u5411\u3051\u306eACB\u306eAPI\u306e\u4f7f\u3044\u65b9\u306f\u5f8c\u8ff0\u306ePyTorch \u5411\u3051 API\u3092\u53c2\u7167\u306e\u3053\u3068\u3002\n\n1. `PyTorchAdaptiveGPUAllocator`\u3092Import\u3059\u308b(14\u884c\u76ee)  \n2. `ensure_manual_mode_without_restart`\u3092Import\u3059\u308b(15\u884c\u76ee)\n3. `ensure_manual_mode_without_restart()`\u3092\u5b9f\u884c\u3059\u308b(18\u884c\u76ee)\n    * \u518d\u8d77\u52d5\u306a\u3057\u7528\u306e\u74b0\u5883\u5909\u6570\u8a2d\u5b9a\u3067\u52d5\u4f5c\u3057\u3066\u3044\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u95a2\u6570\u3092\u5b9f\u884c\u3057\u3001\u8a2d\u5b9a\u6f0f\u308c\u306e\u307e\u307e\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u9632\u6b62\u3059\u308b\u3002\n4. `aga`\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u3059\u308b(67,112\u884c\u76ee)\n    *  \u672c\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u5909\u6570 `aga` \u3092 `train_step()` \u95a2\u6570\u5185\u304b\u3089\u53ef\u8996\u306b\u3059\u308b\u305f\u3081\u306b `aga` \u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u3057\u3066\u3044\u308b\uff0e\n    * \u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u95a2\u6570\u69cb\u9020\u306b\u5fdc\u3058\u3066\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u5316\u3084\u95a2\u6570\u306e\u5f15\u6570\u306e\u4fee\u6b63\u3092\u884c\u3046\u3053\u3068\uff0e\n5. epoch\u3054\u3068\u306e\u8a13\u7df4\u30eb\u30fc\u30d7\u306e\u4e2d\u3067GPU\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u7b87\u6240\u306e\u59cb\u70b9\u3092`on_device_begin()`\u3067\u6307\u5b9a\u3059\u308b(70\u884c\u76ee)\n6. \u305d\u306e\u8a13\u7df4\u30eb\u30fc\u30d7\u3067\u4f7f\u3046\u30c7\u30fc\u30bf\u3092`move_tensor_to_device()`\u3067\u30c7\u30d0\u30a4\u30b9\u306b\u9001\u308b(76,77\u884c\u76ee)  \n7. \u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u306fCPU\u306b\u623b\u3057\u3001GPU\u30c7\u30d0\u30a4\u30b9\u4e0a\u306e\u30c7\u30fc\u30bf\u3092\u524a\u9664\u3059\u308b  \n    * GPU/CPU\u306e\u5207\u308a\u66ff\u3048\u6642\u306b\u30c7\u30fc\u30bf\u304c\u6d88\u3048\u306a\u3044\u3088\u3046\u306bCPU\u306b\u623b\u3059(91\u884c\u76ee)\n    * GPU\u30c7\u30d0\u30a4\u30b9\u4e0a\u306b\u30c7\u30fc\u30bf\u3092\u6b8b\u3055\u306a\u3044\u3088\u3046\u306b\u6d88\u3059(92,93\u884c\u76ee)  \n8. \u73fe\u5728\u5b9f\u884c\u3057\u3066\u3044\u308b\u30c7\u30d0\u30a4\u30b9\u60c5\u5831\u306e\u53d6\u5f97(\u5fc5\u8981\u306a\u5834\u5408\u306e\u307f)(96\u884c\u76ee)\n9. GPU\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u7b87\u6240\u306e\u7d42\u70b9\u3092`on_device_end()`\u3067\u6307\u5b9a\u3059\u308b(100\u884c\u76ee)  \n10. `PyTorchAdaptiveGPUAllocator`\u3092\u521d\u671f\u5316\u3059\u308b(113\u884c\u76ee)  \n    * \u30e2\u30c7\u30eb\u3084\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u306a\u3069\u3092\u5b9a\u7fa9\u5f8c\u3001\u521d\u671f\u5316\u3059\u308b  \n11. \u6700\u5f8c\u306b`aga.finalize()`\u3092\u6307\u5b9a\u3057\u3066ACB\u306e\u51e6\u7406\u3092\u7d42\u4e86\u3055\u305b\u308b(122\u884c\u76ee)  \n\n* \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`samples/no_restart/sample_pytorch.py`)\n\n```Python {.line-numbers highlight=[14, 15, 18, 67, 70, 76, 77, 91-93, 96, 100, 112, 113, 122]}\n\n\"\"\"A sample of user's deep learning program for Adaptive GPU Allocator(AGA).\n\nThe statements commented by [AGA] are assumed to be added to allow users\nto utilize AGA functions.\n\"\"\"\n\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\nimport random\nimport numpy as np\n\n# [AGA] import AGA\nfrom adaptive_gpu_allocator.pytorch import PyTorchAdaptiveGPUAllocator\nfrom adaptive_gpu_allocator.env import ensure_manual_mode_without_restart\n\n# [AGA] Ensure running in manual AGA mode (without restart)\nensure_manual_mode_without_restart()", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1720, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5a97c0bc-ac10-4d24-aef1-a8384cd2b3a7": {"__data__": {"id_": "5a97c0bc-ac10-4d24-aef1-a8384cd2b3a7", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c5467f3a-a485-4c90-b9dd-fdadc07b9a01", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "af26c7fa8849545b5a6ae80f827ac33616db0721e66805afe0e971c2ed2b8bae", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed8f7884-a49b-460c-aa67-751db413eb81", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "4c5c8ce68541249742a56ef99221c4cbabfacbd5575f83c39ce987a539ff615f", "class_name": "RelatedNodeInfo"}}, "text": "# Define the network architecture\nclass Net(nn.Module):\n    def __init__(self):\n        super(Net, self).__init__()\n        self.fc1 = nn.Linear(20, 10)  # Input layer\n        self.fc3 = nn.Linear(10, 10)\n        self.fc2 = nn.Linear(10, 1)  # Output layer\n\n    def forward(self, x):\n        x = torch.relu(self.fc1(x))\n        for i in range(20):\n            x = torch.relu(self.fc3(x))\n        x = self.fc2(x)\n        return x\n\n\ndef fix_seeds():\n    # fix seeds for reproducibility\n    seed = 0\n    random.seed(seed)\n    np.random.seed(seed)\n    torch.manual_seed(seed)\n    torch.backends.cudnn.benchmark = False\n    torch.backends.cudnn.deterministic = True\n\n\ndef get_training_data():\n    # Assume we have some data in X_train and y_train\n    X_train = torch.randn(10000000, 20)  # 10000 samples, 20 features each\n    y_train = torch.randn(10000000, 1)  # 10000 samples, 1 target value each\n    return X_train, y_train\n\n\ndef init_model_and_optimizer():\n    # Create the network\n    net = Net()\n\n    # Define a Loss function and optimizer\n    optimizer = optim.Adam(net.parameters())\n\n    return net, optimizer\n\n\ndef train_step(model, optimizer, X_train, y_train, epoch):\n    # [AGA] Define aga object as global variable to make sure that\n    # modifications to original program is *insertion only*.\n    global aga\n\n    # [AGA] notify the beginning of device use to AGA\n    aga.on_device_begin()\n\n    # Zero the gradients\n    optimizer.zero_grad()\n\n    # [AGA] transfor training data to device\n    X = aga.move_tensor_to_device(X_train)\n    y = aga.move_tensor_to_device(y_train)\n\n    # Forward pass\n    outputs = model(X)\n\n    # Calculate loss\n    criterion = nn.MSELoss()\n    loss = criterion(outputs, y)\n\n    # Backward pass and optimization\n    loss.backward()\n    optimizer.step()\n\n    # [AGA] move back (to CPU) or delete tensors on GPU device\n    loss = loss.cpu()\n    del outputs\n    del X, y\n\n    # Print loss every 10 epochs\n    gpuid = aga.get_device()\n    print(f\"Epoch {epoch}, Loss: {loss.item()} on {gpuid}\")\n\n    # [AGA] notify the end of device use to AGA\n    aga.on_device_end()\n\n\ndef main():\n    fix_seeds()\n\n    # init model and aga client\n    net, optimizer = init_model_and_optimizer()\n\n    # [AGA] initialize AGA\n    # Once we register model and optimizer to AGA,\n    # they are moved to running device at `on_device_begin()`\n    global aga\n    aga = PyTorchAdaptiveGPUAllocator(net, optimizer)\n\n    X_train, y_train = get_training_data()\n\n    n_epoch = 20\n    for epoch in range(n_epoch):\n        train_step(net, optimizer, X_train, y_train, epoch)\n\n    # [AGA] finalize AGA\n    aga.finalize()\n\n\nif __name__ == \"__main__\":\n    main()\n```", "mimetype": "text/plain", "start_char_idx": 1723, "end_char_idx": 4386, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1efc08dd-d105-4a27-9ac5-b09dac159859": {"__data__": {"id_": "1efc08dd-d105-4a27-9ac5-b09dac159859", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f4c5eb1-0297-4808-9bac-b7f81e50638f", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "a6c299283bdf36fea6235e37ce954700df9eb6b5b8501be60119c0f7f6d3b75d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f1b8d40-4d55-41a5-be6c-eb29a9bd7e49", "node_type": "1", "metadata": {}, "hash": "4415264fe65c41d54ad9f615b62d01890813590460efd41f6316dc7ac7a57132", "class_name": "RelatedNodeInfo"}}, "text": "PyTorch\u306e\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048(\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u306e\u30de\u30eb\u30c1GPU\u30d7\u30ed\u30b0\u30e9\u30e0\u7248)\nPyTorch\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308bDistributed Data Parallel\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`multigpu_torchrun.py`)\u3092\u4f8b\u306b\u3001\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306ftorchrun\u3092\u5229\u7528\u3057\u3066\u8d77\u52d5\u3059\u308b\u3002\u66f8\u304d\u63db\u3048\u5f8c\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f`samples/no_restart/multi_gpu/multigpu_torchrun_aga.py`\u306b\u3042\u308b\u3002\n\u306a\u304a\u3001PyTorch\u5411\u3051\u306eACB\u306eAPI\u306e\u4f7f\u3044\u65b9\u306f\u5f8c\u8ff0\u306ePyTorch \u5411\u3051 API\u3092\u53c2\u7167\u306e\u3053\u3068\u3002\n\n(\u4ee5\u4e0b\u3001\"\u65e7\"\u306f`multigpu_torchrun.py`\u3001\"\u65b0\"\u306f`multigpu_torchrun_aga.py`\u3092\u8868\u3059)\n1. `PyTorchDDPAdaptiveGPUAllocator`\u3092Import\u3059\u308b(\u65b021\u884c\u76ee)\n2. `set_device`\u3001`to`\u3001`device_ids`\u3001`map_location` \u7b49\u3001GPU\u3092\u6307\u5b9a\u3059\u308b\u884c\u3092\u524a\u9664\u3059\u308b(\u65e714\u884c\u76ee\u3001\u65e727\u884c\u76ee(\u65b039\u884c\u76ee)\u3001\u65e737\u884c\u76ee(\u65b049\u884c\u76ee)\u3001\u65e740-41\u884c\u76ee(\u65b052\u884c\u76ee))\n3. `init_process_group()`\u306ebackend\u5f15\u6570\u3092\u7a7a\u306b\u3059\u308b(\u65e715\u884c\u76ee\u3001\u65b026\u884c\u76ee)\u3002\u3059\u308b\u3068GPU\u7528\u306eNCCL\u3068CPU\u7528\u306eGLOO\u306e\u4e21\u65b9\u304c\u7528\u610f\u3055\u308c\u3001ACB\u3067\u5fc5\u8981\u306aGPU\u30e1\u30e2\u30ea\u3068CPU\u30e1\u30e2\u30ea\u9593\u306e\u79fb\u52d5\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\n4. DDP\u306b\u304a\u3051\u308b\u30d7\u30ed\u30bb\u30b9\u8b58\u5225\u306e\u305f\u3081`local_rank`\u3092\u4f7f\u7528\u3059\u308b(\u65b038\u884c\u76ee\u3001\u65b068\u884c\u76ee\u3001\u65b097\u884c\u76ee)\n5. `aga`\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u3059\u308b(\u65b0120\u884c)\n    * \u672c\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u5909\u6570`aga`\u3092`_run_epoch()`\u3001`train()`\u95a2\u6570\u5185\u304b\u3089\u53c2\u7167\u3059\u308b\u305f\u3081\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u3057\u3066\u3044\u308b\u3002\n    * \u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u69cb\u9020\u306b\u5fdc\u3058\u3066\u9069\u5b9c\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u5316\u3084\u95a2\u6570\u306e\u5f15\u6570\u306e\u4fee\u6b63\u3092\u884c\u3046\u3053\u3068\u3002\n6. epoch\u3054\u3068\u306e\u8a13\u7df4\u30eb\u30fc\u30d7\u306e\u4e2d\u3067GPU\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u7b87\u6240\u306e\u59cb\u70b9\u3092`on_device_begin()`\u3067\u6307\u5b9a\u3059\u308b(\u65b071\u884c\u76ee)\n7. `to`\u306e\u4ee3\u308f\u308a\u306b`move_tensor_to_device`\u3092\u5229\u7528\u3059\u308b(\u65b076-77\u884c\u76ee)\n8. GPU\u4e0a\u3067\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30e1\u30e2\u30ea\u9818\u57df\u3092\u89e3\u653e\u3059\u308b\u305f\u3081\u3001\u4e0d\u5fc5\u8981\u306a\u5909\u6570\u3092`on_device_end`\u3088\u308a\u524d\u3067\u524a\u9664\u3059\u308b(\u65b063\u884c\u76ee\u3001\u65b080\u884c\u76ee)\n9. GPU\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u7b87\u6240\u306e\u7d42\u70b9\u3092`on_device_end()`\u3067\u6307\u5b9a\u3059\u308b(\u65b082\u884c\u76ee)\n10. `on_device_begin`\u3084`on_device_end`\u306b\u3088\u308a\u30e2\u30c7\u30eb\u304c\u79fb\u52d5\u3055\u308c\u308b\u305f\u3081\u3001\u6700\u65b0\u306e\u30e2\u30c7\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b(\u65b073\u884c\u76ee\u3001\u65b084\u884c\u76ee)\n11. `PyTorchDDPAdaptiveGPUAllocator`\u3092\u521d\u671f\u5316\u3059\u308b(\u65b0121\u884c\u76ee)\n12.  AGA\u306e\u5229\u7528\u7d42\u4e86\u5f8c\u3001`destroy_process_group`\u3088\u308a\u524d\u306b`aga.finalize()`\u3092\u6307\u5b9a\u3057\u3066ACB\u306e\u51e6\u7406\u3092\u7d42\u4e86\u3055\u305b\u308b(\u65b0126\u884c\u76ee)\n\n\n- \u66f8\u304d\u63db\u3048\u524d\u5f8c\u306e\u5dee\u5206\u3092\u793a\u3059\u3002\n```Python {.line-numbers highlight=[5-7, 10-14,22-25,33,34,37-39,47,48,53,54,56-59,61-65,67-72,82-83,89-93, 95,96]}\n$ diff -u -U 1 multigpu_torchrun.py multigpu_torchrun_aga.py\n--- multigpu_torchrun.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1536, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4f1b8d40-4d55-41a5-be6c-eb29a9bd7e49": {"__data__": {"id_": "4f1b8d40-4d55-41a5-be6c-eb29a9bd7e49", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f4c5eb1-0297-4808-9bac-b7f81e50638f", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "a6c299283bdf36fea6235e37ce954700df9eb6b5b8501be60119c0f7f6d3b75d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1efc08dd-d105-4a27-9ac5-b09dac159859", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "56b14085195593c48f3ed980c426805c451e223a30b96987836bc270d210b209", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0664e40a-45e6-457d-839b-40526bfc2c19", "node_type": "1", "metadata": {}, "hash": "8f2cad032fd7360b7c1c9e94dd4f3e35c0b6c56de84dd9261e53f0948e24ba82", "class_name": "RelatedNodeInfo"}}, "text": "- \u66f8\u304d\u63db\u3048\u524d\u5f8c\u306e\u5dee\u5206\u3092\u793a\u3059\u3002\n```Python {.line-numbers highlight=[5-7, 10-14,22-25,33,34,37-39,47,48,53,54,56-59,61-65,67-72,82-83,89-93, 95,96]}\n$ diff -u -U 1 multigpu_torchrun.py multigpu_torchrun_aga.py\n--- multigpu_torchrun.py\n+++ multigpu_torchrun_aga.py\n@@ -1,18 +1,30 @@\n+# [AGA] import AGA\n+from adaptive_gpu_allocator.pytorch_ddp import PyTorchDDPAdaptiveGPUAllocator\n+\n \n def ddp_setup():\n-    torch.cuda.set_device(int(os.environ[\"LOCAL_RANK\"]))\n-    init_process_group(backend=\"nccl\")\n+    # [AGA] backend needs to be None to prepare both NCCL and GLOO backend\n+    init_process_group()\n+\n \n class Trainer:\n     def __init__(\n@@ -23,8 +35,8 @@\n         save_every: int,\n         snapshot_path: str,\n     ) -> None:\n-        self.gpu_id = int(os.environ[\"LOCAL_RANK\"])\n-        self.model = model.to(self.gpu_id)\n+        self.local_rank = int(os.environ[\"LOCAL_RANK\"])\n+        self.model = model\n         self.train_data = train_data\n         self.optimizer = optimizer\n         self.save_every = save_every\n@@ -34,11 +46,10 @@\n             print(\"Loading snapshot\")\n             self._load_snapshot(snapshot_path)\n \n-        self.model = DDP(self.model, device_ids=[self.gpu_id])\n+        self.model = DDP(self.model)\n \n     def _load_snapshot(self, snapshot_path):\n-        loc = f\"cuda:{self.gpu_id}\"\n-        snapshot = torch.load(snapshot_path, map_location=loc)\n+        snapshot = torch.load(snapshot_path)\n         self.model.load_state_dict(snapshot[\"MODEL_STATE\"])\n         self.epochs_run = snapshot[\"EPOCHS_RUN\"]\n         print(f\"Resuming training from snapshot at Epoch {self.epochs_run}\")\n@@ -48,16 +59,30 @@\n         output = self.model(source)\n         loss = F.cross_entropy(output, targets)\n         loss.backward()\n+        # [AGA] delete tensors on GPU device\n+        del output, loss\n         self.optimizer.step()\n \n     def _run_epoch(self, epoch):\n         b_sz = len(next(iter(self.train_data))[0])\n-        print(f\"[GPU{self.gpu_id}] Epoch {epoch} | Batchsize: {b_sz} | Steps: {len(self.train_data)}\")\n+        print(f\"[RANK{self.local_rank}] Epoch {epoch} | Batchsize: {b_sz} | Steps: {len(self.train_data)}\")\n         self.train_data.sampler.set_epoch(epoch)\n+        # [AGA] notify the beginning of device use to AGA\n+        aga.on_device_begin()\n+        # [AGA] get the latest model\n+        self.model = aga.models[0]\n         for source, targets in self.train_data:\n-            source = source.to(self.gpu_id)\n-            targets = targets.to(self.gpu_id)\n+            # [AGA] transfer training data to device\n+            source = aga.move_tensor_to_device(source)\n+            targets = aga.move_tensor_to_device(targets)\n             self._run_batch(source, targets)\n+        # [AGA] delete tensors on GPU device\n+        del self.model, source, targets\n+        # [AGA] notify the end of device use to AGA\n+        aga.on_device_end()\n+        # [AGA] get the latest model\n+        self.model = aga.models[0]\n \n     def _save_snapshot(self, epoch):\n         snapshot = {\n@@ -68,9 +93,10 @@\n         print(f\"Epoch {epoch} | Training snapshot saved at {self.snapshot_path}\")\n \n     def train(self, max_epochs: int):\n         for epoch in range(self.epochs_run, max_epochs):\n             self._run_epoch(epoch)\n-            if self.gpu_id == 0 and epoch % self.save_every == 0:\n+            if self.local_rank == 0 and epoch % self.save_every == 0:\n                 self.", "mimetype": "text/plain", "start_char_idx": 1321, "end_char_idx": 4730, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0664e40a-45e6-457d-839b-40526bfc2c19": {"__data__": {"id_": "0664e40a-45e6-457d-839b-40526bfc2c19", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f4c5eb1-0297-4808-9bac-b7f81e50638f", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "a6c299283bdf36fea6235e37ce954700df9eb6b5b8501be60119c0f7f6d3b75d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f1b8d40-4d55-41a5-be6c-eb29a9bd7e49", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "083d23fafe33ab072af29c6f3dbf5ed26e2483501a0f30de907a2c1828a36ace", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "309d2c0e-57df-4085-b09f-ac6a2a6521b5", "node_type": "1", "metadata": {}, "hash": "77e0eacafd320705fe24ddf09dd5ca737ca3648f6688f2aa0d9697340edd65de", "class_name": "RelatedNodeInfo"}}, "text": "_run_batch(source, targets)\n+        # [AGA] delete tensors on GPU device\n+        del self.model, source, targets\n+        # [AGA] notify the end of device use to AGA\n+        aga.on_device_end()\n+        # [AGA] get the latest model\n+        self.model = aga.models[0]\n \n     def _save_snapshot(self, epoch):\n         snapshot = {\n@@ -68,9 +93,10 @@\n         print(f\"Epoch {epoch} | Training snapshot saved at {self.snapshot_path}\")\n \n     def train(self, max_epochs: int):\n         for epoch in range(self.epochs_run, max_epochs):\n             self._run_epoch(epoch)\n-            if self.gpu_id == 0 and epoch % self.save_every == 0:\n+            if self.local_rank == 0 and epoch % self.save_every == 0:\n                 self._save_snapshot(epoch)\n@@ -96,16 +118,24 @@\n     dataset, model, optimizer = load_train_objs()\n     train_data = prepare_dataloader(dataset, batch_size)\n     trainer = Trainer(model, train_data, optimizer, save_every, snapshot_path)\n+    # [AGA] initialize AGA\n+    global aga\n+    aga = PyTorchDDPAdaptiveGPUAllocator(\n+        trainer.model, optimizer, world_size=int(os.environ[\"WORLD_SIZE\"]), rank=trainer.local_rank, device=\"cuda\"\n+    )\n     trainer.train(total_epochs)\n+    # [AGA] finalize AGA\n+    aga.finalize()\n     destroy_process_group()\n \n```\n\n- \u66f8\u304d\u63db\u3048\u5f8c\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`multigpu_torchrun_aga.py`)\u3092\u793a\u3059\u3002\n```Python {.line-numbers highlight=[21, 26, 38-39, 49, 52, 63, 68, 71, 73, 76, 77, 80, 82, 84, 97, 110, 120-123, 126]}\n\n\"\"\"\nUsage:\nagarun -- torchrun --standalone --nproc_per_node= multigpu_torchrun_aga.py  \n\nThis program is an AGA-enabled version of DDP's example program demonstrated in PyTorch's video tutorial.\nYou can find the original code at the link below.\nhttps://github.com/pytorch/examples/blob/main/distributed/ddp-tutorial-series/multigpu_torchrun.py\n\"\"\"\n\nimport torch\nimport torch.nn.functional as F\nfrom torch.utils.data import Dataset, DataLoader\nfrom datautils import MyTrainDataset\n\nfrom torch.utils.data.distributed import DistributedSampler\nfrom torch.nn.parallel import DistributedDataParallel as DDP\nfrom torch.distributed import init_process_group, destroy_process_group\nimport os\n\n# [AGA] import AGA\nfrom adaptive_gpu_allocator.pytorch_ddp import PyTorchDDPAdaptiveGPUAllocator\n\n\ndef ddp_setup():\n    # [AGA] backend needs to be None to prepare both NCCL and GLOO backend\n    init_process_group()", "mimetype": "text/plain", "start_char_idx": 4000, "end_char_idx": 6357, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "309d2c0e-57df-4085-b09f-ac6a2a6521b5": {"__data__": {"id_": "309d2c0e-57df-4085-b09f-ac6a2a6521b5", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f4c5eb1-0297-4808-9bac-b7f81e50638f", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "a6c299283bdf36fea6235e37ce954700df9eb6b5b8501be60119c0f7f6d3b75d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0664e40a-45e6-457d-839b-40526bfc2c19", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "3d5f8fb07f87aa3b27a764243118cde8b37bda038fe29403838c84614aeaa918", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "66847969-6324-4907-bab5-6330602dbd94", "node_type": "1", "metadata": {}, "hash": "ae12d3d7df8a3eb3313a3166a1183c4b52d7a9ecaee8cf6a9dfde99b236cf792", "class_name": "RelatedNodeInfo"}}, "text": "py  \n\nThis program is an AGA-enabled version of DDP's example program demonstrated in PyTorch's video tutorial.\nYou can find the original code at the link below.\nhttps://github.com/pytorch/examples/blob/main/distributed/ddp-tutorial-series/multigpu_torchrun.py\n\"\"\"\n\nimport torch\nimport torch.nn.functional as F\nfrom torch.utils.data import Dataset, DataLoader\nfrom datautils import MyTrainDataset\n\nfrom torch.utils.data.distributed import DistributedSampler\nfrom torch.nn.parallel import DistributedDataParallel as DDP\nfrom torch.distributed import init_process_group, destroy_process_group\nimport os\n\n# [AGA] import AGA\nfrom adaptive_gpu_allocator.pytorch_ddp import PyTorchDDPAdaptiveGPUAllocator\n\n\ndef ddp_setup():\n    # [AGA] backend needs to be None to prepare both NCCL and GLOO backend\n    init_process_group()\n\n\nclass Trainer:\n    def __init__(\n        self,\n        model: torch.nn.Module,\n        train_data: DataLoader,\n        optimizer: torch.optim.Optimizer,\n        save_every: int,\n        snapshot_path: str,\n    ) -> None:\n        self.local_rank = int(os.environ[\"LOCAL_RANK\"])\n        self.model = model\n        self.train_data = train_data\n        self.optimizer = optimizer\n        self.save_every = save_every\n        self.epochs_run = 0\n        self.snapshot_path = snapshot_path\n        if os.path.exists(snapshot_path):\n            print(\"Loading snapshot\")\n            self._load_snapshot(snapshot_path)\n\n        self.model = DDP(self.model)\n\n    def _load_snapshot(self, snapshot_path):\n        snapshot = torch.load(snapshot_path)\n        self.model.load_state_dict(snapshot[\"MODEL_STATE\"])\n        self.epochs_run = snapshot[\"EPOCHS_RUN\"]\n        print(f\"Resuming training from snapshot at Epoch {self.epochs_run}\")\n\n    def _run_batch(self, source, targets):\n        self.optimizer.zero_grad()\n        output = self.model(source)\n        loss = F.cross_entropy(output, targets)\n        loss.backward()\n        # [AGA] delete tensors on GPU device\n        del output, loss\n        self.optimizer.step()\n\n    def _run_epoch(self, epoch):\n        b_sz = len(next(iter(self.train_data))[0])\n        print(f\"[RANK{self.local_rank}] Epoch {epoch} | Batchsize: {b_sz} | Steps: {len(self.train_data)}\")\n        self.train_data.sampler.set_epoch(epoch)\n        # [AGA] notify the beginning of device use to AGA\n        aga.on_device_begin()\n        # [AGA] get the latest model\n        self.model = aga.models[0]\n        for source, targets in self.train_data:\n            # [AGA] transfer training data to device\n            source = aga.move_tensor_to_device(source)\n            targets = aga.move_tensor_to_device(targets)\n            self._run_batch(source, targets)\n        # [AGA] delete tensors on GPU device\n        del self.model, source, targets\n        # [AGA] notify the end of device use to AGA\n        aga.on_device_end()\n        # [AGA] get the latest model\n        self.model = aga.models[0]\n\n    def _save_snapshot(self, epoch):\n        snapshot = {\n            \"MODEL_STATE\": self.model.module.state_dict(),\n            \"EPOCHS_RUN\": epoch,\n        }\n        torch.save(snapshot, self.snapshot_path)\n        print(f\"Epoch {epoch} | Training snapshot saved at {self.snapshot_path}\")\n\n    def train(self, max_epochs: int):\n        for epoch in range(self.epochs_run, max_epochs):\n            self._run_epoch(epoch)\n            if self.local_rank == 0 and epoch % self.save_every == 0:\n                self._save_snapshot(epoch)\n\n\ndef load_train_objs():\n    train_set = MyTrainDataset(2048)  # load your dataset\n    model = torch.nn.Linear(20, 1)  # load your model\n    optimizer = torch.optim.SGD(model.parameters(), lr=1e-3)\n    return train_set, model, optimizer\n\n\ndef prepare_dataloader(dataset: Dataset, batch_size: int):\n    return DataLoader(\n        dataset, batch_size=batch_size, pin_memory=True, shuffle=False, sampler=DistributedSampler(dataset)\n    )", "mimetype": "text/plain", "start_char_idx": 5540, "end_char_idx": 9440, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "66847969-6324-4907-bab5-6330602dbd94": {"__data__": {"id_": "66847969-6324-4907-bab5-6330602dbd94", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f4c5eb1-0297-4808-9bac-b7f81e50638f", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "a6c299283bdf36fea6235e37ce954700df9eb6b5b8501be60119c0f7f6d3b75d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "309d2c0e-57df-4085-b09f-ac6a2a6521b5", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "533a30c566dcd06df7526608f3ead8829736e21e2f3fafd86378115e80502dd5", "class_name": "RelatedNodeInfo"}}, "text": "def load_train_objs():\n    train_set = MyTrainDataset(2048)  # load your dataset\n    model = torch.nn.Linear(20, 1)  # load your model\n    optimizer = torch.optim.SGD(model.parameters(), lr=1e-3)\n    return train_set, model, optimizer\n\n\ndef prepare_dataloader(dataset: Dataset, batch_size: int):\n    return DataLoader(\n        dataset, batch_size=batch_size, pin_memory=True, shuffle=False, sampler=DistributedSampler(dataset)\n    )\n\n\ndef main(save_every: int, total_epochs: int, batch_size: int, snapshot_path: str = \"snapshot.pt\"):\n    ddp_setup()\n    dataset, model, optimizer = load_train_objs()\n    train_data = prepare_dataloader(dataset, batch_size)\n    trainer = Trainer(model, train_data, optimizer, save_every, snapshot_path)\n    # [AGA] initialize AGA\n    global aga\n    aga = PyTorchDDPAdaptiveGPUAllocator(\n        trainer.model, optimizer, world_size=int(os.environ[\"WORLD_SIZE\"]), rank=trainer.local_rank, device=\"cuda\"\n    )\n    trainer.train(total_epochs)\n    # [AGA] finalize AGA\n    aga.finalize()\n    destroy_process_group()\n\n\nif __name__ == \"__main__\":\n    import argparse\n\n    parser = argparse.ArgumentParser(description=\"simple distributed training job\")\n    parser.add_argument(\"total_epochs\", type=int, help=\"Total epochs to train the model\")\n    parser.add_argument(\"save_every\", type=int, help=\"How often to save a snapshot\")\n    parser.add_argument(\"--batch_size\", default=32, type=int, help=\"Input batch size on each device (default: 32)\")\n    args = parser.parse_args()\n\n    main(args.save_every, args.total_epochs, args.batch_size)\n\n```", "mimetype": "text/plain", "start_char_idx": 9008, "end_char_idx": 10576, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f3ebd93-a2cb-41a0-9c0f-4966b6c5785c": {"__data__": {"id_": "0f3ebd93-a2cb-41a0-9c0f-4966b6c5785c", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4210146d-9cbe-42cf-93d0-12eba63acab5", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "8b67a900b3f707beaf80dd9afa226e8c967f520274594a3ac0c51b34ac9cbdd2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4182b845-c6bb-4259-ad11-2b17cb790e5d", "node_type": "1", "metadata": {}, "hash": "906ad3c99e3fc1ab100bcd9b92d68f43aa6eeec8f09414480f27ef1f334c6e8e", "class_name": "RelatedNodeInfo"}}, "text": "PyTorch\u306e\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048(\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u7248)\nPyTorch\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308bDistributed Data Parallel\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`multigpu_torchrun.py`)\u3092\u4f8b\u306b\u3001\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306ftorchrun\u3092\u5229\u7528\u3057\u3066\u8d77\u52d5\u3059\u308b\u3002\u66f8\u304d\u63db\u3048\u5f8c\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f`samples/no_restart/multi_node/multinode_torchrun_aga.py`\u306b\u3042\u308b\u3002\n\u306a\u304a\u3001PyTorch\u5411\u3051\u306eACB\u306eAPI\u306e\u4f7f\u3044\u65b9\u306f\u5f8c\u8ff0\u306ePyTorch \u5411\u3051 API\u3092\u53c2\u7167\u306e\u3053\u3068\u3002\n\n(\u4ee5\u4e0b\u3001\"\u65e7\"\u306f`multigpu_torchrun.py`\u3001\"\u65b0\"\u306f`multinode_torchrun_aga.py`\u3092\u8868\u3059)\n1. `PyTorchDDPAdaptiveGPUAllocator`\u3092Import\u3059\u308b(\u65b023\u884c\u76ee)\n2. `set_device`\u3001`to`\u3001`device_ids`\u3001`map_location` \u7b49\u3001GPU\u3092\u6307\u5b9a\u3059\u308b\u884c\u3092\u524a\u9664\u3059\u308b(\u65e714\u884c\u76ee\u3001\u65e727\u884c\u76ee(\u65b041\u884c\u76ee)\u3001\u65e737\u884c\u76ee(\u65b051\u884c\u76ee)\u3001\u65e740-41\u884c\u76ee(\u65b054\u884c\u76ee))\n3. `init_process_group()`\u306ebackend\u5f15\u6570\u3092\u7a7a\u306b\u3059\u308b(\u65e715\u884c\u76ee\u3001\u65b028\u884c\u76ee)\u3002\u3059\u308b\u3068GPU\u7528\u306eNCCL\u3068CPU\u7528\u306eGLOO\u306e\u4e21\u65b9\u304c\u7528\u610f\u3055\u308c\u3001ACB\u3067\u5fc5\u8981\u306aGPU\u30e1\u30e2\u30ea\u3068CPU\u30e1\u30e2\u30ea\u9593\u306e\u79fb\u52d5\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\n4. DDP\u306b\u304a\u3051\u308b\u30d7\u30ed\u30bb\u30b9\u8b58\u5225\u306e\u305f\u3081`local_rank`\u3092\u4f7f\u7528\u3059\u308b(\u65b040\u884c\u76ee\u3001\u65b070\u884c\u76ee\u3001\u65b099\u884c\u76ee)\n5. `aga`\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u3059\u308b(\u65b0122\u884c)\n    * \u672c\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u5909\u6570`aga`\u3092`_run_epoch()`\u3001`train()`\u95a2\u6570\u5185\u304b\u3089\u53c2\u7167\u3059\u308b\u305f\u3081\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u3057\u3066\u3044\u308b\u3002\n    * \u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u69cb\u9020\u306b\u5fdc\u3058\u3066\u9069\u5b9c\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u5316\u3084\u95a2\u6570\u306e\u5f15\u6570\u306e\u4fee\u6b63\u3092\u884c\u3046\u3053\u3068\u3002\n6. epoch\u3054\u3068\u306e\u8a13\u7df4\u30eb\u30fc\u30d7\u306e\u4e2d\u3067GPU\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u7b87\u6240\u306e\u59cb\u70b9\u3092`on_device_begin()`\u3067\u6307\u5b9a\u3059\u308b(\u65b073\u884c\u76ee)\n7. `to`\u306e\u4ee3\u308f\u308a\u306b`move_tensor_to_device`\u3092\u5229\u7528\u3059\u308b(\u65b078-79\u884c\u76ee)\n8. GPU\u4e0a\u3067\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30e1\u30e2\u30ea\u9818\u57df\u3092\u89e3\u653e\u3059\u308b\u305f\u3081\u3001\u4e0d\u5fc5\u8981\u306a\u5909\u6570\u3092`on_device_end`\u3088\u308a\u524d\u3067\u524a\u9664\u3059\u308b(\u65b065\u884c\u76ee\u3001\u65b082\u884c\u76ee)\n9. GPU\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u7b87\u6240\u306e\u7d42\u70b9\u3092`on_device_end()`\u3067\u6307\u5b9a\u3059\u308b(\u65b084\u884c\u76ee)\n10. `on_device_begin`\u3084`on_device_end`\u306b\u3088\u308a\u30e2\u30c7\u30eb\u304c\u79fb\u52d5\u3055\u308c\u308b\u305f\u3081\u3001\u6700\u65b0\u306e\u30e2\u30c7\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b(\u65b075\u884c\u76ee\u3001\u65b086\u884c\u76ee)\n11. `PyTorchDDPAdaptiveGPUAllocator`\u3092\u521d\u671f\u5316\u3059\u308b(\u65b0123\u884c\u76ee)\n12.  AGA\u306e\u5229\u7528\u7d42\u4e86\u5f8c\u3001`destroy_process_group`\u3088\u308a\u524d\u306b`aga.finalize()`\u3092\u6307\u5b9a\u3057\u3066ACB\u306e\u51e6\u7406\u3092\u7d42\u4e86\u3055\u305b\u308b(\u65b0128\u884c\u76ee)\n\n- \u66f8\u304d\u63db\u3048\u524d\u5f8c\u306e\u5dee\u5206\u3092\u793a\u3059\u3002\n```Python {.line-numbers highlight=[5-7, 10-14,22-25,33,34,37-39,47,48,53,54,56-59,61-65,67-72,80-81,87-91, 93,94]}\n$ diff -u -U 1 multigpu_torchrun.py multigpu_torchrun_aga.py\n--- multigpu_torchrun.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1525, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4182b845-c6bb-4259-ad11-2b17cb790e5d": {"__data__": {"id_": "4182b845-c6bb-4259-ad11-2b17cb790e5d", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4210146d-9cbe-42cf-93d0-12eba63acab5", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "8b67a900b3f707beaf80dd9afa226e8c967f520274594a3ac0c51b34ac9cbdd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f3ebd93-a2cb-41a0-9c0f-4966b6c5785c", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "6fabe3c8f4016de73bb6c9979e1cf5c560c7b7dc38f7420add40b362a9576161", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bdba0ac0-8d0b-46a4-8d31-18a876c71c23", "node_type": "1", "metadata": {}, "hash": "0c10204902435bc71d32d20c8e01745dfca1fdf6d8f4d7d6c301fbfc144b0c77", "class_name": "RelatedNodeInfo"}}, "text": "`PyTorchDDPAdaptiveGPUAllocator`\u3092\u521d\u671f\u5316\u3059\u308b(\u65b0123\u884c\u76ee)\n12.  AGA\u306e\u5229\u7528\u7d42\u4e86\u5f8c\u3001`destroy_process_group`\u3088\u308a\u524d\u306b`aga.finalize()`\u3092\u6307\u5b9a\u3057\u3066ACB\u306e\u51e6\u7406\u3092\u7d42\u4e86\u3055\u305b\u308b(\u65b0128\u884c\u76ee)\n\n- \u66f8\u304d\u63db\u3048\u524d\u5f8c\u306e\u5dee\u5206\u3092\u793a\u3059\u3002\n```Python {.line-numbers highlight=[5-7, 10-14,22-25,33,34,37-39,47,48,53,54,56-59,61-65,67-72,80-81,87-91, 93,94]}\n$ diff -u -U 1 multigpu_torchrun.py multigpu_torchrun_aga.py\n--- multigpu_torchrun.py\n+++ multinode_torchrun_aga.py\n@@ -1,18 +1,32 @@\n+# [AGA] import AGA\n+from adaptive_gpu_allocator.pytorch_ddp import PyTorchDDPAdaptiveGPUAllocator\n+\n \n def ddp_setup():\n-    torch.cuda.set_device(int(os.environ[\"LOCAL_RANK\"]))\n-    init_process_group(backend=\"nccl\")\n+    # [AGA] backend needs to be None to prepare both NCCL and GLOO backend\n+    init_process_group()\n+\n \n class Trainer:\n     def __init__(\n@@ -23,8 +37,8 @@\n         save_every: int,\n         snapshot_path: str,\n     ) -> None:\n-        self.gpu_id = int(os.environ[\"LOCAL_RANK\"])\n-        self.model = model.to(self.gpu_id)\n+        self.local_rank = int(os.environ[\"LOCAL_RANK\"])\n+        self.model = model\n         self.train_data = train_data\n         self.optimizer = optimizer\n         self.save_every = save_every\n@@ -34,11 +48,10 @@\n             print(\"Loading snapshot\")\n             self._load_snapshot(snapshot_path)\n \n-        self.model = DDP(self.model, device_ids=[self.gpu_id])\n+        self.model = DDP(self.model)\n \n     def _load_snapshot(self, snapshot_path):\n-        loc = f\"cuda:{self.gpu_id}\"\n-        snapshot = torch.load(snapshot_path, map_location=loc)\n+        snapshot = torch.load(snapshot_path)\n         self.model.load_state_dict(snapshot[\"MODEL_STATE\"])\n         self.epochs_run = snapshot[\"EPOCHS_RUN\"]\n         print(f\"Resuming training from snapshot at Epoch {self.epochs_run}\")\n@@ -48,16 +61,29 @@\n         output = self.model(source)\n         loss = F.cross_entropy(output, targets)\n         loss.backward()\n+        # [AGA] delete tensors on GPU device\n+        del output, loss\n         self.optimizer.step()\n \n     def _run_epoch(self, epoch):\n         b_sz = len(next(iter(self.train_data))[0])\n-        print(f\"[GPU{self.gpu_id}] Epoch {epoch} | Batchsize: {b_sz} | Steps: {len(self.train_data)}\")\n+        print(f\"[RANK{self.local_rank}] Epoch {epoch} | Batchsize: {b_sz} | Steps: {len(self.train_data)}\")\n         self.train_data.sampler.set_epoch(epoch)\n+        # [AGA] notify the beginning of device use to AGA\n+        aga.on_device_begin()\n+        # [AGA] get the latest model\n+        self.model = aga.models[0]\n         for source, targets in self.train_data:\n-            source = source.to(self.gpu_id)\n-            targets = targets.to(self.gpu_id)\n+            # [AGA] transfer training data to device\n+            source = aga.move_tensor_to_device(source)\n+            targets = aga.move_tensor_to_device(targets)\n             self._run_batch(source, targets)\n+        # [AGA] delete tensors on GPU device\n+        del self.model, source, targets\n+        # [AGA] notify the end of device use to AGA\n+        aga.on_device_end()\n+        # [AGA] get the latest model\n+        self.model = aga.models[0]\n \n     def _save_snapshot(self, epoch):\n         snapshot = {\n@@ -70,7 +96,7 @@\n     def train(self, max_epochs: int):\n         for epoch in range(self.epochs_run, max_epochs):\n             self.", "mimetype": "text/plain", "start_char_idx": 1178, "end_char_idx": 4456, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bdba0ac0-8d0b-46a4-8d31-18a876c71c23": {"__data__": {"id_": "bdba0ac0-8d0b-46a4-8d31-18a876c71c23", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4210146d-9cbe-42cf-93d0-12eba63acab5", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "8b67a900b3f707beaf80dd9afa226e8c967f520274594a3ac0c51b34ac9cbdd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4182b845-c6bb-4259-ad11-2b17cb790e5d", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "573f7af27f122c4626dd1b2ab3c353894cb9e45550ee0faae419bab45251b897", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53776889-6664-4cb2-ad6a-37a98943a76f", "node_type": "1", "metadata": {}, "hash": "77e0eacafd320705fe24ddf09dd5ca737ca3648f6688f2aa0d9697340edd65de", "class_name": "RelatedNodeInfo"}}, "text": "train_data:\n-            source = source.to(self.gpu_id)\n-            targets = targets.to(self.gpu_id)\n+            # [AGA] transfer training data to device\n+            source = aga.move_tensor_to_device(source)\n+            targets = aga.move_tensor_to_device(targets)\n             self._run_batch(source, targets)\n+        # [AGA] delete tensors on GPU device\n+        del self.model, source, targets\n+        # [AGA] notify the end of device use to AGA\n+        aga.on_device_end()\n+        # [AGA] get the latest model\n+        self.model = aga.models[0]\n \n     def _save_snapshot(self, epoch):\n         snapshot = {\n@@ -70,7 +96,7 @@\n     def train(self, max_epochs: int):\n         for epoch in range(self.epochs_run, max_epochs):\n             self._run_epoch(epoch)\n-            if self.gpu_id == 0 and epoch % self.save_every == 0:\n+            if self.local_rank == 0 and epoch % self.save_every == 0:\n                 self._save_snapshot(epoch) \n@@ -96,16 +118,24 @@\n     dataset, model, optimizer = load_train_objs()\n     train_data = prepare_dataloader(dataset, batch_size)\n     trainer = Trainer(model, train_data, optimizer, save_every, snapshot_path)\n+    # [AGA] initialize AGA\n+    global aga\n+    aga = PyTorchDDPAdaptiveGPUAllocator(\n+        trainer.model, optimizer, world_size=int(os.environ[\"LOCAL_WORLD_SIZE\"]), rank=trainer.local_rank, device=\"cuda\"\n+    )\n     trainer.train(total_epochs)\n+    # [AGA] finalize AGA\n+    aga.finalize()\n     destroy_process_group()\n \n```\n\n- \u66f8\u304d\u63db\u3048\u5f8c\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`multigpu_torchrun_aga.py`)\u3092\u793a\u3059\u3002\n```Python {.line-numbers highlight=[23, 28, 40-41, 51, 54, 65, 70, 73, 75, 78, 79, 82, 84, 86, 99, 112, 122-125, 128]}\n\"\"\"\nUsage:\nagarun -- torchrun --nproc_per_node= --nnodes= --rdzv_id= \\\n--rdzv_endpoint= --node_rank= \\\nmultinode_torchrun_aga.py  \n\nThis program is an AGA-enabled version of DDP's example program demonstrated in PyTorch's video tutorial.\nYou can find the original code at the link below.\nhttps://github.com/pytorch/examples/blob/main/distributed/ddp-tutorial-series/multigpu_torchrun.py\n\"\"\"\n\nimport torch\nimport torch.nn.functional as F\nfrom torch.utils.data import Dataset, DataLoader\nfrom datautils import MyTrainDataset\n\nfrom torch.utils.data.distributed import DistributedSampler\nfrom torch.nn.parallel import DistributedDataParallel as DDP\nfrom torch.distributed import init_process_group, destroy_process_group\nimport os\n\n# [AGA] import AGA\nfrom adaptive_gpu_allocator.pytorch_ddp import PyTorchDDPAdaptiveGPUAllocator\n\n\ndef ddp_setup():\n    # [AGA] backend needs to be None to prepare both NCCL and GLOO backend\n    init_process_group()", "mimetype": "text/plain", "start_char_idx": 3700, "end_char_idx": 6310, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "53776889-6664-4cb2-ad6a-37a98943a76f": {"__data__": {"id_": "53776889-6664-4cb2-ad6a-37a98943a76f", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4210146d-9cbe-42cf-93d0-12eba63acab5", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "8b67a900b3f707beaf80dd9afa226e8c967f520274594a3ac0c51b34ac9cbdd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bdba0ac0-8d0b-46a4-8d31-18a876c71c23", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "919e6b800ab4a5d44ae153944a349e279da89bb9c447a263ff1adfc29200c70e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e8b4af3-674d-4d2b-b6db-8df95f50a4a9", "node_type": "1", "metadata": {}, "hash": "7157d48ee18506cc9db49b6c62a23450efb528be07f7cf82a7182c109218d542", "class_name": "RelatedNodeInfo"}}, "text": "py  \n\nThis program is an AGA-enabled version of DDP's example program demonstrated in PyTorch's video tutorial.\nYou can find the original code at the link below.\nhttps://github.com/pytorch/examples/blob/main/distributed/ddp-tutorial-series/multigpu_torchrun.py\n\"\"\"\n\nimport torch\nimport torch.nn.functional as F\nfrom torch.utils.data import Dataset, DataLoader\nfrom datautils import MyTrainDataset\n\nfrom torch.utils.data.distributed import DistributedSampler\nfrom torch.nn.parallel import DistributedDataParallel as DDP\nfrom torch.distributed import init_process_group, destroy_process_group\nimport os\n\n# [AGA] import AGA\nfrom adaptive_gpu_allocator.pytorch_ddp import PyTorchDDPAdaptiveGPUAllocator\n\n\ndef ddp_setup():\n    # [AGA] backend needs to be None to prepare both NCCL and GLOO backend\n    init_process_group()\n\n\nclass Trainer:\n    def __init__(\n        self,\n        model: torch.nn.Module,\n        train_data: DataLoader,\n        optimizer: torch.optim.Optimizer,\n        save_every: int,\n        snapshot_path: str,\n    ) -> None:\n        self.local_rank = int(os.environ[\"LOCAL_RANK\"])\n        self.model = model\n        self.train_data = train_data\n        self.optimizer = optimizer\n        self.save_every = save_every\n        self.epochs_run = 0\n        self.snapshot_path = snapshot_path\n        if os.path.exists(snapshot_path):\n            print(\"Loading snapshot\")\n            self._load_snapshot(snapshot_path)\n\n        self.model = DDP(self.model)\n\n    def _load_snapshot(self, snapshot_path):\n        snapshot = torch.load(snapshot_path)\n        self.model.load_state_dict(snapshot[\"MODEL_STATE\"])\n        self.epochs_run = snapshot[\"EPOCHS_RUN\"]\n        print(f\"Resuming training from snapshot at Epoch {self.epochs_run}\")\n\n    def _run_batch(self, source, targets):\n        self.optimizer.zero_grad()\n        output = self.model(source)\n        loss = F.cross_entropy(output, targets)\n        loss.backward()\n        # [AGA] delete tensors on GPU device\n        del output, loss\n        self.optimizer.step()\n\n    def _run_epoch(self, epoch):\n        b_sz = len(next(iter(self.train_data))[0])\n        print(f\"[RANK{self.local_rank}] Epoch {epoch} | Batchsize: {b_sz} | Steps: {len(self.train_data)}\")\n        self.train_data.sampler.set_epoch(epoch)\n        # [AGA] notify the beginning of device use to AGA\n        aga.on_device_begin()\n        # [AGA] get the latest model\n        self.model = aga.models[0]\n        for source, targets in self.train_data:\n            # [AGA] transfer training data to device\n            source = aga.move_tensor_to_device(source)\n            targets = aga.move_tensor_to_device(targets)\n            self._run_batch(source, targets)\n        # [AGA] delete tensors on GPU device\n        del self.model, source, targets\n        # [AGA] notify the end of device use to AGA\n        aga.on_device_end()\n        # [AGA] get the latest model\n        self.model = aga.models[0]\n\n    def _save_snapshot(self, epoch):\n        snapshot = {\n            \"MODEL_STATE\": self.model.module.state_dict(),\n            \"EPOCHS_RUN\": epoch,\n        }\n        torch.save(snapshot, self.snapshot_path)\n        print(f\"Epoch {epoch} | Training snapshot saved at {self.snapshot_path}\")\n\n    def train(self, max_epochs: int):\n        for epoch in range(self.epochs_run, max_epochs):\n            self._run_epoch(epoch)\n            if self.local_rank == 0 and epoch % self.save_every == 0:\n                self._save_snapshot(epoch)\n\n\ndef load_train_objs():\n    train_set = MyTrainDataset(2048)  # load your dataset\n    model = torch.nn.Linear(20, 1)  # load your model\n    optimizer = torch.optim.SGD(model.parameters(), lr=1e-3)\n    return train_set, model, optimizer\n\n\ndef prepare_dataloader(dataset: Dataset, batch_size: int):\n    return DataLoader(\n        dataset, batch_size=batch_size, pin_memory=True, shuffle=False, sampler=DistributedSampler(dataset)\n    )", "mimetype": "text/plain", "start_char_idx": 5493, "end_char_idx": 9393, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e8b4af3-674d-4d2b-b6db-8df95f50a4a9": {"__data__": {"id_": "9e8b4af3-674d-4d2b-b6db-8df95f50a4a9", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4210146d-9cbe-42cf-93d0-12eba63acab5", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "8b67a900b3f707beaf80dd9afa226e8c967f520274594a3ac0c51b34ac9cbdd2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53776889-6664-4cb2-ad6a-37a98943a76f", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "533a30c566dcd06df7526608f3ead8829736e21e2f3fafd86378115e80502dd5", "class_name": "RelatedNodeInfo"}}, "text": "def load_train_objs():\n    train_set = MyTrainDataset(2048)  # load your dataset\n    model = torch.nn.Linear(20, 1)  # load your model\n    optimizer = torch.optim.SGD(model.parameters(), lr=1e-3)\n    return train_set, model, optimizer\n\n\ndef prepare_dataloader(dataset: Dataset, batch_size: int):\n    return DataLoader(\n        dataset, batch_size=batch_size, pin_memory=True, shuffle=False, sampler=DistributedSampler(dataset)\n    )\n\n\ndef main(save_every: int, total_epochs: int, batch_size: int, snapshot_path: str = \"snapshot.pt\"):\n    ddp_setup()\n    dataset, model, optimizer = load_train_objs()\n    train_data = prepare_dataloader(dataset, batch_size)\n    trainer = Trainer(model, train_data, optimizer, save_every, snapshot_path)\n    # [AGA] initialize AGA\n    global aga\n    aga = PyTorchDDPAdaptiveGPUAllocator(\n        trainer.model, optimizer, world_size=int(os.environ[\"LOCAL_WORLD_SIZE\"]), rank=trainer.local_rank, device=\"cuda\"\n    )\n    trainer.train(total_epochs)\n    # [AGA] finalize AGA\n    aga.finalize()\n    destroy_process_group()\n\n\nif __name__ == \"__main__\":\n    import argparse\n\n    parser = argparse.ArgumentParser(description=\"simple distributed training job\")\n    parser.add_argument(\"total_epochs\", type=int, help=\"Total epochs to train the model\")\n    parser.add_argument(\"save_every\", type=int, help=\"How often to save a snapshot\")\n    parser.add_argument(\"--batch_size\", default=32, type=int, help=\"Input batch size on each device (default: 32)\")\n    args = parser.parse_args()\n\n    main(args.save_every, args.total_epochs, args.batch_size)\n\n```", "mimetype": "text/plain", "start_char_idx": 8961, "end_char_idx": 10535, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f4d76b91-9476-4224-bde9-4df1aaf217db": {"__data__": {"id_": "f4d76b91-9476-4224-bde9-4df1aaf217db", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f3241a1-910b-44d6-8dfe-c1d3e6a19639", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "e8944d36c36cfbe8df9849f799a8520f67fdfbd0c6663d142c8443cba498624e", "class_name": "RelatedNodeInfo"}}, "text": "PyTorch \u5411\u3051 API(\u30b7\u30f3\u30b0\u30ebGPU\u30d7\u30ed\u30b0\u30e9\u30e0\u7248)\n\n\u30b7\u30f3\u30b0\u30ebGPU\u30d7\u30ed\u30b0\u30e9\u30e0\u7248\u306ePyTorch \u306e\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5229\u7528\u3067\u304d\u308bAPI\u3092\u8aac\u660e\u3059\u308b\u3002  \n\u3044\u305a\u308c\u3082`adaptive_gpu_allocator.pytorch`\u30e2\u30b8\u30e5\u30fc\u30eb\u306e`PyTorchAdaptiveGPUAllocator`\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u3002  \n* `PyTorchAdaptiveGPUAllocator.__init__()`  \n    - `PyTorchAdaptiveGPUAllocator`\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf  \n    - \u5f15\u6570  \n        - `model` : \u30e2\u30c7\u30eb(`torch.nn.Module`\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8)  \n        - `optimizer` : \u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc(`torch.optim.Adam`\u306a\u3069)  \n        - `scheduler` : \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc(`torch.optim.lr_scheduler.ExportentialLR`\u306a\u3069)\n        - `device` : \u5272\u5f53\u3066\u3067\u8981\u6c42\u3059\u308b\u30c7\u30d0\u30a4\u30b9 (`any`, `cuda`, `gpu`, `cpu`\u306e\u3044\u305a\u308c\u304b\u3067`gpu`\u306f`cuda`\u306e\u5225\u540d)\n    - \u623b\u308a\u5024  \n        - `PyTorchAdaptiveGPUAllocator`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8   \n- `PytorchAdaptiveGPUAllocator.move_tensor_to_device()`  \n    - \u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u30c6\u30f3\u30bd\u30eb\u3092\u30c7\u30d0\u30a4\u30b9(GPU\u3084CPU)\u306b\u79fb\u52d5\u3055\u305b\u308b  \n    - \u8a13\u7df4\u30eb\u30fc\u30d7\u5185\u3067\u5b9f\u969b\u306b\u8a13\u7df4\u306e\u8a08\u7b97(Forward, loss\u8a08\u7b97, Backward, Optimization)\u3059\u308b\u7b87\u6240\u3088\u308a\u524d\u306b\u8a18\u8ff0\u3059\u308b  \n    - \u5f15\u6570  \n        - `tensor_data` : \u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u30c6\u30f3\u30bd\u30eb  \n    - \u623b\u308a\u5024  \n        - \u30c7\u30d0\u30a4\u30b9\u306b\u79fb\u52d5\u3055\u305b\u305f\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u30c6\u30f3\u30bd\u30eb  \n- `PytorchAdaptiveGPUAllocator.on_device_begin()`  \n    - \u30c7\u30d0\u30a4\u30b9\u3092\u4f7f\u7528\u3057\u305f\u3044\u51e6\u7406\u306e\u958b\u59cb\u5730\u70b9\u3092\u6307\u5b9a\u3057\u3001\u30c7\u30d0\u30a4\u30b9\u5272\u308a\u5f53\u3066\u3092\u8981\u6c42\u3059\u308b  \n    - \u57fa\u672c\u7684\u306b\u306f\u8a13\u7df4\u30eb\u30fc\u30d7\u306e\u5192\u982d\u306b\u8a18\u8ff0\u3057\u3066\u304a\u304f  \n    - \u5f15\u6570  \n        - `device` : \u5272\u5f53\u3066\u3067\u8981\u6c42\u3059\u308b\u30c7\u30d0\u30a4\u30b9 (`any`, `cuda`, `gpu`, `cpu`\u306e\u3044\u305a\u308c\u304b\u3067`gpu`\u306f`cuda`\u306e\u5225\u540d)  \n    - \u623b\u308a\u5024\u306a\u3057  \n- `PytorchAdaptiveGPUAllocator.on_device_end()`  \n    - \u30c7\u30d0\u30a4\u30b9\u3092\u4f7f\u7528\u3057\u305f\u3044\u51e6\u7406\u306e\u7d42\u4e86\u6642\u70b9\u3092\u6307\u5b9a\u3057\u3001\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30c7\u30d0\u30a4\u30b9\u3092\u89e3\u653e\u3059\u308b  \n    - \u57fa\u672c\u7684\u306b\u8a13\u7df4\u30eb\u30fc\u30d7\u306e\u5f8c\u306b\u8a18\u8ff0\u3057\u3066\u304a\u304f  \n    - \u5f15\u6570\n        - `release_policy` : ReleasePolicy.NO_RELEASE\u306e\u5834\u5408\u3001\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30c7\u30d0\u30a4\u30b9\u306f\u3053\u3053\u3067\u306f\u89e3\u653e\u3055\u308c\u305a\u3001finalize\u3067\u89e3\u653e\u3055\u308c\u308b\n    - \u623b\u308a\u5024\u306a\u3057  \n- `PytorchAdaptiveGPUAllocator.finalize()`  \n    - \u30c7\u30d0\u30a4\u30b9\u5272\u308a\u5f53\u3066\u6a5f\u80fd\u3068\u306e\u9023\u643a\u3092\u7d42\u4e86\u3057\u3001ACB\u306e\u51e6\u7406\u3092\u7d42\u4e86\u3059\u308b  \n    - \u57fa\u672c\u7684\u306b\u8a13\u7df4\u306e\u6700\u5f8c\u306b\u8a18\u8ff0\u3057\u3066\u304a\u304f  \n    - \u5f15\u6570\u30fb\u623b\u308a\u5024\u306a\u3057", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1480, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7342c69-858b-42eb-893b-30ddf57d37a3": {"__data__": {"id_": "f7342c69-858b-42eb-893b-30ddf57d37a3", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "56d3bb6f-1558-4c15-a582-5c244046cc8f", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "46b58016ab9e04f861e224f6a77bbef143d0d38a225368e34216ab498c198f94", "class_name": "RelatedNodeInfo"}}, "text": "PyTorch \u5411\u3051 API(\u30de\u30eb\u30c1GPU\u30d7\u30ed\u30b0\u30e9\u30e0\u7248)\n\u30de\u30eb\u30c1GPU\u30d7\u30ed\u30b0\u30e9\u30e0\u7248\u306ePyTorch \u306e\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5229\u7528\u3067\u304d\u308bAPI\u3092\u8aac\u660e\u3059\u308b\u3002  \n\u3044\u305a\u308c\u3082`adaptive_gpu_allocator.pytorch_ddp`\u30e2\u30b8\u30e5\u30fc\u30eb\u306e`PyTorchDDPAdaptiveGPUAllocator`\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u3002\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u4ee5\u5916\u306f\u89aa\u30af\u30e9\u30b9\u306e`PytorchAdaptiveGPUAllocator`\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5f15\u304d\u7d99\u3050\u3002\n* `PyTorchDDPAdaptiveGPUAllocator.__init__()`  \n    - `PyTorchDDPAdaptiveGPUAllocator`\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf  \n    - \u5f15\u6570  \n        - `model` : \u30e2\u30c7\u30eb(`torch.nn.Module`\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8)  \n        - `optimizer` : \u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc(`torch.optim.Adam`\u306a\u3069)  \n        - `scheduler` : \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc(`torch.optim.lr_scheduler.ExportentialLR`\u306a\u3069)\n        - `device` : \u5272\u5f53\u3066\u3067\u8981\u6c42\u3059\u308b\u30c7\u30d0\u30a4\u30b9 (`any`, `cuda`, `gpu`, `cpu`\u306e\u3044\u305a\u308c\u304b\u3067`gpu`\u306f`cuda`\u306e\u5225\u540d\u3002\u74b0\u5883\u5909\u6570`AGA_REQUEST_DEVICE`\u306e\u6307\u5b9a\u304c\u3042\u308b\u5834\u5408\u306f\u305d\u3061\u3089\u304c\u512a\u5148\u3055\u308c\u308b)\n        - `world_size` : \u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u4f7f\u7528\u6642\u306e\u30d7\u30ed\u30bb\u30b9\u6570\n        - `rank` : \u5404\u30d7\u30ed\u30bb\u30b9\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305fID(\u7bc4\u56f2[`0`:`world_size-1`])\n    - \u623b\u308a\u5024  \n        - `PyTorchDDPAdaptiveGPUAllocator`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 817, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8a874b45-0317-4384-9793-e328a0436a58": {"__data__": {"id_": "8a874b45-0317-4384-9793-e328a0436a58", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f102f05b-5a20-449b-8f90-0b14894aef47", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "ec733c6dd4b127f2c549dcf2ec56319eb7a415e80ff3cd051e168317ada97006", "class_name": "RelatedNodeInfo"}}, "text": "\u524d\u51e6\u7406\u3001\u63a8\u8ad6\u3001\u5f8c\u51e6\u7406 (a. \u518d\u8d77\u52d5\u306a\u3057\u7248)\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`samples/no_restart/inference_skeleton.py`)\u3092\u4f8b\u306b\u3001\u524d\u51e6\u7406\u3001\u63a8\u8ad6\u3001\u5f8c\u51e6\u7406\u304c\u3042\u308b\u3088\u3046\u306a\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u3092ACB\u306ea.\u518d\u8d77\u52d5\u306a\u3057\u7248\u5411\u3051\u306b\u66f8\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002\n\n- \u30b5\u30f3\u30d7\u30eb\u7591\u4f3c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u51e6\u7406\u30d5\u30ed\u30fc\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002  \n  \u524d\u51e6\u7406\uff11 > \u63a8\u8ad6\u51e6\u7406\uff11 > \u524d\u51e6\u7406\uff12 > \u63a8\u8ad6\u51e6\u7406\uff12 > \u5f8c\u51e6\u7406  \n- \u4fee\u6b63\u7b87\u6240  \n  1.  (PyTorch\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408)`PyTorchAdaptiveGPUAllocator`\u3092Import\u3059\u308b(3\u884c\u76ee)  \n  2. PyTorchAdaptiveGPUAllocator\u3092\u521d\u671f\u5316\u3059\u308b(28\u884c\u76ee)  \n  3. \u8a13\u7df4\u51e6\u7406\u3068\u540c\u69d8\u306b\u63a8\u8ad6\u51e6\u7406\u306b\u3064\u3044\u3066\u3082\u3001GPU\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u7b87\u6240\u306e\u59cb\u70b9\u3092`on_device_begin()`\u3067\u6307\u5b9a\u3059\u308b(43, 64\u884c\u76ee)  \n  4. \u8a13\u7df4\u51e6\u7406\u3068\u540c\u69d8\u306b\u63a8\u8ad6\u51e6\u7406\u306b\u3064\u3044\u3066\u3082\u3001GPU\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u7b87\u6240\u306e\u7d42\u70b9\u3092`on_device_end()`\u3067\u6307\u5b9a\u3059\u308b(48, 69\u884c\u76ee)  \n  5. `aga.finalize()`\u3092\u6307\u5b9a\u3057\u3066ACB\u306e\u51e6\u7406\u3092\u7d42\u4e86\u3055\u305b\u308b(71\u884c\u76ee)  \n\n- \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`samples/no_restart/inference_skeleton.py`)\n\n\n``` python {.line-numbers highlight=[3, 28, 43, 48, 64, 69, 71]}\nimport torch\nimport torch.nn as nn\nfrom adaptive_gpu_allocator.pytorch import PyTorchAdaptiveGPUAllocator\n\n\n# Define the network architecture\nclass Net(nn.Module):\n    def __init__(self):\n        super(Net, self).__init__()\n        self.fc1 = nn.Linear(20, 10)  # Input layer\n        self.fc3 = nn.Linear(10, 10)\n        self.fc2 = nn.Linear(10, 1)  # Output layer\n\n    def forward(self, x):\n        x = torch.relu(self.fc1(x))\n        for i in range(20):\n            x = torch.relu(self.fc3(x))\n        x = self.fc2(x)\n        return x\n\n\ndef preprocess():\n    data = []\n    # \u524d\u51e6\u7406\u3067\u30c6\u30f3\u30bd\u30eb\u30c7\u30fc\u30bf(data)\u3092\u4f5c\u6210\n    return data\n\n\naga = PyTorchAdaptiveGPUAllocator(Net())\n\n#\n# \u524d\u51e6\u7406\uff11\n#\n\n# \u524d\u51e6\u7406\u5b9f\u884c\nprint(\"pre-processing something (pre-processing 1)\")\ndata = preprocess()\n\n\n#\n# \u63a8\u8ad6\uff11\n#\n\naga.on_device_begin()\n\n# \u63a8\u8ad6\u51e6\u7406\nprint(\"infer something (infer 1)\")\n\naga.on_device_end()\n\n\n#\n# \u524d\u51e6\u7406\uff12\n#\n\n# \u524d\u51e6\u7406\u5b9f\u884c\nprint(\"pre-processing something (pre-processing 2)\")\ndata = preprocess()\n\n\n#\n# \u63a8\u8ad6\uff12\n#\n\naga.on_device_begin()\n\n# \u63a8\u8ad6\u51e6\u7406\nprint(\"infer something (infer 2)\")\n\naga.on_device_end()\n\naga.finalize()\n\n\n#\n# \u5f8c\u51e6\u7406\n#\nprint(\"post-processing something\")\n\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1766, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52bf7ada-c8b9-4726-991e-a153dffa8054": {"__data__": {"id_": "52bf7ada-c8b9-4726-991e-a153dffa8054", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aa03bec3-b246-416d-8186-1b220a9c117b", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "21ecd52129111d988fea4897aa78b37f3a8f4193295b2748623d6ba3fe736075", "class_name": "RelatedNodeInfo"}}, "text": "MNIST\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0 (a. \u518d\u8d77\u52d5\u306a\u3057\u7248)\n\n\u624b\u66f8\u304d\u6570\u5b57\u8a8d\u8b58\u306eMNIST\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5bfe\u8c61\u306b\u3057\u305fa.\u518d\u8d77\u52d5\u306a\u3057\u7248\u306ePyTorch\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5229\u7528\u3057\u305f\u8a13\u7df4\u30fb\u63a8\u8ad6\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3082`samples/no_restart/mnist_pytorch/`\u306b\u3042\u308b\u3002\n\u3053\u3061\u3089\u3082\u53c2\u8003\u306b\u3057\u3066\u307b\u3057\u3044\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 156, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8516fe14-0eee-4dec-9f88-04214869c04f": {"__data__": {"id_": "8516fe14-0eee-4dec-9f88-04214869c04f", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c679ba10-a80c-4e11-b898-83c56e7496be", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "0fde2727e2c39f435cb485894cac64f87399ffbdf7c92b18324e7dbc538f798e", "class_name": "RelatedNodeInfo"}}, "text": "b. \u518d\u8d77\u52d5\u3042\u308a\u7248\n\nACB\u306eb.\u518d\u8d77\u52d5\u3042\u308a\u7248\u3067\u306f\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5404\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u30c7\u30d0\u30a4\u30b9\uff08CPU or GPU\uff09\u5207\u308a\u66ff\u3048\u308b\u305f\u3081\u306b\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u518d\u8d77\u52d5\u3092\u884c\u3046\u3002\n\n\u3053\u306e\u305f\u3081\u3001\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306b\u3001\u518d\u8d77\u52d5\u524d\u306b\u5b9f\u884c\u3057\u305f\u51e6\u7406\u304c\u518d\u8d77\u52d5\u5f8c\u306b\u518d\u5ea6\u5b9f\u884c\u3055\u308c\u3066\u3057\u307e\u3046\u3002\n\u307e\u305f\u3001\u518d\u8d77\u52d5\u306b\u3088\u308a\u6b21\u306e\u51e6\u7406\u306b\u5fc5\u8981\u306a\u30e1\u30e2\u30ea\u4e0a\u306e\u30c7\u30fc\u30bf\u304c\u6d88\u5931\u3057\u3066\u3057\u307e\u3046\u3002\n\n!image\n\n\u3053\u308c\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u5404\u51e6\u7406\u306b\u304a\u3044\u3066\u4ee5\u4e0b\u3092\u8ffd\u52a0\u4fee\u6b63\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n- \u5404\u51e6\u7406\u304c\u5b9f\u884c\u6e08\u306e\u6642\u3001\u518d\u8d77\u52d5\u6642\u306b\u5f53\u8a72\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\n- \u5404\u51e6\u7406\u304c\u751f\u6210\u3057\u305f\u6b21\u306e\u51e6\u7406\u306b\u5fc5\u8981\u306a\u30e1\u30e2\u30ea\u4e0a\u30c7\u30fc\u30bf\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u3002\u6b21\u306e\u51e6\u7406\u306f\u305d\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u8fbc\u3080\u3002\n\n\u3053\u308c\u306b\u3088\u308a\u3001\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306b\u5404\u51e6\u7406\u304c\u9806\u756a\u306b\uff11\u56de\u305a\u3064\u51e6\u7406\u3055\u308c\u308b\u3002\n\n!image\n\n\u5177\u4f53\u7684\u306a\u4fee\u6b63\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3001\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f8b\u306b\u8aac\u660e\u3059\u308b\u3002\n\u8a13\u7df4\u90e8\u5206\u306b\u3064\u3044\u3066\u306fPyTorch Lightning, TensorFlow \u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3054\u3068\u306b\u8aac\u660e\u3059\u308b\u3002\n\u524d\u51e6\u7406\u3001\u63a8\u8ad6\u3001\u5f8c\u51e6\u7406\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u7591\u4f3c\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f8b\u306b\u8aac\u660e\u3059\u308b\u3002\n\u306a\u304a\u3001b.\u518d\u8d77\u52d5\u3042\u308a\u7248\u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u306fagarun\u3067\u74b0\u5883\u5909\u6570`AGA_USE_RESTART=1`\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3042\u308b\u3001\u8a73\u7d30\u306fACB\u3092\u7528\u3044\u305f\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u3092\u53c2\u7167\u306e\u3053\u3068\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 539, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "07482b45-d893-4b07-a532-6d1ddaa5daff": {"__data__": {"id_": "07482b45-d893-4b07-a532-6d1ddaa5daff", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d58834da-21eb-4aae-8957-faa9017de181", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "0641ea353311d054c779790e6b9b50846ee2b394aae8eb3e2dfb2afd6e89bafc", "class_name": "RelatedNodeInfo"}}, "text": "PyTorch Lightning (b. \u518d\u8d77\u52d5\u3042\u308a\u7248)\n\nPyTorch Lightning\u3092\u4f7f\u3063\u3066\u66f8\u304b\u308c\u305f\u8a13\u7df4(Training)\u30d7\u30ed\u30b0\u30e9\u30e0\u3092ACB\u306eb.\u518d\u8d77\u52d5\u3042\u308a\u7248\u3067\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u66f8\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 109, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7fce27a5-38e4-4e0b-b4ac-33f9219f1848": {"__data__": {"id_": "7fce27a5-38e4-4e0b-b4ac-33f9219f1848", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "662cb779-47c8-4938-99ed-399605f099a6", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "3a105353a88df5703530198c30e1095f415e6853f5e980dfb43d6fcb0ef0035c", "class_name": "RelatedNodeInfo"}}, "text": "PyTorch Lightning\u306e\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`samples/restart/sample_pl.py`)\u3092\u4f8b\u306b\u3001PyTorch Lightning\u3092\u4f7f\u3063\u305f\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002  \n\u306a\u304a\u3001PyTorch Lightning\u5411\u3051\u306eACB\u306eAPI\u306e\u4f7f\u3044\u65b9\u306f\u5f8c\u8ff0\u306ePyTorch Lightning \u5411\u3051 API\u3092\u53c2\u7167\u306e\u3053\u3068\u3002\n\n1. `adaptive_gpu_allocator.lightning`\u306e`Trainer`\u3092Import\u3059\u308b(11\u884c\u76ee) \n    * PyTorch Lightning\u306e\u51e6\u7406\u3092\u30e9\u30c3\u30d7\u3057\u305fACB\u7528\u306e`Trainer`\u30af\u30e9\u30b9\u3092import\u3059\u308b\u3060\u3051\u3067\u3001ACB\u3092\u5229\u7528\u53ef\u80fd  \n2. `adaptive_gpu_allocator.env`\u306e`ensure_manual_mode_with_restart`\u3092Import\u3059\u308b(13\u884c\u76ee)\n3. `ensure_manual_mode_with_restart()`\u3092\u5b9f\u884c\u3059\u308b(16\u884c\u76ee)\n    * \u518d\u8d77\u52d5\u3042\u308a\u7528\u306e\u74b0\u5883\u5909\u6570\u8a2d\u5b9a\u3067\u52d5\u4f5c\u3057\u3066\u3044\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u95a2\u6570\u3092\u5b9f\u884c\u3057\u3001\u8a2d\u5b9a\u6f0f\u308c\u306e\u307e\u307e\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u9632\u6b62\u3059\u308b\u3002\n\n* \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`samples/restart/sample_pl.py`)\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\n\n```Python {.line-numbers highlight=\"11, 13, 16\"}\n# -*- coding: utf-8 -*-\n\"\"\"Sample script using AGA (pytorch lightning version).\"\"\"\n\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\nimport random\nimport numpy as np\n\nimport lightning as L\nfrom adaptive_gpu_allocator.lightning import Trainer\n\nfrom adaptive_gpu_allocator.env import ensure_manual_mode_with_restart\n\n# [AGA] Ensure running in manual AGA mode with restart\nensure_manual_mode_with_restart()\n\n\n# Define the network architecture\nclass Net(L.LightningModule):\n    \"\"\"Sample model.\"\"\"\n\n    def __init__(self):\n        \"\"\"Define network components.\"\"\"\n        super(Net, self).__init__()\n        self.fc1 = nn.Linear(20, 10)  # Input layer\n        self.fc3 = nn.Linear(10, 10)\n        self.fc2 = nn.Linear(10, 1)  # Output layer\n        self.criterion = nn.MSELoss()\n\n    def forward(self, x):\n        \"\"\"Define forward propagation process.\"\"\"\n        x = torch.relu(self.fc1(x))\n        for i in range(20):\n            x = torch.relu(self.fc3(x))\n        x = self.fc2(x)\n        return x\n\n    def training_step(self, batch, batch_idx):\n        \"\"\"Process training data.\"\"\"\n        data, target = batch\n        output = self.forward(data)\n        loss = self.criterion(output, target)\n        return loss\n\n    def configure_optimizers(self):\n        \"\"\"Define optimization method.\"\"\"\n        optimizer = optim.Adam(self.parameters())\n        return optimizer\n\n\n# fix seeds\nseed = 0\nrandom.seed(seed)\nnp.random.seed(seed)\ntorch.manual_seed(seed)\ntorch.backends.cudnn.benchmark = False\ntorch.backends.cudnn.deterministic = True\n\n# Assume we have some data in X_train and y_train\nX_train = torch.randn(1000, 20)  # 10000 samples, 20 features each\ny_train = torch.randn(1000, 1)  # 10000 samples, 1 target value each\ntrain_dataset = torch.utils.data.TensorDataset(X_train, y_train)\ntrain_dataloader = torch.utils.data.DataLoader(dataset=train_dataset, batch_size=1)\n\n# Create the network\nnet = Net()\n\nmax_epoch = 5\ntrainer = Trainer(max_epochs=max_epoch)\ntrainer.fit(net, train_dataloaders=train_dataloader)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2655, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d13eb581-58d9-41f8-b36d-a45f8890c5a9": {"__data__": {"id_": "d13eb581-58d9-41f8-b36d-a45f8890c5a9", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e74ae15-f586-40b6-81e6-a3e5b23d0ef1", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "b1f0627c21257712cdb79d5d370f6d023255e6b4b79c89cfcf003c71cb69020b", "class_name": "RelatedNodeInfo"}}, "text": "PyTorch Lightning \u5411\u3051 API\n\nPyTorch Lightning \u306e\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5229\u7528\u3067\u304d\u308bAPI\u3092\u8aac\u660e\u3059\u308b\u3002  \n\u3044\u305a\u308c\u3082`adaptive_gpu_allocator.lightning`\u30e2\u30b8\u30e5\u30fc\u30eb\u306e`Trainer`\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u3002  \n\n* `Trainer.__init__()`  \n    - `Trainer`\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf  \n    - \u30aa\u30ea\u30b8\u30ca\u30eb\u306e`pytorch_lightning.Trainer.__init__()`\u3068\u540c\u3058\u3088\u3046\u306b\u4f7f\u3046  \n- `Trainer.fit()`  \n    - ACB\u3092\u5229\u7528\u3057\u3066\u5b66\u7fd2\u3092\u5b9f\u884c\u3059\u308b  \n    - \u30aa\u30ea\u30b8\u30ca\u30eb\u306e`pytorch_lightning.Trainer.fit()`\u3068\u540c\u3058\u3088\u3046\u306b\u4f7f\u3046", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 351, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15cbba0f-56c0-4786-8227-a258ed30ce7f": {"__data__": {"id_": "15cbba0f-56c0-4786-8227-a258ed30ce7f", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "55243d0f-b4da-46f9-a52d-f10344826f73", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "9e28df13e872f87f34ba4d2c2b0977981033aa1af91caabc60e826056c6dd92a", "class_name": "RelatedNodeInfo"}}, "text": "TensorFlow (b. \u518d\u8d77\u52d5\u3042\u308a\u7248)\n\nTensorFlow\u3092\u4f7f\u3063\u3066\u66f8\u304b\u308c\u305f\u8a13\u7df4(Training)\u30d7\u30ed\u30b0\u30e9\u30e0\u3092ACB\u306eb.\u518d\u8d77\u52d5\u3042\u308a\u7248\u3067\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u66f8\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 95, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "56953eef-3c3e-44dd-b202-ff0cff7b2d84": {"__data__": {"id_": "56953eef-3c3e-44dd-b202-ff0cff7b2d84", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "da9f41af-8f83-4aba-bd8a-5a2374b0155f", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "4203971eae081d2439511d6219560a2ee7eee58bb2d597b222f0a310fc618147", "class_name": "RelatedNodeInfo"}}, "text": "Keras\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5229\u7528\u3057\u305f\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`samples/restart/sample_keras.py`)\u3092\u4f8b\u306b\u3001TensorFlow\u306eKeras\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f7f\u3063\u305f\u8a13\u7df4(Training)\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002  \n\u306a\u304a\u3001TensorFlow\u5411\u3051\u306eACB\u306eAPI\u306e\u4f7f\u3044\u65b9\u306f\u5f8c\u8ff0\u306eTensorFlow \u5411\u3051 API\u3092\u53c2\u7167\u306e\u3053\u3068\u3002\n\n1. `adaptive_gpu_allocator.tensorflow`\u306e`TFModel`\u3092Import\u3059\u308b(6\u884c\u76ee)\n    * TensorFlow\u306eKeras\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u30e2\u30c7\u30eb\u3092\u30e9\u30c3\u30d7\u3057\u305fACB\u7528\u306e`TFModel`\u30af\u30e9\u30b9\u3092import\u3059\u308b  \n2. `adaptive_gpu_allocator.env`\u306e`ensure_manual_mode_with_restart`\u3092Import\u3059\u308b(8\u884c\u76ee)\n3. `ensure_manual_mode_with_restart()`\u3092\u5b9f\u884c\u3059\u308b(11\u884c\u76ee)\n    * \u518d\u8d77\u52d5\u3042\u308a\u7528\u306e\u74b0\u5883\u5909\u6570\u8a2d\u5b9a\u3067\u52d5\u4f5c\u3057\u3066\u3044\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u95a2\u6570\u3092\u5b9f\u884c\u3057\u3001\u8a2d\u5b9a\u6f0f\u308c\u306e\u307e\u307e\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u9632\u6b62\u3059\u308b\u3002\n\n4. `TFModel`\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\u3059\u308b(15\u884c\u76ee)  \n\n* \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`samples/restart/sample_keras.py`)\n\n```Python {.line-numbers highlight=[6, 8, 11, 15]}\nimport tensorflow as tf\nfrom tensorflow.keras import layers\nimport numpy as np\n\n# [AGA] import AGA\nfrom adaptive_gpu_allocator.tensorflow import TFModel\n\nfrom adaptive_gpu_allocator.env import ensure_manual_mode_with_restart\n\n# [AGA] Ensure running in manual AGA mode with restart\nensure_manual_mode_with_restart()\n\n\n# [AGA] \u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9(TFModel\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b)\nclass Net(TFModel):\n    def __init__(self):\n        super(Net, self).__init__()\n        self.fc1 = layers.Dense(units=10, input_shape=(20,))  # Input layer\n        self.fc3 = layers.Dense(units=10)\n        self.fc2 = layers.Dense(units=1)  # Output layer\n\n    def call(self, x):\n        x = tf.nn.relu(self.fc1(x))\n        for _ in range(20):\n            x = tf.nn.relu(self.fc3(x))\n        x = self.fc2(x)\n        return x\n\n\n# fix seeds\nseed = 0\ntf.keras.utils.set_random_seed(seed)\ntf.config.experimental.enable_op_determinism()\n\n# \u30c7\u30fc\u30bf\u306e\u30ed\u30fc\u30c9\n# 1000 samples, 20 features each\nX_train = np.random.rand(1000, 20).astype(np.float64)\n# 1000 samples, 1 features each\ny_train = np.random.rand(1000, 1).astype(np.float64)\n\n# \u30e2\u30c7\u30eb\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\nmodel = Net()\nmodel.compile(\n    loss=tf.keras.losses.MSE,\n    optimizer=tf.keras.optimizers.Adam(0.1),\n)\n\nhistory = model.fit(X_train, y_train, batch_size=1, epochs=10)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1910, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b150dfb4-d4bb-4968-b2f4-09b7a02443d1": {"__data__": {"id_": "b150dfb4-d4bb-4968-b2f4-09b7a02443d1", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6e823a71-ac99-4804-a7e7-898bcdb561fa", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "c67312bf190395f2cd3efa630fb4ad3001c2bc5c41d96190262eb5a3efe9c903", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "166d6555-65c6-4ee0-bd9a-0e016f3ae1dc", "node_type": "1", "metadata": {}, "hash": "8b355f8f1d7500d3f86c89b966214145f131eac36b1d905ceca447dcbc2b705c", "class_name": "RelatedNodeInfo"}}, "text": "\u4f4e\u30ec\u30d9\u30eb\u306eAPI\u3092\u5229\u7528\u3057\u305f\u8a13\u7df4\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u63db\u3048\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`samples/restart/sample_tf.py`)\u3092\u4f8b\u306b\u3001Checkpoint\u3084AGA\u306e\u8a73\u7d30\u8a2d\u5b9a\u306a\u3069\u3092\u3059\u308b\u305f\u3081\u306b\u3001TensorFlow\u306e\u4f4e\u30ec\u30d9\u30eb\u306eAPI\u3092\u4f7f\u3063\u305f\u8a13\u7df4(Training)\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002\n\u306a\u304a\u3001TensorFlow\u5411\u3051\u306eACB\u306eAPI\u306e\u4f7f\u3044\u65b9\u306f\u5f8c\u8ff0\u306eTensorFlow \u5411\u3051 API\u3092\u53c2\u7167\u306e\u3053\u3068\u3002\n\n1. `adaptive_gpu_allocator.tensorflow`\u306e`TensorflowAdaptiveGPUAllocator`\u3092Import\u3059\u308b(7\u884c\u76ee)  \n2. `adaptive_gpu_allocator.env`\u306e`ensure_manual_mode_with_restart`\u3092Import\u3059\u308b(9\u884c\u76ee)\n3. `ensure_manual_mode_with_restart()`\u3092\u5b9f\u884c\u3059\u308b(12\u884c\u76ee)\n    * \u518d\u8d77\u52d5\u3042\u308a\u7528\u306e\u74b0\u5883\u5909\u6570\u8a2d\u5b9a\u3067\u52d5\u4f5c\u3057\u3066\u3044\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u95a2\u6570\u3092\u5b9f\u884c\u3057\u3001\u8a2d\u5b9a\u6f0f\u308c\u306e\u307e\u307e\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u9632\u6b62\u3059\u308b\u3002\n4. (`tf.keras.Model`\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\u3059\u308b)(24\u884c\u76ee)  \n5. `TensorflowAdaptiveGPUAllocator`\u3092\u521d\u671f\u5316\u3059\u308b(55\u884c\u76ee)  \n    * \u30e2\u30c7\u30eb\u3084\u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u306a\u3069\u3092\u5b9a\u7fa9\u5f8c\u3001\u521d\u671f\u5316\u3059\u308b\u3002  \n6. `start_epoch`\u3067\u8a13\u7df4\u30eb\u30fc\u30d7\u306eepoch\u306e\u958b\u59cb\u70b9\u3092\u8a2d\u5b9a\u3059\u308b(58\u884c\u76ee)\n7. epoch\u3054\u3068\u306e\u8a13\u7df4\u30eb\u30fc\u30d7\u306e\u4e2d\u3067GPU\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u7b87\u6240\u306e\u59cb\u70b9\u3092`on_device_begin()`\u3067\u6307\u5b9a\u3059\u308b(63\u884c\u76ee)  \n8. `update_state_dict(epoch_count=epoch)`\u3067\u4fdd\u5b58\u3059\u308bepoch_count\u306e\u5024\u3092\u66f4\u65b0\u3059\u308b(82\u884c\u76ee)  \n    * GPU/CPU\u306e\u5207\u308a\u66ff\u3048\u6642\u306b\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306e\u4fdd\u5b58/\u30ed\u30fc\u30c9\u3092\u884c\u3046\u306e\u3067\u3001for\u30eb\u30fc\u30d7\u306a\u3069\u3067\u8907\u6570\u56de\u5b9f\u884c\u3059\u308b\u5834\u5408\u306b\u306f\u5fc5\u305a\u8a18\u8f09\u3059\u308b  \n    * update_state_dict\u3067\u767b\u9332\u3057\u305f\u5024(\u3053\u3053\u3067\u306fepoch)\u304c\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306b\u542b\u307e\u308c\u3001\u518d\u8d77\u52d5\u5f8c\u306b`start_epoch`\u306b\u30ed\u30fc\u30c9\u3055\u308c\u308b  \n9. GPU\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u7b87\u6240\u306e\u7d42\u70b9\u3092`on_device_end(release_policy=ReleasePolicy.NO_RELEASE)`\u3067\u6307\u5b9a\u3059\u308b(85\u884c\u76ee)\n    * GPU\u306e\u89e3\u653e\u3092\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u518d\u8d77\u52d5\u3092\u6291\u5236\u3059\u308b\u305f\u3081\u306b`release_policy=ReleasePolicy.NO_RELEASE`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\n10. \u6700\u5f8c\u306b`aga.finalize()`\u3092\u6307\u5b9a\u3057\u3066ACB\u306e\u51e6\u7406\u3092\u7d42\u4e86\u3055\u305b\u308b(88\u884c\u76ee)  \n  \n* \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`samples/restart/sample_tf.py`)\n```Python {.line-numbers highlight=[7 9 12 24 55  58 63 82 85 88]}\n\nimport tensorflow as tf\nfrom tensorflow.keras import layers\nimport numpy as np\nimport os\n\n# [AGA] import AGA\nfrom adaptive_gpu_allocator.tensorflow import TensorflowAdaptiveGPUAllocator\nfrom adaptive_gpu_allocator.adaptive_gpu_allocator import ReleasePolicy\n\nfrom adaptive_gpu_allocator.env import ensure_manual_mode_with_restart\n\n# [AGA] Ensure running in manual AGA mode with restart\nensure_manual_mode_with_restart()\n\n\n# loss function\ndef loss_fn(y_predict, y):\n    return tf.keras.losses.MSE(y_predict, y)\n\n\ntrain_loss = tf.keras.metrics.Mean(name=\"train_loss\")", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1867, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "166d6555-65c6-4ee0-bd9a-0e016f3ae1dc": {"__data__": {"id_": "166d6555-65c6-4ee0-bd9a-0e016f3ae1dc", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6e823a71-ac99-4804-a7e7-898bcdb561fa", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "c67312bf190395f2cd3efa630fb4ad3001c2bc5c41d96190262eb5a3efe9c903", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b150dfb4-d4bb-4968-b2f4-09b7a02443d1", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "a3a6642a4663a165c8b434ba9cfbb3f88dc569c9d5d2b039808d886a57f657bf", "class_name": "RelatedNodeInfo"}}, "text": "# loss function\ndef loss_fn(y_predict, y):\n    return tf.keras.losses.MSE(y_predict, y)\n\n\ntrain_loss = tf.keras.metrics.Mean(name=\"train_loss\")\n\n\n# \u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9(tf.keras.Model\u3067\u8a18\u8ff0)\nclass Net(tf.keras.Model):\n    def __init__(self):\n        super(Net, self).__init__()\n        self.fc1 = layers.Dense(units=10, input_shape=(20,))  # Input layer\n        self.fc3 = layers.Dense(units=10)\n        self.fc2 = layers.Dense(units=1)  # Output layer\n\n    def call(self, x):\n        x = tf.nn.relu(self.fc1(x))\n        for i in range(20):\n            x = tf.nn.relu(self.fc3(x))\n        x = self.fc2(x)\n        return x\n\n\n# fix seeds\nseed = 0\ntf.keras.utils.set_random_seed(seed)\ntf.config.experimental.enable_op_determinism()\n\n# \u30c7\u30fc\u30bf\u306e\u30ed\u30fc\u30c9\n# 10000 samples, 20 features each\nX_train = np.random.rand(1000000, 20).astype(np.float32)\n# 10000 samples, 1 features each\ny_train = np.random.rand(1000000, 1).astype(np.float32)\n\n# create model\nmodel = Net()\noptimizer = tf.keras.optimizers.Adam(0.1)\n\n# [AGA] initialize AGA\naga = TensorflowAdaptiveGPUAllocator(model=model, optimizer=optimizer)\n\n# epoch\u306e\u958b\u59cb\u70b9\u306e\u8a2d\u5b9a\nstart_epoch = aga.start_epoch\n\n# \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30eb\u30fc\u30d7\nfor epoch in range(start_epoch, 20):\n    # [AGA] notify the begining of iterations to AGA\n    aga.on_device_begin()\n\n    with tf.GradientTape() as tape:\n        y_predict = model(X_train)\n        loss = loss_fn(y_predict, y_train)\n        train_loss(loss)\n    grads = tape.gradient(loss, model.variables)\n\n    # update parameters using grads\n    optimizer.apply_gradients(zip(grads, model.variables))\n\n    # Print loss every 10 epochs\n    gpuid = os.getenv(\"CUDA_VISIBLE_DEVICES\")\n    if gpuid is None or gpuid == \"NoGPU\" or gpuid == \"\":\n        print(f\"Epoch {epoch}, Loss: {train_loss.result().numpy()} on CPU\")\n    else:\n        print(f\"Epoch {epoch}, Loss: {train_loss.result().numpy()} on {gpuid}\")\n\n    # [AGA] register arbitrary key-value for checkpointing per epoch\n    aga.update_state_dict(epoch_count=epoch)\n\n    # [AGA] notify the end of iterations to AGA\n    aga.on_device_end(release_policy=ReleasePolicy.NO_RELEASE)\n\n# [AGA] notifiy the end of iterations to AGA\naga.finalize()\n```", "mimetype": "text/plain", "start_char_idx": 1724, "end_char_idx": 3848, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74648a0e-ccd7-4ae2-b83e-0d88500dc494": {"__data__": {"id_": "74648a0e-ccd7-4ae2-b83e-0d88500dc494", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bc67d9ae-d08f-43bd-bb0f-6af9b8266375", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "73929f9aa3c2ae64c2d5abff08046fc53c872068147d6124661402b8596bfdd5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c35e7566-7e86-4c2c-91a7-297b6949cd0f", "node_type": "1", "metadata": {}, "hash": "1b4ec85db4033d386bb4ef91c1430941730efbbdc11a31eaa6390a194dd79815", "class_name": "RelatedNodeInfo"}}, "text": "TensorFlow \u5411\u3051 API\n\nTensorFlow \u306e\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5229\u7528\u3067\u304d\u308bAPI\u3092\u8aac\u660e\u3059\u308b\u3002  \nAPI\u306f`adaptive_gpu_allocator.tensorflow`\u30e2\u30b8\u30e5\u30fc\u30eb\u306e`TensorflowAdaptiveGPUAllocator`\u30af\u30e9\u30b9\u3068`TFModel`\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3002\n\n\u4ee5\u4e0b\u306f\u3001`TensorflowAdaptiveGPUAllocator`\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u3002  \n* `TensorflowAdaptiveGPUAllocator.__init__()`  \n    - `TensorflowAdaptiveGPUAllocator`\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf \n    - \u518d\u958b\u6642\u306e\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306e\u8aad\u307f\u8fbc\u307f\u3082\u3053\u3053\u3067\u884c\u3046   \n    - \u5f15\u6570  \n        - `model` : \u30e2\u30c7\u30eb(`tf.keras.Model`\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9)  \n        - `optimizer` : \u30aa\u30d7\u30c6\u30a3\u30de\u30a4\u30b6\u30fc(`tf.keras.optimizers.Adam`\u306a\u3069)  \n        - `scheduler` : \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc(`tf.keras.optimizers.schedules.LearningRateSchedule`\u306a\u3069)  \n        - `device` : \u5272\u5f53\u3066\u3067\u8981\u6c42\u3059\u308b\u30c7\u30d0\u30a4\u30b9 (`any`, `cuda`, `gpu`, `cpu`\u306e\u3044\u305a\u308c\u304b\u3067`gpu`\u306f`cuda`\u306e\u5225\u540d)\n    - \u623b\u308a\u5024  \n        - `TensorflowAdaptiveGPUAllocator`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8  \n- `TensorflowAdaptiveGPUAllocator.update_state_dict()`  \n    - \u518d\u8d77\u52d5\u5f8c\u306e\u51e6\u7406\u518d\u958b\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u767b\u9332\u3059\u308b  \n    - \u30c7\u30d0\u30a4\u30b9\u306e\u5207\u308a\u66ff\u3048\u304c\u8d77\u304d\u308b\u7b87\u6240(on_device_end(), \u8a13\u7df4\u30eb\u30fc\u30d7\u306e\u672b\u5c3e)\u3088\u308a\u3082\u524d\u306b\u8a18\u8ff0\u3057\u3066\u304a\u304f  \n    - \u5f15\u6570  \n        - `epoch_count` : \u30a8\u30dd\u30c3\u30af\u6570\n        - `batch_count` : \u30d0\u30c3\u30c1\u6570\n        - `completed` : \u63a8\u8ad6 or \u5b66\u7fd2\u51e6\u7406\u306e\u30b9\u30ad\u30c3\u30d7\u5224\u5b9a\u7528\u30d5\u30e9\u30b0\n    - \u623b\u308a\u5024\u306a\u3057  \n- `TensorflowAdaptiveGPUAllocator.on_device_begin()`  \n    - \u30c7\u30d0\u30a4\u30b9\u3092\u4f7f\u7528\u3057\u305f\u3044\u51e6\u7406\u306e\u958b\u59cb\u5730\u70b9\u3092\u6307\u5b9a\u3057\u3001\u30c7\u30d0\u30a4\u30b9\u5272\u308a\u5f53\u3066\u3092\u8981\u6c42\u3059\u308b  \n    - \u57fa\u672c\u7684\u306b\u306f\u8a13\u7df4\u30eb\u30fc\u30d7\u306e\u5192\u982d\u306b\u8a18\u8ff0\u3057\u3066\u304a\u304f  \n    - \u5f15\u6570  \n        - `device` : \u5272\u5f53\u3066\u3067\u8981\u6c42\u3059\u308b\u30c7\u30d0\u30a4\u30b9 (`any`, `cuda`, `gpu`, `cpu`\u306e\u3044\u305a\u308c\u304b\u3067`gpu`\u306f`cuda`\u306e\u5225\u540d\u3002`TensorflowAdaptiveGPUAllocator`\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u6307\u5b9a\u304c\u3042\u308b\u5834\u5408\u306f\u305d\u308c\u3089\u304c\u512a\u5148\u3055\u308c\u308b)  \n    - \u623b\u308a\u5024\u306a\u3057  \n- `TensorflowAdaptiveGPUAllocator.on_device_end()`  \n    - \u30c7\u30d0\u30a4\u30b9\u3092\u4f7f\u7528\u3057\u305f\u3044\u51e6\u7406\u306e\u7d42\u4e86\u6642\u70b9\u3092\u6307\u5b9a\u3057\u3001\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30c7\u30d0\u30a4\u30b9\u3092\u89e3\u653e\u3059\u308b  \n    - \u57fa\u672c\u7684\u306b\u8a13\u7df4\u30eb\u30fc\u30d7\u306e\u5f8c\u306b\u8a18\u8ff0\u3057\u3066\u304a\u304f  \n    - \u5f15\u6570\n        - `release_policy` : ReleasePolicy.NO_RELEASE \u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30c7\u30d0\u30a4\u30b9\u3092\u89e3\u653e\u305b\u305a\u4fdd\u3061\u7d9a\u3051\u308b\n    - \u623b\u308a\u5024\u306a\u3057  \n- `TensorflowAdaptiveGPUAllocator.finalize()`  \n    - \u30c7\u30d0\u30a4\u30b9\u5272\u308a\u5f53\u3066\u6a5f\u80fd\u3068\u306e\u9023\u643a\u3092\u7d42\u4e86\u3057\u3001ACB\u306e\u51e6\u7406\u3092\u7d42\u4e86\u3059\u308b  \n    - \u57fa\u672c\u7684\u306b\u8a13\u7df4\u306e\u6700\u5f8c\u306b\u8a18\u8ff0\u3057\u3066\u304a\u304f  \n    - \u5f15\u6570\u30fb\u623b\u308a\u5024\u306a\u3057 \n\n\u4ee5\u4e0b\u306f\u3001`TFModel`\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u3002  \n- `TFModel.__init__()`  \n    - `TFModel`\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf  \n    - \u30aa\u30ea\u30b8\u30ca\u30eb\u306e`tensorflow.keras.Model.__init__()`\u3068\u540c\u3058\u3088\u3046\u306b\u4f7f\u3046\n- `TFModel.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1806, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c35e7566-7e86-4c2c-91a7-297b6949cd0f": {"__data__": {"id_": "c35e7566-7e86-4c2c-91a7-297b6949cd0f", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bc67d9ae-d08f-43bd-bb0f-6af9b8266375", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "73929f9aa3c2ae64c2d5abff08046fc53c872068147d6124661402b8596bfdd5", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74648a0e-ccd7-4ae2-b83e-0d88500dc494", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "7dac69d1f81589485d616997d538d57555c99cbee5be8ef8142b412ca1e4494c", "class_name": "RelatedNodeInfo"}}, "text": "finalize()`  \n    - \u30c7\u30d0\u30a4\u30b9\u5272\u308a\u5f53\u3066\u6a5f\u80fd\u3068\u306e\u9023\u643a\u3092\u7d42\u4e86\u3057\u3001ACB\u306e\u51e6\u7406\u3092\u7d42\u4e86\u3059\u308b  \n    - \u57fa\u672c\u7684\u306b\u8a13\u7df4\u306e\u6700\u5f8c\u306b\u8a18\u8ff0\u3057\u3066\u304a\u304f  \n    - \u5f15\u6570\u30fb\u623b\u308a\u5024\u306a\u3057 \n\n\u4ee5\u4e0b\u306f\u3001`TFModel`\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u3002  \n- `TFModel.__init__()`  \n    - `TFModel`\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf  \n    - \u30aa\u30ea\u30b8\u30ca\u30eb\u306e`tensorflow.keras.Model.__init__()`\u3068\u540c\u3058\u3088\u3046\u306b\u4f7f\u3046\n- `TFModel.compile()`  \n    - `TFModel`\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n    - \u30aa\u30ea\u30b8\u30ca\u30eb\u306e`tensorflow.keras.Model.compile()`\u3068\u540c\u3058\u3088\u3046\u306b\u4f7f\u3046\n- `TFModel.fit()`  \n    - ACB\u3092\u5229\u7528\u3057\u3066\u8a13\u7df4\u3092\u5b9f\u884c\u3059\u308b\n    - \u30aa\u30ea\u30b8\u30ca\u30eb\u306e`tensorflow.keras.Model.fit()`\u3068\u540c\u3058\u3088\u3046\u306b\u4f7f\u3046", "mimetype": "text/plain", "start_char_idx": 1565, "end_char_idx": 1990, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d3aa3d7c-847e-4c8a-bd24-bf80a75b0044": {"__data__": {"id_": "d3aa3d7c-847e-4c8a-bd24-bf80a75b0044", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae700bcc-f157-401b-a3df-25ae4f9b2bc5", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "06c7410feb2c21ee63f12f6eb41e1fbaf8c334ff261d56ed6984ab9659d1a418", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "068ecc10-f6ad-4ac6-839e-7da258ed4fda", "node_type": "1", "metadata": {}, "hash": "896a1af44cbcb55a83fbb22562aeafebc04a6b74d94d3901632c8247496c2313", "class_name": "RelatedNodeInfo"}}, "text": "\u524d\u51e6\u7406\u3001\u63a8\u8ad6\u3001\u5f8c\u51e6\u7406 (b. \u518d\u8d77\u52d5\u3042\u308a\u7248)\n\nACB\u3067\u306f\u30d7\u30ed\u30bb\u30b9\u518d\u8d77\u52d5\u3057\u3066\u30c7\u30d0\u30a4\u30b9\uff08CPU/GPU\uff09\u5207\u66ff\u3048\u3092\u884c\u3046\u3002\n\u3088\u3063\u3066\u3001\u5b66\u7fd2\u51e6\u7406\u3084\u63a8\u8ad6\u51e6\u7406\u306e\u524d\u306b\u51e6\u7406\u3059\u308b\u524d\u51e6\u7406\u3084\u5f8c\u51e6\u7406\u306f\u3001\u4e00\u5ea6\u5b9f\u884c\u5b8c\u4e86\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u518d\u8d77\u52d5\u6642\u306b\u5b9f\u884c\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`samples/restart/inference_skeleton.py`)\u3092\u4f8b\u306b\u3001\u524d\u51e6\u7406\u3001\u63a8\u8ad6\u3001\u5f8c\u51e6\u7406\u304c\u3042\u308b\u3088\u3046\u306a\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u3092ACB\u306eb.\u518d\u8d77\u52d5\u3042\u308a\u7248\u5411\u3051\u306b\u66f8\u304d\u63db\u3048\u308b\u65b9\u6cd5\u3092PyTorch\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f8b\u306b\u8aac\u660e\u3059\u308b\u3002\n\u4ed6\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u7528\u3044\u308b\u5834\u5408\u306b\u306fImport\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3084API\u3092\u305d\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5411\u3051\u306e\u3082\u306e\u306b\u66f8\u304d\u66ff\u3048\u3066\u6b32\u3057\u3044\u3002\n\n- \u30b5\u30f3\u30d7\u30eb\u7591\u4f3c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u51e6\u7406\u30d5\u30ed\u30fc\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002  \n  \u524d\u51e6\u7406\uff11 > \u63a8\u8ad6\u51e6\u7406\uff11 > \u524d\u51e6\u7406\uff12 > \u63a8\u8ad6\u51e6\u7406\uff12 > \u5f8c\u51e6\u7406  \n- \u4fee\u6b63\u7b87\u6240  \n  1.  (PyTorch\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408)`PyTorchAdaptiveGPUAllocator`\u3092Import\u3059\u308b(5\u884c\u76ee)  \n  2. PyTorchAdaptiveGPUAllocator\u3092\u521d\u671f\u5316\u3059\u308b(38\u884c\u76ee)  \n  3. \u518d\u8d77\u52d5\u6642\u306b\u524d\u51e6\u7406\u3001\u63a8\u8ad6\u51e6\u7406\u3001\u5f8c\u51e6\u7406\u306e\u8907\u6570\u5b9f\u884c\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u5404\u51e6\u7406\u6bce\u306b\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u304a\u3088\u3073\u524d\u51e6\u7406\u30c7\u30fc\u30bf\u4fdd\u5b58\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u3051\u308b\u3002  \n      1. \u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u540d\u3001\u524d\u51e6\u7406\u30c7\u30fc\u30bf\u4fdd\u5b58\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3059\u308b(8-11, 13\u884c\u76ee)  \n      2. \u5404\u51e6\u7406\u306e\u6700\u521d\u306b\u5f53\u8a72\u30d5\u30a1\u30a4\u30eb\u306e\u6709\u7121\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b(41, 54, 71, 84\u884c\u76ee)  \n      3. \u5f53\u8a72\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u304b\u3063\u305f\u3089\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3002\u3053\u3053\u306f\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4fee\u6b63\u306f\u4e0d\u8981(44, 62, 74, 92, 102\u884c\u76ee)  \n      4. \u51e6\u7406\u304c\u5b8c\u4e86\u3057\u305f\u3089\u5f53\u8a72\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b(51, 66, 81, 96\u884c\u76ee)  \n  4. \u5404\u51e6\u7406\u3067\u751f\u6210\u3057\u305f\u518d\u8d77\u52d5\u5f8c\u3082\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u306f\u3001pickle \u306a\u3069\u306e\u6a5f\u80fd\u3067\u4fdd\u5b58\u3057\u3066\u304a\u304f(47-48, 77-78\u884c\u76ee)  \n  5. \u518d\u8d77\u52d5\u5f8c\u306b\u4fdd\u5b58\u3057\u3066\u304a\u3044\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080(57-58, 87-88\u884c\u76ee)  \n  6. \u8a13\u7df4\u51e6\u7406\u3068\u540c\u69d8\u306b\u63a8\u8ad6\u51e6\u7406\u306b\u3064\u3044\u3066\u3082\u3001GPU\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u7b87\u6240\u306e\u59cb\u70b9\u3092`on_device_begin()`\u3067\u6307\u5b9a\u3059\u308b(60, 90\u884c\u76ee)  \n  7. \u8a13\u7df4\u51e6\u7406\u3068\u540c\u69d8\u306b\u63a8\u8ad6\u51e6\u7406\u306b\u3064\u3044\u3066\u3082\u3001GPU\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u7b87\u6240\u306e\u7d42\u70b9\u3092`on_device_end()`\u3067\u6307\u5b9a\u3059\u308b(68, 98\u884c\u76ee)  \n  8. `aga.finalize()`\u3092\u6307\u5b9a\u3057\u3066ACB\u306e\u51e6\u7406\u3092\u7d42\u4e86\u3055\u305b\u308b(100\u884c\u76ee)  \n  9. \u6700\u5f8c\u306b\u4e0d\u8981\u306a\u30c7\u30fc\u30bf\u3092\u524a\u9664(106-110\u884c\u76ee)  \n\n- \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`samples/restart/inference_skeleton.py`)", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1227, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "068ecc10-f6ad-4ac6-839e-7da258ed4fda": {"__data__": {"id_": "068ecc10-f6ad-4ac6-839e-7da258ed4fda", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae700bcc-f157-401b-a3df-25ae4f9b2bc5", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "06c7410feb2c21ee63f12f6eb41e1fbaf8c334ff261d56ed6984ab9659d1a418", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d3aa3d7c-847e-4c8a-bd24-bf80a75b0044", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "ea912b9e77056db9d37894f40cec52a821ab3979c729145980106f0550ec715b", "class_name": "RelatedNodeInfo"}}, "text": "``` python {.line-numbers highlight=[5,38, 8-11, 13,41, 54, 71, 84, 51, 66, 81, 96,47-48, 77-78,57-58, 87-88,60, 90,68, 98,100, 106-110]}\nimport os\nimport pickle\nimport torch\nimport torch.nn as nn\nfrom adaptive_gpu_allocator.pytorch import PyTorchAdaptiveGPUAllocator\n\n# \u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\nckpt1 = 'checkpoint1'\nckpt2 = 'checkpoint2'\nckpt3 = 'checkpoint3'\nckpt4 = 'checkpoint4'\n# \u524d\u51e6\u7406\u30c7\u30fc\u30bf\u4fdd\u5b58\u30d5\u30a1\u30a4\u30eb\ndata_file = 'data.pickle'\n\n\n# Define the network architecture\nclass Net(nn.Module):\n    def __init__(self):\n        super(Net, self).__init__()\n        self.fc1 = nn.Linear(20, 10)  # Input layer\n        self.fc3 = nn.Linear(10, 10)\n        self.fc2 = nn.Linear(10, 1)   # Output layer\n\n    def forward(self, x):\n        x = torch.relu(self.fc1(x))\n        for i in range(20):\n            x = torch.relu(self.fc3(x))\n        x = self.fc2(x)\n        return x\n\n\ndef preprocess():\n    data = []\n    # \u524d\u51e6\u7406\u3067\u30c6\u30f3\u30bd\u30eb\u30c7\u30fc\u30bf(data)\u3092\u4f5c\u6210\n    return data\n\n\naga = PyTorchAdaptiveGPUAllocator(Net())\n\n# \u524d\u51e6\u7406\uff11\nif not os.path.exists(ckpt1):\n    # \u524d\u51e6\u7406\u5b9f\u884c\n    print(\"pre-processing something (pre-processing 1)\")\n    data = preprocess()\n\n    # \u524d\u51e6\u7406\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\n    with open(data_file, \"wb\") as f:\n        pickle.dump(data, f)\n\n    # \u524d\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u305f\u3089'checkpoint1'\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n    open(ckpt1, \"a\").close()\n\n# \u63a8\u8ad6\uff11\nif not os.path.exists(ckpt2):\n\n    # \u524d\u51e6\u7406\u30c7\u30fc\u30bf\u3092\u8aad\u8fbc\n    with open(data_file, \"rb\") as f:\n        data = pickle.load(f)\n\n    aga.on_device_begin()\n\n    # \u63a8\u8ad6\u51e6\u7406\n    print(\"infer something (infer 1)\")\n\n    # \u63a8\u8ad6\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u305f\u3089'checkpoint2'\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n    open(ckpt2, \"a\").close()\n\n    aga.on_device_end()\n\n# \u524d\u51e6\u7406\uff12\nif not os.path.exists(ckpt3):\n    # \u524d\u51e6\u7406\u5b9f\u884c\n    print(\"pre-processing something (pre-processing 2)\")\n    data = preprocess()\n\n    # \u524d\u51e6\u7406\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\n    with open(data_file, \"wb\") as f:\n        pickle.dump(data, f)\n\n    # \u524d\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u305f\u3089'checkpoint3'\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n    open(ckpt3, \"a\").close()\n\n# \u63a8\u8ad6\uff12\nif not os.path.exists(ckpt4):\n\n    # \u524d\u51e6\u7406\u30c7\u30fc\u30bf\u3092\u8aad\u8fbc\n    with open(data_file, \"rb\") as f:\n        data = pickle.load(f)\n\n    aga.on_device_begin()\n\n    # \u63a8\u8ad6\u51e6\u7406\n    print(\"infer something (infer 2)\")\n\n    # \u63a8\u8ad6\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u305f\u3089'checkpoint4'\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n    open(ckpt4, \"a\").close()\n\n    aga.on_device_end()\n\naga.finalize()\n\n# \u5f8c\u51e6\u7406\nprint(\"post-processing something\")\n\n# \u4e0d\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6700\u5f8c\u3067\u524a\u9664\nos.remove(data_file)\nos.remove(ckpt1)\nos.remove(ckpt2)\nos.remove(ckpt3)\nos.remove(ckpt4)\n```", "mimetype": "text/plain", "start_char_idx": 1231, "end_char_idx": 3507, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc73fbfb-37ae-45e6-83bd-30ea0a646376": {"__data__": {"id_": "bc73fbfb-37ae-45e6-83bd-30ea0a646376", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3f5fbd7b-6020-4eaa-b05d-9d9bedb4373a", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "a4c4dc4c777f3df78e355d4b433a521788ccae684d04f2679a5e288ed046371d", "class_name": "RelatedNodeInfo"}}, "text": "MNIST\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0 (b. \u518d\u8d77\u52d5\u3042\u308a\u7248)\n\n\u624b\u66f8\u304d\u6570\u5b57\u8a8d\u8b58\u306eMNIST\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5bfe\u8c61\u306b\u3057\u305fb.\u518d\u8d77\u52d5\u3042\u308a\u7248\u306ePyTorch\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5229\u7528\u3057\u305f\u8a13\u7df4\u30fb\u63a8\u8ad6\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c`samples/restart/mnist_pytorch/`\u306b\u3001TensorFlow\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5229\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c`samples/restart/mnist_tf/`\u306b\u3042\u308b\u3002\n\u3053\u3061\u3089\u3082\u53c2\u8003\u306b\u3057\u3066\u307b\u3057\u3044\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 214, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d4f7dd2-8534-40c6-8964-53320aa3f580": {"__data__": {"id_": "7d4f7dd2-8534-40c6-8964-53320aa3f580", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7ecca624-7287-46f1-88a3-9e332bf7dc5d", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "0e0d0b6a1c784f0d35ee154d60bdb3a459463bace12e79ccbbcee7d49277fd30", "class_name": "RelatedNodeInfo"}}, "text": "ACB\u3092\u7528\u3044\u305f\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n`agarun`\u306e\u5f15\u6570\u3068\u3057\u3066ACB\u306b\u5bfe\u5fdc\u3057\u305f\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6e21\u3057\u3066\u5b9f\u884c\u3059\u308b\u3002\n\n\u74b0\u5883\u5909\u6570\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u30dd\u30fc\u30c8\u756a\u53f7\u3001\u6700\u521d\u306b\u4f7f\u7528\u3059\u308b\u30c7\u30d0\u30a4\u30b9(GPU\u304bCPU)\u3001\u30c7\u30d0\u30a4\u30b9\uff08CPU/GPU\uff09\u5207\u66ff\u3048\u6642\u306b\u30d7\u30ed\u30bb\u30b9\u518d\u8d77\u52d5\u304c\u5fc5\u8981\u304b\u3069\u3046\u304b\u3001\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u30b8\u30e7\u30d6\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e`controller`\u30a2\u30c9\u30ec\u30b9\u306a\u3069\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n```sh\nagarun python sample.py \u200b\n```\n\u306a\u304a\u3001\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u304c`python sample.py --foo`\u306e\u3088\u3046\u306b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30aa\u30d7\u30b7\u30e7\u30f3\u4ed8\u304d\u3067\u8d77\u52d5\u3059\u308b\u5834\u5408\u3001'agarun'\u306e\u3042\u3068\u306b` -- `\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u8a8d\u8b58\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\u307e\u305f\u3001\u30de\u30eb\u30c1GPU\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306f\u3001`python`\u306e\u4ee3\u308f\u308a\u306b`torchrun`\u3092\u4f7f\u7528\u3059\u308b\u3002\n- \u30b7\u30f3\u30b0\u30ebGPU\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\n```sh\nagarun -- python sample.py --foo \u200b\n```\n- \u30de\u30eb\u30c1GPU\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\n```sh\nagarun -- torchrun --standalone --nproc_per_node  sample.py --foo \u200b\n```\n\n- \u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u5229\u7528\u6642\u306e`controller`\u306e\u30a2\u30c9\u30ec\u30b9 \n  \u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u30b8\u30e7\u30d6\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u3001\u74b0\u5883\u5909\u6570`AGA_GPU_ALLOC_SERVER_ADDRESS`\u306b`controller`\u306e\u30a2\u30c9\u30ec\u30b9\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3002\n  ```sh\n  AGA_GPU_ALLOC_SERVER_ADDRESS=\u30a2\u30c9\u30ec\u30b9 agarun torchrun sample.py\n  ```\n\n- \u30dd\u30fc\u30c8\u756a\u53f7\u306e\u5909\u66f4  \n  GPU Assigner\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30dd\u30fc\u30c8\u756a\u53f7(11234)\u4ee5\u5916\u3067\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001`agarun`\u306e\u5b9f\u884c\u6642\u3082\u74b0\u5883\u5909\u6570`AGA_GPU_ALLOC_SERVER_PORT`\u306b\u30dd\u30fc\u30c8\u756a\u53f7\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3002\n  ```sh\n  AGA_GPU_ALLOC_SERVER_PORT=\u30dd\u30fc\u30c8\u756a\u53f7 agarun python sample.py\n  ```\n\n- \u6700\u521d\u306b\u4f7f\u7528\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306e\u6307\u5b9a  \n  \u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6700\u521d\u306e\u51e6\u7406\u3092\u3001GPU\u4e0a\u3067\u51e6\u7406\u3057\u305f\u3044\u304b\u3001CPU\u4e0a\u306e\u51e6\u7406(\u524d\u51e6\u7406\u306a\u3069)\u3067\u3088\u3044\u304b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n  - `gpu` : GPU\u3092\u6307\u5b9a\u3059\u308b(\u30c7\u30d5\u30a9\u30eb\u30c8\u5024)\n  - `cpu` : CPU\u3092\u6307\u5b9a\u3059\u308b\n  \n  CPU\u3092\u6307\u5b9a\u3059\u308b\u4f8b\n  ```sh\n  AGA_INITIAL_DEVICE=cpu agarun python sample.py\n  ```\n\n- \u30c7\u30d0\u30a4\u30b9(CPU/GPU)\u5207\u66ff\u3048\u6642\u306eb.\u518d\u8d77\u52d5\u3042\u308a\u7248\u306e\u6307\u5b9a  \n  b.\u518d\u8d77\u52d5\u3042\u308a\u7248\u3092\u4f7f\u3046\u5834\u5408\u306b\u306f\u3001`AGA_USE_RESTART`\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n  \u6df1\u5c64\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306bPyTorch Lightning \u3084 TensorFlow\u3092\u7528\u3044\u308b\u5834\u5408\u306f\u3001b.\u518d\u8d77\u52d5\u3042\u308a\u7248\u3057\u304b\u4f7f\u3048\u306a\u3044\u306e\u3067`AGA_USE_RESTART`\u306e\u6307\u5b9a\u304c\u5fc5\u9808\u3067\u3042\u308a\u3001PyTorch\u3092\u7528\u3044\u308b\u5834\u5408\u306fa.\u518d\u8d77\u52d5\u306a\u3057\u7248\u304c\u4f7f\u3048\u308b\u306e\u3067\u6307\u5b9a\u306f\u5fc5\u8981\u306a\u3044\u3002\n  - `0` : a.\u518d\u8d77\u52d5\u306a\u3057\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09\n  - `1` : b.\u518d\u8d77\u52d5\u3042\u308a\n  - \u305d\u308c\u4ee5\u5916\u306e\u5024 : \u5b9f\u884c\u6642\u4f8b\u5916( `ValueError`)\n\n  b.\u518d\u8d77\u52d5\u3042\u308a\u7248\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u4f8b\n  ```sh\n  AGA_USE_RESTART=1 agarun python sample_tf.py\n  ```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1509, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a433e0cf-3fa6-427f-9b10-03218e07b7db": {"__data__": {"id_": "a433e0cf-3fa6-427f-9b10-03218e07b7db", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b51db9bd-2847-47e5-b277-7341bd57d4f3", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "82d4b1695c3d9a149cba8043e9e9d5a4ee492f4155e93937d48311b052afb269", "class_name": "RelatedNodeInfo"}}, "text": "agarun\u306e\u5f15\u6570\n- agarun\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30d8\u30eb\u30d7 : `agarun -h`\n  agarun\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4e00\u89a7\u304c\u8868\u793a\u3055\u308c\u308b\n\n  ```\n  usage: agarun [-h] [--without-aga] [--history-path HISTORY_PATH]\n                [--checkpoints-topdir CHECKPOINTS_TOPDIR]\n                args [args ...]\n\n  CLI to run your program with AGA enabled\n\n  positional arguments:\n    args                  Command to run with AGA enabled\n\n  options:\n    -h, --help            show this help message and exit\n    --without-aga         Disable GPU scheduling with AGA (for assessment purpose)\n    --history-path HISTORY_PATH\n                          Path of the job history file\n    --checkpoints-topdir CHECKPOINTS_TOPDIR\n                          Directory where checkpoint directories for each job are stored\n  ```\n  \u6709\u52b9\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u306f`--history-path`\u3068`--checkpoints-topdir`\u3067\u3042\u308b\u3002\n\n- \u30b8\u30e7\u30d6\u5c65\u6b74\u306e\u683c\u7d0d\u5834\u6240\u6307\u5b9a (`--history-path`)\n  `--history-path`\u5f15\u6570\u306b\u3088\u308a\u30b8\u30e7\u30d6\u5c65\u6b74\u306e\u683c\u7d0d\u5834\u6240\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n  \u30b8\u30e7\u30d6\u5c65\u6b74\u3068\u306f\u3001ACB\u306e\u30b8\u30e7\u30d6\u5b9f\u884c\u306b\u304a\u3044\u3066\u3001`agarun`\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306eAPI\u5b9f\u884c\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u8a18\u9332\u3055\u308c\u308b\u6642\u523b\u3084\u547c\u3073\u51fa\u3057\u5f15\u6570\u7b49\u306e\u60c5\u5831\u306e\u5c65\u6b74\u306e\u3053\u3068\u3067\u3042\u308b\u3002\n\n  \u3069\u306e\u3088\u3046\u306b\u30b8\u30e7\u30d6\u304c\u5b9f\u884c\u3055\u308c\u305f\u304b\u3092\u30b8\u30e7\u30d6\u5c65\u6b74\u304b\u3089\u77e5\u308b\u3053\u3068\u3067\u3001\u30b8\u30e7\u30d6\u306e\u5b9f\u884c\u72b6\u6cc1\u3084ACB\u5c0e\u5165\u52b9\u679c\u3092\u904b\u7528\u5f8c\u306b\u5206\u6790\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3068\u306a\u308b\u3002\n\n  \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b8\u30e7\u30d6\u5c65\u6b74\u683c\u7d0d\u5834\u6240\u306f`$HOME/.acb/job-history.log`\u3067\u3042\u308b\u3002\n\n- \u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306e\u683c\u7d0d\u5834\u6240\u6307\u5b9a (`--checkpoints-topdir`)\n  `--checkpoints-topdir`\u5f15\u6570\u306b\u3088\u308aGPU/CPU\u306e\u5207\u308a\u66ff\u3048\u6642\u306b\u4fdd\u5b58\u3001\u30ed\u30fc\u30c9\u3059\u308b\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306e\u683c\u7d0d\u5834\u6240\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n  \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u683c\u7d0d\u5834\u6240\u306f`/tmp/.acb-checkpoint-`\u3067\u3042\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1249, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5705a87e-5592-4e6b-8afa-40aeadd2eb49": {"__data__": {"id_": "5705a87e-5592-4e6b-8afa-40aeadd2eb49", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "63f20766-d72d-4e19-83c2-406df7cae3c9", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "57542f053fb310111364d0bd308f91c715f664605eb981cacfdf8a00b989429b", "class_name": "RelatedNodeInfo"}}, "text": "\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u30b8\u30e7\u30d6\u306e\u5b9f\u884c\u4f8b\n\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u30b8\u30e7\u30d6\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u4f8b\u3092\u793a\u3059", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 44, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34a34adb-cabc-425c-b50c-f934f3689aa0": {"__data__": {"id_": "34a34adb-cabc-425c-b50c-f934f3689aa0", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fdaaeb81-9630-4234-b036-adcd8bb52d18", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "cd3ca11469e3a4bfba5b5f4947fcd496992b6801c3b5bae6025bbe2041dd30e8", "class_name": "RelatedNodeInfo"}}, "text": "\u30b7\u30f3\u30b0\u30ebGPU\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u65b9\u6cd5", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 18, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "03769b82-b866-44e7-8e63-a42f4d4ecfbd": {"__data__": {"id_": "03769b82-b866-44e7-8e63-a42f4d4ecfbd", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b6ad252e-ca03-4486-aee3-332d1da28f4d", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "4ffd8734b4f113c22068fec47edb86aa37e76629002c0747dcdc13cadefcc459", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "01ceb261-5490-41cb-935f-c4210bd07654", "node_type": "1", "metadata": {}, "hash": "9e193a030a60e2faf9c94f36caa5463c0e66a795744c938316cc75f65c8cfb00", "class_name": "RelatedNodeInfo"}}, "text": "\u5358\u72ec\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n1. \u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\n\n    ```\n    cd $WORKDIR/adaptive-gpu-allocator/samples\n    ```\n\n2.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 94, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "01ceb261-5490-41cb-935f-c4210bd07654": {"__data__": {"id_": "01ceb261-5490-41cb-935f-c4210bd07654", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b6ad252e-ca03-4486-aee3-332d1da28f4d", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "4ffd8734b4f113c22068fec47edb86aa37e76629002c0747dcdc13cadefcc459", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "03769b82-b866-44e7-8e63-a42f4d4ecfbd", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "afceedbee94171a1822dcbf679e9698245282664c66a7a36ccd21ecaf2552c4f", "class_name": "RelatedNodeInfo"}}, "text": "\u5358\u72ec\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n1. \u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\n\n    ```\n    cd $WORKDIR/adaptive-gpu-allocator/samples\n    ```\n\n2. `agarun`\u3092\u7528\u3044\u3066\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0(sample.py)\u3092\u5b9f\u884c \n   \n   ```\n   agarun python sample.py\n   ```\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u3001GPU\u3067\u51e6\u7406\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\n\n``` \nEpoch 0, Loss: 1.0316227674484253 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 1, Loss: 1.0306103229522705 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 2, Loss: 1.0296107530593872 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 3, Loss: 1.0286246538162231 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 4, Loss: 1.0276520252227783 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 5, Loss: 1.02669358253479 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 6, Loss: 1.0257498025894165 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 7, Loss: 1.0248205661773682 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 8, Loss: 1.0239065885543823 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 9, Loss: 1.023008108139038 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 10, Loss: 1.022125244140625 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 11, Loss: 1.0212583541870117 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 12, Loss: 1.020407795906067 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 13, Loss: 1.01957368850708 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 14, Loss: 1.0187562704086304 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 15, Loss: 1.0179557800292969 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 16, Loss: 1.0171724557876587 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 17, Loss: 1.0164062976837158 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 18, Loss: 1.015657663345337 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 19, Loss: 1.014926552772522 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1775, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e5cde8f-8e23-4602-bf45-98609fabae77": {"__data__": {"id_": "7e5cde8f-8e23-4602-bf45-98609fabae77", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ee938f7-618a-4001-b141-6f83386c0d74", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "d50974dab5645ad703433c695c2c1c9141aa614f75230c62b64677ab5ce70cda", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d31e9ae5-2dce-4610-b45a-eea16bc4c5a4", "node_type": "1", "metadata": {}, "hash": "45e6a768dcdbc39132423552fa30a7b044b375a889a1c8363d3de8cc99cf6e28", "class_name": "RelatedNodeInfo"}}, "text": "\u8907\u6570\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n\u642d\u8f09\u3055\u308c\u305fGPU\u6570\u3088\u308a\u3082\u591a\u304f\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u4f8b\u3092\u793a\u3059\u3002\n\n1. 2GPU\u74b0\u5883\u30673\u30d7\u30ed\u30bb\u30b9\u3092\u5b9f\u884c\n```\nagarun python sample.py >log1 &\nagarun python sample.py >log2 &\nagarun python sample.py >log3 &\n```\n\n1st\u30012nd\u30d7\u30ed\u30bb\u30b9\u306fGPU\u3067\u5b9f\u884c\u3055\u308c\u3001\u6b8b\u308b3rd\u30d7\u30ed\u30bb\u30b9\u306fCPU\u3067\u5b9f\u884c\u3055\u308c\u308b\u3002GPU\u3067\u51e6\u7406\u3055\u308c\u3066\u3044\u305f1st,2nd\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3059\u308b\u3068\u3001CPU\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u305f3rd\u30d7\u30ed\u30bb\u30b9\u304cGPU\u3067\u306e\u5b9f\u884c\u306b\u5207\u308a\u66ff\u308f\u308b\u3002\n\n1st process (log1)\n```\nEpoch 0, Loss: 1.0316227674484253 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 1, Loss: 1.0306103229522705 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 2, Loss: 1.0296107530593872 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 3, Loss: 1.0286246538162231 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 4, Loss: 1.0276520252227783 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 5, Loss: 1.02669358253479 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 6, Loss: 1.0257498025894165 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 7, Loss: 1.0248205661773682 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 8, Loss: 1.0239065885543823 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 9, Loss: 1.023008108139038 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 10, Loss: 1.022125244140625 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 11, Loss: 1.0212583541870117 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 12, Loss: 1.020407795906067 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 13, Loss: 1.01957368850708 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 14, Loss: 1.0187562704086304 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 15, Loss: 1.0179557800292969 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 16, Loss: 1.0171724557876587 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 17, Loss: 1.", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1640, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d31e9ae5-2dce-4610-b45a-eea16bc4c5a4": {"__data__": {"id_": "d31e9ae5-2dce-4610-b45a-eea16bc4c5a4", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ee938f7-618a-4001-b141-6f83386c0d74", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "d50974dab5645ad703433c695c2c1c9141aa614f75230c62b64677ab5ce70cda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e5cde8f-8e23-4602-bf45-98609fabae77", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "632a67e093843a5cb5ce09897ca8f2572927471bfdeeab566ea22af7cca2c4d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "88621d3e-4d9e-49d4-8640-f7804f117c68", "node_type": "1", "metadata": {}, "hash": "890956392e926696651a216cc702266e8bc5116c6b9ad5b3b6158b1a6f4dce85", "class_name": "RelatedNodeInfo"}}, "text": "Loss: 1.01957368850708 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 14, Loss: 1.0187562704086304 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 15, Loss: 1.0179557800292969 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 16, Loss: 1.0171724557876587 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 17, Loss: 1.0164062976837158 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 18, Loss: 1.015657663345337 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 19, Loss: 1.014926552772522 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\n```\n\n2nd process (log2)\n```\nEpoch 0, Loss: 1.0316227674484253 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 1, Loss: 1.0306103229522705 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 2, Loss: 1.0296107530593872 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 3, Loss: 1.0286246538162231 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 4, Loss: 1.0276520252227783 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 5, Loss: 1.02669358253479 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 6, Loss: 1.0257498025894165 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 7, Loss: 1.0248205661773682 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 8, Loss: 1.0239065885543823 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 9, Loss: 1.023008108139038 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 10, Loss: 1.022125244140625 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 11, Loss: 1.0212583541870117 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 12, Loss: 1.020407795906067 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 13, Loss: 1.01957368850708 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 14, Loss: 1.0187562704086304 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 15, Loss: 1.", "mimetype": "text/plain", "start_char_idx": 1318, "end_char_idx": 3071, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "88621d3e-4d9e-49d4-8640-f7804f117c68": {"__data__": {"id_": "88621d3e-4d9e-49d4-8640-f7804f117c68", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ee938f7-618a-4001-b141-6f83386c0d74", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "d50974dab5645ad703433c695c2c1c9141aa614f75230c62b64677ab5ce70cda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d31e9ae5-2dce-4610-b45a-eea16bc4c5a4", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "82c504a32717d91989786e718849896d98ef7b12d402a026d9a9d9d270c20c3a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a33d36b4-beaf-4652-b41c-aaeff3b076f4", "node_type": "1", "metadata": {}, "hash": "3abb40eae09977f667ca60c8a114fb67c232ea1534257eede4f1cded50d2dd2a", "class_name": "RelatedNodeInfo"}}, "text": "Loss: 1.0212583541870117 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 12, Loss: 1.020407795906067 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 13, Loss: 1.01957368850708 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 14, Loss: 1.0187562704086304 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 15, Loss: 1.0179557800292969 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 16, Loss: 1.0171724557876587 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 17, Loss: 1.0164062976837158 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 18, Loss: 1.015657663345337 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\nEpoch 19, Loss: 1.014926552772522 on GPU-173d3486-b338-629d-3b9d-8a3a4c31ea3f\n```\n\n3rd process (log3)\n```\nEpoch 0, Loss: 1.0316228866577148 on CPU\nEpoch 1, Loss: 1.0306103229522705 on CPU\nEpoch 2, Loss: 1.0296107530593872 on CPU\nEpoch 3, Loss: 1.0286246538162231 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 4, Loss: 1.0276520252227783 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 5, Loss: 1.02669358253479 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 6, Loss: 1.0257498025894165 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 7, Loss: 1.0248205661773682 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 8, Loss: 1.0239065885543823 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 9, Loss: 1.023008108139038 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 10, Loss: 1.022125244140625 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 11, Loss: 1.0212583541870117 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 12, Loss: 1.020407795906067 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 13, Loss: 1.01957368850708 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 14, Loss: 1.0187562704086304 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 15, Loss: 1.", "mimetype": "text/plain", "start_char_idx": 2750, "end_char_idx": 4549, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a33d36b4-beaf-4652-b41c-aaeff3b076f4": {"__data__": {"id_": "a33d36b4-beaf-4652-b41c-aaeff3b076f4", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ee938f7-618a-4001-b141-6f83386c0d74", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "d50974dab5645ad703433c695c2c1c9141aa614f75230c62b64677ab5ce70cda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88621d3e-4d9e-49d4-8640-f7804f117c68", "node_type": "1", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "c6091056ac95d7ea5f60e8ea1666a73c476bf39a8ee502f83cbeef1cdd872e15", "class_name": "RelatedNodeInfo"}}, "text": "Loss: 1.0212583541870117 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 12, Loss: 1.020407795906067 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 13, Loss: 1.01957368850708 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 14, Loss: 1.0187562704086304 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 15, Loss: 1.0179557800292969 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 16, Loss: 1.0171724557876587 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 17, Loss: 1.0164062976837158 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 18, Loss: 1.015657663345337 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\nEpoch 19, Loss: 1.014926552772522 on GPU-b9d18b6a-6648-3e3a-90af-d3d717ee8d8f\n```", "mimetype": "text/plain", "start_char_idx": 1161, "end_char_idx": 1860, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f6c022c7-b5ba-4083-b62e-97b2b90205f6": {"__data__": {"id_": "f6c022c7-b5ba-4083-b62e-97b2b90205f6", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4cd8e044-84e7-4012-b957-d4a3c5cc0dfe", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "ab5666e519ea729dbfd94d8888ce9bb72c9d8ef794713e00ae1bc8dbf500d6c2", "class_name": "RelatedNodeInfo"}}, "text": "\u30de\u30eb\u30c1GPU\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u65b9\u6cd5\n\u30de\u30eb\u30c1GPU\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306f`python`\u306e\u4ee3\u308f\u308a\u306b`torchrun`\u3092\u5229\u7528\u3059\u308b\u3002\n1. \u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\n\n    ```\n    cd $WORKDIR/adaptive-gpu-allocator/samples/no_restart/multi_gpu\n    ```\n\n2. `agarun`\u3092\u7528\u3044\u3066\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0(multigpu_torchrun_aga.py)\u3092\u5b9f\u884c \n   \n   ```\n   agarun -- torchrun --standalone --nproc_per_node= multigpu_torchrun_aga.py  \n\n   ```\n   - torchrun\u306e\u5f15\u6570\n     - `--standalone` : \u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u5229\u7528\n     - `--nproc_per_node` : \u30ce\u30fc\u30c9\u5f53\u305f\u308a\u306e\u30d7\u30ed\u30bb\u30b9\u6570\u3002\u5229\u7528\u3059\u308bGPU\u6570\u3068\u540c\u3058\u3002\u6574\u6570\u306e\u307f\u6307\u5b9a\u53ef\u80fd\n\n4\u3064\u306eGPU\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f``\u3092`4`\u306b\u3059\u308b\u3002\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u30014\u3064\u306eGPU(`RANK0`\uff5e`RANK3`)\u3067\u51e6\u7406\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\n\n```\n$ agarun -- torchrun --standalone --nproc_per_node 4 multigpu_torchrun_aga.py 3 3\nW0311 10:53:50.125000 4397 torch/distributed/run.py:793] \nW0311 10:53:50.125000 4397 torch/distributed/run.py:793] *****************************************\nW0311 10:53:50.125000 4397 torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. \nW0311 10:53:50.125000 4397 torch/distributed/run.py:793] *****************************************\n[RANK3] Epoch 0 | Batchsize: 32 | Steps: 16\n[RANK0] Epoch 0 | Batchsize: 32 | Steps: 16\n[RANK2] Epoch 0 | Batchsize: 32 | Steps: 16\n[RANK1] Epoch 0 | Batchsize: 32 | Steps: 16\n[RANK3] Epoch 1 | Batchsize: 32 | Steps: 16\n[RANK2] Epoch 1 | Batchsize: 32 | Steps: 16\n[RANK1] Epoch 1 | Batchsize: 32 | Steps: 16\nEpoch 0 | Training snapshot saved at snapshot.pt\n[RANK0] Epoch 1 | Batchsize: 32 | Steps: 16\n[RANK1] Epoch 2 | Batchsize: 32 | Steps: 16\n[RANK0] Epoch 2 | Batchsize: 32 | Steps: 16\n[RANK2] Epoch 2 | Batchsize: 32 | Steps: 16\n[RANK3] Epoch 2 | Batchsize: 32 | Steps: 16\nYour program has exited successfully.\n`agarun` will release the current device before it exits.\n\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1799, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96bb16b6-5f97-41a7-bd27-4862ccc48ced": {"__data__": {"id_": "96bb16b6-5f97-41a7-bd27-4862ccc48ced", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "747fc7cd-8030-4720-aeae-1226b5880e17", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "70788aef98ec023869c36077cbf5263a7d22d425fa516826220cef892b82563a", "class_name": "RelatedNodeInfo"}}, "text": "\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u30b8\u30e7\u30d6\u306e\u5b9f\u884c\u4f8b\n\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u30b8\u30e7\u30d6\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`samples/no_restart/multi_node/multinode_torchrun_aga.py`)\u306e\u5b9f\u884c\u4f8b\u3092\u793a\u3059", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e8ceb3a-f6c7-4435-845d-5dea1d3c0261": {"__data__": {"id_": "8e8ceb3a-f6c7-4435-845d-5dea1d3c0261", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b48ccaa1-0eb8-4d59-9f2a-b6e8a536da7a", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "318221b47ad2908198d1539161a92da6f0611a9a191afe6de5f2c1049a771baf", "class_name": "RelatedNodeInfo"}}, "text": "\u5b9f\u884c\u624b\u9806\n1. gpu_assigner\u8d77\u52d5\n\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u74b0\u5883\u3067\u306egpu_assigner\u8d77\u52d5\u65b9\u6cd5\u3092\u53c2\u8003\u306b\u3001\u5404\u30ce\u30fc\u30c9\u3067`gpu_assigner`\u3092\u8d77\u52d5\u3057\u3066\u304a\u304f\u3002\n\n2. \u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n   \u4ee5\u964d\u3067\u8aac\u660e\u3059\u308b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306b\u304a\u3044\u3066\u5171\u901a\u3067\u5229\u7528\u3059\u308b\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u3002\n   \u305d\u306e\u305f\u3081\u306b\u3001\u5404\u30ce\u30fc\u30c9\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\u3059\u308b\u3002\n   ```sh\n    $ export CONTROLLER_ADDR=controller\u306eIP\u30a2\u30c9\u30ec\u30b9\n    $ export CONTROLLER_PORT=controller\u3067\u4f7f\u7528\u3059\u308b\u30dd\u30fc\u30c8\u756a\u53f7\n   ```\n\n3. agarun\u5b9f\u884c\n   `contorller`\u304a\u3088\u3073`executor`\u3067\u305d\u308c\u305e\u308c`agarun`\u3092\u8d77\u52d5\u3059\u308b\u3002\n   - `controller`\u3067\u306e`agarun`\u5b9f\u884c\n   ```sh\n   $ AGA_GPU_ALLOC_SERVER_ADDRESS=$CONTROLLER_ADDR \\\n     AGA_GPU_ALLOC_SERVER_PORT=$CONTROLLER_PORT \\\n     agarun -- torchrun \\\n       --nnodes 2 \\\n       --nproc-per-node 1 \\\n       --rdzv-id 123 \\\n       --rdzv-endpoint $CONTROLLER_ADDR:29400 \\\n       --node-rank 0 \\\n       --rdzv-backend static \\\n       samples/no_restart/multi_node/multinode_torchrun_aga.py 10 10\n   ```\n    - `executor`\u3067\u306e`agarun`\u5b9f\u884c\n    ```sh\n    $ AGA_GPU_ALLOC_SERVER_ADDRESS=$CONTROLLER_ADDR \\\n      AGA_GPU_ALLOC_SERVER_PORT=$CONTROLLER_PORT \\\n      agarun -- torchrun \\\n        --nnodes 2 \\\n        --nproc-per-node 1 \\\n        --rdzv-id 123 \\\n        --rdzv-endpoint $CONTROLLER_ADDR:29400 \\\n        --node-rank 1 \\\n        --rdzv-backend static \\\n        samples/no_restart/multi_node/multinode_torchrun_aga.py 10 10\n    ```\n\n    - torchrun \u7528\u5f15\u6570\uff0c\u74b0\u5883\u5909\u6570\u306e\u8aac\u660e\n\n      `--nnodes`: \u30ce\u30fc\u30c9\u6570\n      `--nproc-per-node`\uff1a\u30ce\u30fc\u30c9\u3042\u305f\u308a\u306e\u30d7\u30ed\u30bb\u30b9\u6570\n      `--rdzv-id`\uff1atorchrun \u306e\u30b8\u30e7\u30d6ID\n      `--rdzv-endpoint`\u306b\u6307\u5b9a\u3059\u308b\u30db\u30b9\u30c8 \uff1atorchrun \u3092\u5b9f\u884c\u3059\u308b\u30ce\u30fc\u30c9\u306e\u3069\u308c\u304b\u3092\u6307\u5b9a\u3002\u4e0a\u8a18\u306e\u4f8b\u3067\u306f `$CONTROLLER_ADDR` \u306b\u3057\u3066\u3044\u308b\u3002\n      `--rdzv-endpoint` \u306b\u6307\u5b9a\u3059\u308b\u30dd\u30fc\u30c8\uff1a\u4ed6\u3068\u3076\u3064\u304b\u3089\u306a\u3044\u4efb\u610f\u306e\u30dd\u30fc\u30c8\u3092\u6307\u5b9a\u300229400 \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3002\n      `--node-rank`\uff1a\u30ce\u30fc\u30c9\u306e\u30e9\u30f3\u30af\n      `--rdzv-backend`\uff1a\u30c7\u30d5\u30a9\u30eb\u30c8\u306f c10d\u3060\u304c\u3001\u52d5\u304b\u306a\u3044\u5834\u5408\u306f static\u306b\u3059\u308b\u3002\n\n    - ACB\u7528\u74b0\u5883\u5909\u6570\u306e\u8aac\u660e\n\n      `AGA_GPU_ALLOC_SERVER_ADDRESS`: `controller` \u306e\u30a2\u30c9\u30ec\u30b9\n      `AGA_GPU_ALLOC_SERVER_PORT`: `controller` \u306e\u30dd\u30fc\u30c8\n\n    - \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0(`multinode_torchrun_aga.py`)\u306e\u5f15\u6570\u8aac\u660e\n\n      \u7b2c\uff11\u5f15\u6570\uff1aEpoch\u6570\n      \u7b2c\uff12\u5f15\u6570\uff1a\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u53d6\u5f97\u983b\u5ea6\uff08Epoch\u6570\uff09", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1785, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b6ca97bb-ac99-448f-a4d8-a5b00151a00d": {"__data__": {"id_": "b6ca97bb-ac99-448f-a4d8-a5b00151a00d", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e3012b5d-a520-4565-a8b8-31470fd28f59", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "1d301319b4b709c60d79fafb7f27e4f11054b62da466f94ee4ca0f29a17740d6", "class_name": "RelatedNodeInfo"}}, "text": "\u5b9f\u884c\u7d50\u679c\n- contoroller\u3067\u306e\u5b9f\u884c\u7d50\u679c\n  ```\n  [RANK0] Epoch 0 | Batchsize: 32 | Steps: 32\n  Epoch 0 | Training snapshot saved at snapshot.pt\n  [RANK0] Epoch 1 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 2 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 3 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 4 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 5 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 6 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 7 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 8 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 9 | Batchsize: 32 | Steps: 32\n  Your program has exited successfully.\n  `agarun` will release the current device before it exits.\n  ```\n- executor\u3067\u306e\u5b9f\u884c\u7d50\u679c\n  ```\n  [RANK0] Epoch 0 | Batchsize: 32 | Steps: 32\n  Epoch 0 | Training snapshot saved at snapshot.pt\n  [RANK0] Epoch 1 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 2 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 3 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 4 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 5 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 6 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 7 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 8 | Batchsize: 32 | Steps: 32\n  [RANK0] Epoch 9 | Batchsize: 32 | Steps: 32\n  Your program has exited successfully.\n  `agarun` will release the current device before it exits.\n  ```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1289, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dda25ea0-8ce4-4480-b53b-8944e924b0e1": {"__data__": {"id_": "dda25ea0-8ce4-4480-b53b-8944e924b0e1", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0037f04c-a0df-42fb-b031-a7b36a28b94f", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "c7900823225082fc62a75efde217ec5e1e5cb967a4be007c8e718b995c1c87ba", "class_name": "RelatedNodeInfo"}}, "text": "GPU Assigner\u306e\u505c\u6b62\n`gpu_assigner`\u306fCLI\u3067\u7d42\u4e86\u3059\u308b\u3002\n\u306a\u304a\u3001`gpu_assigner`\u306fSIGHUP\u30b7\u30b0\u30ca\u30eb\u3068SIGINT\u30b7\u30b0\u30ca\u30eb\u3092\u7121\u8996\u3059\u308b\u306e\u3067\u3001\u3053\u308c\u3089\u306e\u30b7\u30b0\u30ca\u30eb\u3092`gpu_assigner`\u306b\u9001\u4fe1\u3057\u3066\u3082\u7d42\u4e86\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 129, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d81c2d31-20d0-4939-91d8-0be8a82d19f0": {"__data__": {"id_": "d81c2d31-20d0-4939-91d8-0be8a82d19f0", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "da1ecc2a-ae04-4a30-9167-230a8f7a195d", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "c987c73da1c17440b2e331af86b5a77c0b91551a044b42542b2b559419b0d888", "class_name": "RelatedNodeInfo"}}, "text": "\u30b7\u30f3\u30b0\u30eb\u30ce\u30fc\u30c9\u74b0\u5883\u3067GPU Assigner\u3092\u505c\u6b62\u3059\u308b\u5834\u5408\n```sh\n$ gpu_assigner stop                # Stop GPU assigner\n\n> INFO: Successfully killed GPU assigner process running on 127.0.0.1:11234 (pid=13412)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 185, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2dfb00b-8546-4f83-b3e7-07d704e73f66": {"__data__": {"id_": "d2dfb00b-8546-4f83-b3e7-07d704e73f66", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a73c1223-af4f-4c1b-ac3b-6558af29fc16", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "3ad26038e29635291d84c4e5ab2d4affde2e555982770fb583c4788dc6c644ec", "class_name": "RelatedNodeInfo"}}, "text": "\u30de\u30eb\u30c1\u30ce\u30fc\u30c9\u74b0\u5883\u3067GPU Assigner\u3092\u505c\u6b62\u3059\u308b\u5834\u5408\nController\u30ce\u30fc\u30c9, Executor\u30ce\u30fc\u30c9\u305d\u308c\u305e\u308c\u3067\u3001`--multinode`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u3001`gpu_assigner --multinode stop`\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3002\n```sh\n$ gpu_assigner --multinode stop                # Stop GPU assigner\n\n> INFO: Successfully killed GPU assigner process running on 127.0.0.1:11234 (pid=13412)\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 293, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "153f31d8-22d8-408c-ae2b-b69095c9d484": {"__data__": {"id_": "153f31d8-22d8-408c-ae2b-b69095c9d484", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5fd79086-51c1-4e0c-922c-7aa211df2921", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "f00ee281a39642a2d314ceb5671b220cefd13b45f5aa87ea645d9d149460be3e", "class_name": "RelatedNodeInfo"}}, "text": "\u7d42\u4e86\u30b3\u30fc\u30c9\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u4e00\u89a7\n\n| \u7d42\u4e86\u30b3\u30fc\u30c9                   | \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8 | \u767a\u751f\u500b\u6240        | \u5185\u5bb9  |\n|:-------------                |:---------------|:-------------|:---|\n| 1                            | Error: Invalid value {} for {}                      | agarun | agarun\u30b3\u30de\u30f3\u30c9\u304c\u5229\u7528\u3059\u308b\u74b0\u5883\u5909\u6570\u306bInvalid\u306a\u5024\u304c\u5165\u3063\u3066\u3044\u305f  |\n| 1                            | Error: Specify your program to run                  | agarun | agarun \u30b3\u30de\u30f3\u30c9\u306b\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\uff08agarun\u30b3\u30de\u30f3\u30c9\u3092\u5f15\u6570\u306a\u3057\u3067\u5b9f\u884c\u3057\u305f\u5834\u5408\uff09|\n| 1                            | Error: Failed to communicate with the GPU assigner. {} | agarun | gpu_assigner \u3068\u306e\u901a\u4fe1\u306b\u5931\u6557\u3057\u305f |\n| 1                            | Error: Failed to execute {}                         | agarun | \u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8d77\u52d5\u306b\u5931\u6557\u3057\u305f |\n| 130                          | \u7279\u306b\u306a\u3057                                            | agarun | agarun\u30b3\u30de\u30f3\u30c9\u3092Ctrl-C\u3067\u7d42\u4e86\u3055\u305b\u305f |\n| \u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u7d42\u4e86\u30b3\u30fc\u30c9 | \u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u4f9d\u5b58\u3059\u308b                          | agarun\u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u884c\u3057\u305f\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0 | \u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u4f9d\u5b58\u3059\u308b |\n| 2            | \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30d8\u30eb\u30d7\u30e1\u30c3\u30bb\u30fc\u30b8\u8868\u793a                                  | gpu_assigner | \u30b3\u30de\u30f3\u30c9\u5f15\u6570\u304c\u4e0d\u6b63 |\n| 0            | WARNING: No command is specified. Use -h or --help option for available commands. | gpu_assigner  | start/status/stop\u306e\u3069\u308c\u304b\u306e\u30b3\u30de\u30f3\u30c9\u304c\u6307\u5b9a\u3055\u308c\u306a\u304b\u3063\u305f |\n| 75           | ERROR: GPU assigner is already running on {}. | gpu_assigner  | start\u6642\uff1agpu_assigner\u3092\u8d77\u52d5\u3067\u304d\u306a\u304b\u3063\u305f\uff08\u3059\u3067\u306b\u8d77\u52d5\u6e08\uff09 |\n| 73           | ERROR: Could not create the default directory of ACB (path={}). | gpu_assigner  | start\u6642\uff1a$HOME/.acb\u3092\u4f5c\u6210\u3067\u304d\u306a\u304b\u3063\u305f |\n| 0\u4ee5\u5916        | ERROR: Failed to start GPU assigner.          | gpu_assigner  | start\u6642\uff1agpu_assigner\u3092\u8d77\u52d5\u3067\u304d\u306a\u304b\u3063\u305f |\n| 69           | ERROR: No GPU assigner is running on {}.      | gpu_assigner  | status/stop\u6642\uff1a\u5b9f\u884c\u4e2d\u306egpu_assigner\u304c\u306a\u304b\u3063\u305f |\n| 65           | ERROR: Could not get a pid from {}.           | gpu_assigner  | status/stop\u6642\uff1agpu_assigner\u306e\u30d7\u30ed\u30bb\u30b9ID\u3092\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f |\n| 65           | ERROR: Could not get a correct pid from {}.   | gpu_assigner  | status/stop\u6642\uff1agpu_assigner\u306e\u30d7\u30ed\u30bb\u30b9ID\u304c\u7834\u640d\u3057\u3066\u3044\u3066\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f |\n| 69           | WARNING: Could not find GPU assigner process (already dead). | gpu_assigner | stop\u6642\uff1agpu_assigner\u306e\u30d7\u30ed\u30bb\u30b9\u304c\u65e2\u306b\u7d42\u4e86\u3057\u3066\u3044\u305f |\n|              |                         |  |  |", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 2056, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "299cd36b-2881-45a2-9e04-cff299c5d3a0": {"__data__": {"id_": "299cd36b-2881-45a2-9e04-cff299c5d3a0", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c1060dbb-fdbb-4002-a322-a57c0b243b80", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "29fbe562c1bd7f1196dda35b0716c94a7069a8016fa7254219bccebcfe5dbde3", "class_name": "RelatedNodeInfo"}}, "text": "(\u88dc\u8db3) Docker\u3092\u7528\u3044\u305f\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 25, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de04b363-f732-4039-bc0c-076cb84ca320": {"__data__": {"id_": "de04b363-f732-4039-bc0c-076cb84ca320", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16a3f718-c4d3-4ca5-96d1-e965c570c1cf", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "084b22dfa321dd4da1fc1aed8c43d7a071f873278966fa4a1f8b8f1a351ccd46", "class_name": "RelatedNodeInfo"}}, "text": "\u6982\u8981\n\u3053\u306e\u7ae0\u3067\u306f\u3001AI Computing Broker\u53ca\u3073\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Docker\u30b3\u30f3\u30c6\u30ca\u4e0a\u3067\u52d5\u304b\u3059\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002Docker\u306b\u3088\u308a\u3001\u74b0\u5883\u69cb\u7bc9\u306e\u624b\u9593\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u3001\u30db\u30b9\u30c8\u74b0\u5883\u3078\u306e\u5f71\u97ff\u3082\u8efd\u6e1b\u3067\u304d\u308b\u3002\u307e\u305f\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u5185\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u52d5\u4f5c\u78ba\u8a8d\u3092\u3001`docker compose build/up`\u30b3\u30de\u30f3\u30c9\u306e\u307f\u3067\u5b9f\u884c\u3067\u304d\u308b\u3002\n\nGPU\u3068\u306e\u901a\u4fe1\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u5185\u306eCUDA\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3001\u30db\u30b9\u30c8OS\u306eGPU\u30c9\u30e9\u30a4\u30d0\u3092\u5229\u7528\u3059\u308b\u3002\n!container_gpu_use\n\n\n\u30b3\u30f3\u30c6\u30ca\u9593\u306e\u901a\u4fe1\u306b\u306fdocker network\u3092\u5229\u7528\u3057\u3001\u30db\u30b9\u30c8OS\u306e\u30dd\u30fc\u30c8\u3092\u958b\u3051\u305a\u306b\u904b\u7528\u3067\u304d\u308b\u3002\n!container_network", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 307, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3abf0af-23a9-45d0-b7c9-09e422807354": {"__data__": {"id_": "b3abf0af-23a9-45d0-b7c9-09e422807354", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5128ba0d-38e6-4fb9-8431-a503bf4756e4", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "fc33515627892845acb3dde20e492da0558ff00bde88a3d7890cb33193bc8164", "class_name": "RelatedNodeInfo"}}, "text": "\u52d5\u4f5c\u8981\u4ef6\n- \u30b3\u30f3\u30c6\u30ca\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308bCUDA\u30e9\u30f3\u30bf\u30a4\u30e0\uff08PyTorch\u30b3\u30f3\u30c6\u30ca\uff1a12.1\u3001TensorFlow\u30b3\u30f3\u30c6\u30ca\uff1a12.2\uff09\u3068\u4e92\u63db\u6027\u306e\u3042\u308bnvidia driver\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3002\n- docker\u53ca\u3073NVIDIA Container Toolkit\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u304a\u308a\u3001`--gpus`\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u3066docker\u30b3\u30f3\u30c6\u30ca\u304b\u3089GPU\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 193, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "35ef1728-bea1-4766-bdf4-6d80b02f910f": {"__data__": {"id_": "35ef1728-bea1-4766-bdf4-6d80b02f910f", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "51b3b5a6-097a-4a3d-9d0c-a1a341687262", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "f743ccf8a8d0e7d7607897cc066eff1bc5a3347c86f0d9a4ee7770f1ea02a8b1", "class_name": "RelatedNodeInfo"}}, "text": "\u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883\n- OS: Ubuntu 18.04\n- Docker CE: 23.0.4 (Docker Compose: 2.18.1)\n- NVIDIA Container Toolkit \uff1a1.10.0-1\n- nvidia driver: 525.147.05", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 137, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c752698-f8cd-41da-91dc-2ef3053bacb8": {"__data__": {"id_": "4c752698-f8cd-41da-91dc-2ef3053bacb8", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b5fd610b-166f-4060-a46a-5bdef8ad3f23", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "1e3fe65e0537f25fe1f522777b856b2c8be7682df4549bf456b839307561a371", "class_name": "RelatedNodeInfo"}}, "text": "NVIDIA Container Toolkit\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u52d5\u4f5c\u78ba\u8a8d\nACB\u3092\u30b3\u30f3\u30c6\u30ca\u4e0a\u3067\u52d5\u304b\u3059\u5834\u5408\u3001docker\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u52a0\u3048\u3066NVIDIA Container Toolkit\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306f\u3001NVIDIA\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u53c2\u7167\u3002\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u3066\u3001NVIDIA Container Toolkit\u306e\u52d5\u4f5c\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3002\n```\n$ docker run --gpus all ubuntu:22.04 nvidia-smi\nFri Aug 30 00:27:18 2024\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 525.147.05   Driver Version: 525.147.05   CUDA Version: 12.0     |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|                               |                      |               MIG M. |\n|===============================+======================+======================|\n|   0  Tesla V100-SXM2...  On   | 00000000:06:00.0 Off |                    0 |\n| N/A   45C    P0    99W / 300W |    861MiB / 16384MiB |     52%      Default |\n|                               |                      |                  N/A |\n+-------------------------------+----------------------+----------------------+\n\n+-----------------------------------------------------------------------------+\n| Processes:                                                                  |\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n|        ID   ID                                                   Usage      |\n|=============================================================================|\n+-----------------------------------------------------------------------------+\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u5834\u5408\u3001NVIDIA Container Toolkit\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u5931\u6557\u3057\u3066\u3044\u308b\u3002\n```\n$ docker run --gpus all ubuntu:22.04 nvidia-smi\ndocker: Error response from daemon: could not select device driver \"\" with capabilities: [[gpu]].\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1836, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8aff6c63-f7ce-4e54-8f62-c9581b4c888a": {"__data__": {"id_": "8aff6c63-f7ce-4e54-8f62-c9581b4c888a", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d913735-aa3c-4e3f-b582-2079983b8b0b", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "3ec84604f92a070f5504ea8ac9cc1ca446cf8ecd540738c12c7d5c493a62441f", "class_name": "RelatedNodeInfo"}}, "text": "\u30b3\u30f3\u30c6\u30ca\u9593\u901a\u4fe1\u306e\u52d5\u4f5c\u78ba\u8a8d\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ca\u304cGPU Assigner\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u63a5\u7d9a\u3067\u304d\u308b\u4e8b\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n```shell\nadaptive-gpu-allocator$ cd docker/sample_workflows/run_samples\nadaptive-gpu-allocator/docker/sample_workflows/run_samples$ docker compose build\nadaptive-gpu-allocator/docker/sample_workflows/run_samples$ docker compose --profile debug down\n# \u7a3c\u50cd\u4e2d\u306e\u30ea\u30bd\u30fc\u30b9\u304c\u3042\u308c\u3070\u3001\u524a\u9664\u3059\u308b\nadaptive-gpu-allocator/docker/sample_workflows/run_samples$ docker compose up connection_test\n```\n\n`docker compose up connection_test`\u306e\u51fa\u529b\u304c`Success: The GPU Assigner endpoint is reachable from this container.`\u306e\u5834\u5408\u3001docker network\u304c\u6b63\u5e38\u306b\u69cb\u7bc9\u3055\u308c\u3066\u3044\u308b\u3002\n`Error: Failed to connect your GPU Assigner container.`\u3068\u51fa\u529b\u3055\u308c\u305f\u5834\u5408\u3001docker network\u306e\u69cb\u7bc9\u306b\u5931\u6557\u3057\u3066\u3044\u308b\u304b\u3001GPU Assigner\u30d7\u30ed\u30bb\u30b9\u304c\u7570\u5e38\u7d42\u4e86\u3057\u3066\u3044\u308b\u3002GPU Assigner\u306b\u5b9f\u884c\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3044\u306a\u3044\u304b\u3001docker network\u5185\u306e\u901a\u4fe1\u3092\u963b\u5bb3\u3059\u308b\u8981\u56e0\u304c\u306a\u3044\u304b\u3001\u78ba\u8a8d\u3059\u308b\u3002\n\n\u51fa\u529b\u5185\u5bb9\u306b\u95a2\u308f\u3089\u305a\u3001\u52d5\u4f5c\u78ba\u8a8d\u306b\u3088\u3063\u3066\u4f5c\u3089\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3057\u3066\u304a\u304f\u3002\n```shell\nadaptive-gpu-allocator/docker/sample_workflows/run_samples$ docker compose --profile debug down\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 892, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "af18fa39-0959-4757-90e9-c87480c351bd": {"__data__": {"id_": "af18fa39-0959-4757-90e9-c87480c351bd", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04ce40ca-3e7a-4710-84de-2790c83ea2e7", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "2c7aadbc2b4f4939d45740b030a8ac32d8959c7640f07a37a923a248f9099c36", "class_name": "RelatedNodeInfo"}}, "text": "docker compose\u3092\u7528\u3044\u305f\u3001\u5404\u7a2e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e00\u62ec\u52d5\u4f5c\u78ba\u8a8d\ndocker compose\u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u5404\u7a2e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4e26\u884c\u3057\u3066\u52d5\u304b\u3057\u306a\u304c\u3089GPU\u304c\u52d5\u7684\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u69d8\u5b50\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3002\u3053\u306e\u3068\u304d\u3001GPU Assigner\u53ca\u3073\u5404\u7a2e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u5404\u3005\u5225\u306e\u30b3\u30f3\u30c6\u30ca\u3068\u3057\u3066\u4e00\u62ec\u3067\u8d77\u52d5\u3055\u308c\u308b\u3002\n\n```shell\nadaptive-gpu-allocator$ cd docker/sample_workflows/run_samples\nadaptive-gpu-allocator/docker/sample_workflows/run_samples$ docker compose build\nadaptive-gpu-allocator/docker/sample_workflows/run_samples$ docker compose up\n# \u5168\u3066\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u6b63\u5e38\u7d42\u4e86\u3057\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\uff08GPU Assigner\u30b3\u30f3\u30c6\u30ca\u3060\u3051\u304c\u6b8b\u3063\u305f\u72b6\u614b\uff09\u3001Ctrl-C\u3067\u4e2d\u65ad\u3059\u308b\nadaptive-gpu-allocator/docker/sample_workflows/run_samples$ docker compose down\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 544, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f5539b95-a240-41b8-8bf2-cfd9ab6f93bf": {"__data__": {"id_": "f5539b95-a240-41b8-8bf2-cfd9ab6f93bf", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2ca9f612-44d7-400f-8325-e86ed06cb0bc", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "c3b035b7491c8f17a19701b37045e5002c04074e058443a3907b7831a5096cf6", "class_name": "RelatedNodeInfo"}}, "text": "\u30b3\u30f3\u30c6\u30ca\u306e\u69cb\u7bc9\u3068\u5b9f\u884c", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 12, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70413ea6-cc42-4168-841c-2adb7189dcf8": {"__data__": {"id_": "70413ea6-cc42-4168-841c-2adb7189dcf8", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ec8c5c8a-988a-4e2a-a6fc-1a12139d0d0c", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "69227056edb5552cb3f3a31cf7ac4816918e27befb62326e69c51e78c807eaa5", "class_name": "RelatedNodeInfo"}}, "text": "\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\n```shell\nadaptive-gpu-allocator$ ./docker/build_images.sh\n```\n\u306a\u304a\u3001BuildKit\u304c\u6709\u52b9\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u6709\u52b9\u306b\u3057\u3066\u5b9f\u884c\u3059\u308b\u3002", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 108, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2cb61df4-eadd-4579-973c-e54c8ea98b6d": {"__data__": {"id_": "2cb61df4-eadd-4579-973c-e54c8ea98b6d", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6e258a43-c2d9-431f-a47e-df7178939cf1", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "13e5a70e4b09de4b79b0f64b70abb38dc9a7a7817a68df9f90df93ad3874b85e", "class_name": "RelatedNodeInfo"}}, "text": "GPU Assigner\u53ca\u3073\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u8d77\u52d5\u624b\u9806\n\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f5c\u6210\u3001GPU Assigner\u8d77\u52d5\n```shell\nadaptive-gpu-allocator$ docker network create aga-network\nadaptive-gpu-allocator$ docker run -d --gpus all --rm --network aga-network --name gpu_assigner gpu_assigner \n```\n\n\nPyTorch\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n```shell\nadaptive-gpu-allocator$ docker run --gpus all --rm --network aga-network --env AGA_GPU_ALLOC_SERVER_ADDRESS=gpu_assigner aga_pytorch\n```\nTensorFlow\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\n```shell\nadaptive-gpu-allocator$ docker run --gpus all --rm --network aga-network --env AGA_GPU_ALLOC_SERVER_ADDRESS=gpu_assigner aga_tensorflow\n```\n\n\u7559\u610f\u4e8b\u9805\uff1a\n- `AGA_GPU_ALLOC_SERVER_ADDRESS`\u306e\u5024\u306f\u3001GPU Assigner\u30b3\u30f3\u30c6\u30ca\u306e\u30b3\u30f3\u30c6\u30ca\u540d\u3068\u4e00\u81f4\u3057\u3066\u3044\u308b\u5fc5\u8981\u3042\u308a\n- TensorFlow\u30b3\u30f3\u30c6\u30ca\u306b\u304a\u3044\u3066\u306f\u3001`AGA_USE_RESTART=1`\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001ACB\u306ea.\u518d\u8d77\u52d5\u306a\u3057\u7248\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u660e\u793a\u7684\u306b`AGA_USE_RESTART=0`\u3092\u6307\u5b9a\u3059\u308b\u3002\u307e\u305fPyTorch\u7248\u306b\u304a\u3044\u3066ACB\u306eb.\u518d\u8d77\u52d5\u3042\u308a\u7248\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u660e\u793a\u7684\u306b`AGA_USE_RESTART=1`\u3092\u6307\u5b9a\u3059\u308b\u3002\n- \u672c\u624b\u9806\u3067\u306f\u3001GPU Assigner\u3068\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u9593\u306e\u901a\u4fe1\u306bdocker network\u3092\u7528\u3044\u308b\u3002docker network\u3092\u7528\u3044\u305a\u306b\u8d77\u52d5\u3059\u308b\u5834\u5408\u306f\u9069\u5b9c\u5f15\u6570\u3092\u4fee\u6b63\u3059\u308b\u3002\n\nGPU Assigner\u7d42\u4e86\n```shell\nadaptive-gpu-allocator$ docker rm -f gpu_assigner \nadaptive-gpu-allocator$ docker network rm aga-network\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1041, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1aaf3759-be87-471c-a65d-42c885371509": {"__data__": {"id_": "1aaf3759-be87-471c-a65d-42c885371509", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f289d1e-a12f-43f2-a9c0-54bfd9e6819c", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "0f779f65d89b5a503094bf0425cc2e11fab521fe2aadb66a21ae98a33feb6145", "class_name": "RelatedNodeInfo"}}, "text": "\u30e6\u30fc\u30b6\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\nGPU Assigner\u30b3\u30f3\u30c6\u30ca\u304c\u3059\u3067\u306b\u8d77\u52d5\u6e08\u307f\u3067\u3042\u308b\u3082\u306e\u3068\u3059\u308b\u3002\n\nACB\u306ea.\u518d\u8d77\u52d5\u306a\u3057\u7248\u3092\u7528\u3044\u3066\u3001\u66f8\u304d\u63db\u3048\u6e08\u307f\u306ePyTorch\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\u3059\u308b\u5834\u5408\n```shell\n$ ls\nmyapp.py\n$ docker run --gpus all --rm --network aga-network --env AGA_GPU_ALLOC_SERVER_ADDRESS=gpu_assigner -v `pwd`:/mnt:ro aga_pytorch /mnt/myapp.py\n```\nACB\u306eb.\u518d\u8d77\u52d5\u3042\u308a\u7248\u3092\u7528\u3044\u3066\u3001\u66f8\u304d\u63db\u3048\u6e08\u307f\u306eTensorFlow\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\u3059\u308b\u5834\u5408\n```shell\n$ ls\nmyapp.py\n$ docker run --gpus all --rm --network aga-network --env AGA_GPU_ALLOC_SERVER_ADDRESS=gpu_assigner -v `pwd`:/mnt:ro aga_tensorflow /mnt/myapp.py\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 485, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac436e34-708f-4150-a4d0-299e37130479": {"__data__": {"id_": "ac436e34-708f-4150-a4d0-299e37130479", "embedding": null, "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ce71802c-e56c-4338-be36-b0b4b27dc077", "node_type": "4", "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}, "hash": "750262ec4a9b144a755e7660c8b59cd27d572310bf1aa5a4e25cff1d48a4e565", "class_name": "RelatedNodeInfo"}}, "text": "\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u65b9\u6cd5\n\u5b9f\u884c\u4e2d\u306eGPU Assigner\u30b3\u30f3\u30c6\u30ca\u306e\u7d42\u4e86\u65b9\u6cd5\u306f\u3001\u5148\u8ff0\u306e\u901a\u308a\u3002\n\n`docker compose`\u3092\u7528\u3044\u3066\u751f\u6210\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3059\u308b\u305f\u3081\u3001`docker/sample_workflows`\u5185\u306e\u5404\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u304a\u3044\u3066\u3001`docker compose down --rmi all --remove-orphans`\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u3001`./docker/build_images.sh`\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3059\u308b\u3002\n```shell\nadaptive-gpu-allocator$ ./docker/remove_images.sh\n```", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 297, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"ab8ed873-adea-41a3-8ec8-d02c36eee2e7": {"node_ids": ["419bf342-7b1a-484c-957f-061d1a926caf"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "408a03cf-42d0-42fd-8042-864805fa05d0": {"node_ids": ["292a917f-d0f4-4265-ac3b-aacc0308fa3e", "b1c2ccec-eb5c-43e8-9c25-f916fe097e30"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "99fe5578-4e9c-46d4-b8aa-6fb261c2ef82": {"node_ids": ["555f7bd3-d8cc-4e23-ba8d-b3deea8133f1"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "0c4fe3d0-2f55-47a2-babb-a36574d3b16b": {"node_ids": ["f3cfc936-38bd-4b95-aab6-5f2c8f1ae82b"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "09eb1de5-f834-41c0-8c98-5f5223fe898d": {"node_ids": ["24ae0011-fa92-4365-b720-99fe09b3b548"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "634c2183-6e04-4993-8f17-b001eb34ce52": {"node_ids": ["983151e4-142e-4af9-9410-70f44c7b18ca"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "e0580435-5991-4673-8bdf-4d2eba245324": {"node_ids": ["f2208d73-129e-4002-b430-404c0c595c5b"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "46a4d588-8d50-4327-ae04-3d6956ccde1c": {"node_ids": ["6c7d3b03-4cad-4941-b941-ec1fd7ba0f3b"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "87c28f1f-616e-4153-800a-f0fc434c258f": {"node_ids": ["47aa861e-ed5e-43a2-be22-aad3a410bf73"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "0ed883a8-a9ea-4fa3-b68e-0059b75f28da": {"node_ids": ["fcbde855-97bc-4adb-859a-4d3be99938a8"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "0a64fe94-e2c4-4a2f-a988-533b99728d70": {"node_ids": ["ddb0872f-9170-4de9-9807-e1188986af79"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "62ba12ab-4226-44e4-943f-3ef6ff5875c4": {"node_ids": ["637d1d66-52b9-4c48-aed3-aa5730212886"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "0211fe7f-cede-4642-a818-26a0487747c9": {"node_ids": ["611d1745-d4ea-4cfa-81a0-90f1b64cf1e7"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "f01c9740-3279-4e2c-9c0c-5b0253123641": {"node_ids": ["5dd65121-4b7b-4d3a-9693-3d3fd0008248"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "78c74be0-8a8d-423e-8a3a-f48ffe55ea6c": {"node_ids": ["d734e832-b9da-4e8f-8448-e1adf22945b5"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "24963666-f4f5-4927-9648-3928e2ab9344": {"node_ids": ["7844480e-ae59-4260-8624-bcf7b8145dcd"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "cdabb918-fc54-479b-aaca-2616123db8b4": {"node_ids": ["43fcb93e-42f6-4803-9bbd-2c169f9cefbd"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "799b815b-3656-41d0-b00d-af28d12ac079": {"node_ids": ["72ca7ddb-e75f-439d-918a-447ceeed4f9b"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "6bdbd12d-f197-483b-a521-6d427d4bf052": {"node_ids": ["81a5b702-8121-4854-aefd-9def6d9f1b31"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "bcbe422a-d602-4979-bd3e-6c4543782b7d": {"node_ids": ["766bf5d6-a4b5-44cc-a847-adb9349ca362"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "61f5b9af-3b07-40a7-a6eb-40e5966bcedd": {"node_ids": ["80c4e768-6217-4c46-af96-7ca1fe2922fd"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "bba6b4c4-03af-4769-96e6-6ed7e6dd0485": {"node_ids": ["361c70c9-3ded-46eb-83d9-fd6880bbe72c"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "2dd2a0c1-e166-4c6d-87f7-0966b2c4b959": {"node_ids": ["4d9b5fb7-960e-470f-9363-f511dc254cab"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "440814f2-187a-4dca-ad87-ffb3c0f77bbf": {"node_ids": ["e9514f4f-8bf1-4519-bbad-9b294b0ef386"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "b1c6269c-97db-449d-b299-1e72edb83239": {"node_ids": ["7fdf8e34-60d8-43da-8930-16b90fe57592"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "95062667-6bc9-44a7-bd6b-506e4d0f07dd": {"node_ids": ["82829234-b295-4eec-8a00-0dc7746622a5"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "112d9d33-aab9-4557-9695-98aa1cdc3f77": {"node_ids": ["d4af325b-4436-4a80-b963-2f09693b5608"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "9dfeb9aa-f1d8-44ba-ac40-22c25185e8ca": {"node_ids": ["08403595-928e-4afd-91d5-57c355e28cd6"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "4c932706-3b61-4058-812d-a5a211d045e6": {"node_ids": ["a1295758-3432-419d-9bf3-f9852b3d8633"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "8b9e5d7e-72c8-4c76-8be3-651361362351": {"node_ids": ["d2f1c961-6f9d-4d26-8995-a6a7902b1db6"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "48471b64-bfa4-4ad9-a3f7-6b01e0b0ef3c": {"node_ids": ["10c76921-9b71-49c8-a8f0-b5e6ab4f4a0b"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "d7067e68-1a37-4ccf-9874-93ab9bba84fa": {"node_ids": ["0ed0e892-f3ef-4ff2-b537-cab439eea8bd"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "9aec2e82-1e7d-417c-bc8e-76da10055d04": {"node_ids": ["da15237b-5031-499e-bc55-6dbace671cab"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "b986dc2a-50f9-48a7-b357-a3176c3e8411": {"node_ids": ["295441d5-0a19-406f-8c26-34aab600154d"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "f1186b8d-993d-4545-8516-06de9596ec52": {"node_ids": ["96c8644f-0595-4f52-8581-bf69d228b780", "df990b47-47b7-498b-9b9a-8275d7f3c81f"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "b1588156-7774-45bf-b9ca-8f1048d44312": {"node_ids": ["0818e267-99a1-4c06-956f-9dc7253ee84d"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "f5ad317b-bc3f-47f3-8936-c213e2872a9b": {"node_ids": ["454b85b6-100a-4c93-8c00-cbf9178b5ec1"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "fc4fb852-f131-4a48-b4bd-46d3b6c6583c": {"node_ids": ["b3402e6d-8883-46e1-9fda-f82ba12c8c88"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "c5467f3a-a485-4c90-b9dd-fdadc07b9a01": {"node_ids": ["ed8f7884-a49b-460c-aa67-751db413eb81", "5a97c0bc-ac10-4d24-aef1-a8384cd2b3a7"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "9f4c5eb1-0297-4808-9bac-b7f81e50638f": {"node_ids": ["1efc08dd-d105-4a27-9ac5-b09dac159859", "4f1b8d40-4d55-41a5-be6c-eb29a9bd7e49", "0664e40a-45e6-457d-839b-40526bfc2c19", "309d2c0e-57df-4085-b09f-ac6a2a6521b5", "66847969-6324-4907-bab5-6330602dbd94"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "4210146d-9cbe-42cf-93d0-12eba63acab5": {"node_ids": ["0f3ebd93-a2cb-41a0-9c0f-4966b6c5785c", "4182b845-c6bb-4259-ad11-2b17cb790e5d", "bdba0ac0-8d0b-46a4-8d31-18a876c71c23", "53776889-6664-4cb2-ad6a-37a98943a76f", "9e8b4af3-674d-4d2b-b6db-8df95f50a4a9"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "7f3241a1-910b-44d6-8dfe-c1d3e6a19639": {"node_ids": ["f4d76b91-9476-4224-bde9-4df1aaf217db"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "56d3bb6f-1558-4c15-a582-5c244046cc8f": {"node_ids": ["f7342c69-858b-42eb-893b-30ddf57d37a3"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "f102f05b-5a20-449b-8f90-0b14894aef47": {"node_ids": ["8a874b45-0317-4384-9793-e328a0436a58"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "aa03bec3-b246-416d-8186-1b220a9c117b": {"node_ids": ["52bf7ada-c8b9-4726-991e-a153dffa8054"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "c679ba10-a80c-4e11-b898-83c56e7496be": {"node_ids": ["8516fe14-0eee-4dec-9f88-04214869c04f"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "d58834da-21eb-4aae-8957-faa9017de181": {"node_ids": ["07482b45-d893-4b07-a532-6d1ddaa5daff"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "662cb779-47c8-4938-99ed-399605f099a6": {"node_ids": ["7fce27a5-38e4-4e0b-b4ac-33f9219f1848"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "5e74ae15-f586-40b6-81e6-a3e5b23d0ef1": {"node_ids": ["d13eb581-58d9-41f8-b36d-a45f8890c5a9"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "55243d0f-b4da-46f9-a52d-f10344826f73": {"node_ids": ["15cbba0f-56c0-4786-8227-a258ed30ce7f"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "da9f41af-8f83-4aba-bd8a-5a2374b0155f": {"node_ids": ["56953eef-3c3e-44dd-b202-ff0cff7b2d84"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "6e823a71-ac99-4804-a7e7-898bcdb561fa": {"node_ids": ["b150dfb4-d4bb-4968-b2f4-09b7a02443d1", "166d6555-65c6-4ee0-bd9a-0e016f3ae1dc"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "bc67d9ae-d08f-43bd-bb0f-6af9b8266375": {"node_ids": ["74648a0e-ccd7-4ae2-b83e-0d88500dc494", "c35e7566-7e86-4c2c-91a7-297b6949cd0f"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "ae700bcc-f157-401b-a3df-25ae4f9b2bc5": {"node_ids": ["d3aa3d7c-847e-4c8a-bd24-bf80a75b0044", "068ecc10-f6ad-4ac6-839e-7da258ed4fda"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "3f5fbd7b-6020-4eaa-b05d-9d9bedb4373a": {"node_ids": ["bc73fbfb-37ae-45e6-83bd-30ea0a646376"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "7ecca624-7287-46f1-88a3-9e332bf7dc5d": {"node_ids": ["7d4f7dd2-8534-40c6-8964-53320aa3f580"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "b51db9bd-2847-47e5-b277-7341bd57d4f3": {"node_ids": ["a433e0cf-3fa6-427f-9b10-03218e07b7db"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "63f20766-d72d-4e19-83c2-406df7cae3c9": {"node_ids": ["5705a87e-5592-4e6b-8afa-40aeadd2eb49"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "fdaaeb81-9630-4234-b036-adcd8bb52d18": {"node_ids": ["34a34adb-cabc-425c-b50c-f934f3689aa0"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "b6ad252e-ca03-4486-aee3-332d1da28f4d": {"node_ids": ["03769b82-b866-44e7-8e63-a42f4d4ecfbd", "01ceb261-5490-41cb-935f-c4210bd07654"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "0ee938f7-618a-4001-b141-6f83386c0d74": {"node_ids": ["7e5cde8f-8e23-4602-bf45-98609fabae77", "d31e9ae5-2dce-4610-b45a-eea16bc4c5a4", "88621d3e-4d9e-49d4-8640-f7804f117c68", "a33d36b4-beaf-4652-b41c-aaeff3b076f4"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "4cd8e044-84e7-4012-b957-d4a3c5cc0dfe": {"node_ids": ["f6c022c7-b5ba-4083-b62e-97b2b90205f6"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "747fc7cd-8030-4720-aeae-1226b5880e17": {"node_ids": ["96bb16b6-5f97-41a7-bd27-4862ccc48ced"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "b48ccaa1-0eb8-4d59-9f2a-b6e8a536da7a": {"node_ids": ["8e8ceb3a-f6c7-4435-845d-5dea1d3c0261"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "e3012b5d-a520-4565-a8b8-31470fd28f59": {"node_ids": ["b6ca97bb-ac99-448f-a4d8-a5b00151a00d"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "0037f04c-a0df-42fb-b031-a7b36a28b94f": {"node_ids": ["dda25ea0-8ce4-4480-b53b-8944e924b0e1"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "da1ecc2a-ae04-4a30-9167-230a8f7a195d": {"node_ids": ["d81c2d31-20d0-4939-91d8-0be8a82d19f0"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "a73c1223-af4f-4c1b-ac3b-6558af29fc16": {"node_ids": ["d2dfb00b-8546-4f83-b3e7-07d704e73f66"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "5fd79086-51c1-4e0c-922c-7aa211df2921": {"node_ids": ["153f31d8-22d8-408c-ae2b-b69095c9d484"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "c1060dbb-fdbb-4002-a322-a57c0b243b80": {"node_ids": ["299cd36b-2881-45a2-9e04-cff299c5d3a0"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "16a3f718-c4d3-4ca5-96d1-e965c570c1cf": {"node_ids": ["de04b363-f732-4039-bc0c-076cb84ca320"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "5128ba0d-38e6-4fb9-8431-a503bf4756e4": {"node_ids": ["b3abf0af-23a9-45d0-b7c9-09e422807354"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "51b3b5a6-097a-4a3d-9d0c-a1a341687262": {"node_ids": ["35ef1728-bea1-4766-bdf4-6d80b02f910f"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "b5fd610b-166f-4060-a46a-5bdef8ad3f23": {"node_ids": ["4c752698-f8cd-41da-91dc-2ef3053bacb8"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "0d913735-aa3c-4e3f-b582-2079983b8b0b": {"node_ids": ["8aff6c63-f7ce-4e54-8f62-c9581b4c888a"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "04ce40ca-3e7a-4710-84de-2790c83ea2e7": {"node_ids": ["af18fa39-0959-4757-90e9-c87480c351bd"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "2ca9f612-44d7-400f-8325-e86ed06cb0bc": {"node_ids": ["f5539b95-a240-41b8-8bf2-cfd9ab6f93bf"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "ec8c5c8a-988a-4e2a-a6fc-1a12139d0d0c": {"node_ids": ["70413ea6-cc42-4168-841c-2adb7189dcf8"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "6e258a43-c2d9-431f-a47e-df7178939cf1": {"node_ids": ["2cb61df4-eadd-4579-973c-e54c8ea98b6d"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "8f289d1e-a12f-43f2-a9c0-54bfd9e6819c": {"node_ids": ["1aaf3759-be87-471c-a65d-42c885371509"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}, "ce71802c-e56c-4338-be36-b0b4b27dc077": {"node_ids": ["ac436e34-708f-4150-a4d0-299e37130479"], "metadata": {"file_path": "/home/awamoto/acb_demo-main/rag/data_jp/userguide.md", "file_name": "userguide.md", "file_type": "text/markdown", "file_size": 120750, "creation_date": "2025-04-30", "last_modified_date": "2025-04-30"}}}}